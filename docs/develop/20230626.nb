(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    327325,       7008]
NotebookOptionsPosition[    222481,       5117]
NotebookOutlinePosition[    314705,       6808]
CellTagsIndexPosition[    314662,       6805]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[" \:7df4\:7fd2\:306b\:30ef\:30f3\:30b9\:30c6\:30c3\:30d7\:305a\:3064\
\:8a08\:7b97\:3055\:305b\:3066\:307f\:308b\:3002 ", "Text",
 CellChangeTimes->{{3.896732473381661*^9, 3.896732505612548*^9}, {
  3.896751565953027*^9, 
  3.896751569206993*^9}},ExpressionUUID->"531f5a85-d355-474d-88f9-\
7982c61a4b0f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"DATA", " ", "SPECIFICATION"}], "*)"}],
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["\[IndentingNewLine]",
   FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Specify", " ", "the", " ", "file", " ", "name", " ", "of", " ", "your", 
    " ", 
    RowBox[{"data", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"datafile", "=", "\"\<J15S500.csv\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    StyleBox[
     RowBox[{
     "Put", " ", "the", " ", "data", " ", "file", " ", "in", " ", "the", " ", 
      "same", " ", "folder", " ", "where", " ", "this", " ", "Mathematica", 
      " ", "program", " ", "is", " ", 
      RowBox[{"placed", "."}]}],
     FontColor->RGBColor[1, 0, 0]], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Do", " ", "not", " ", "delete", " ", "the", " ", "folder", " ", "named", 
     " ", "as", " ", "\"\<mod.\>\""}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Specify", " ", "the", " ", "row", " ", "number", " ", "in", " ", "which",
      " ", "the", " ", "item", " ", "labels", " ", "are", " ", 
     RowBox[{"input", ".", " ", "The"}], " ", "program", " ", "considers", 
     " ", "the", " ", "reponse", " ", "data", " ", "start", " ", "from", " ", 
     "the", " ", "next", " ", 
     RowBox[{"row", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"itemlabelrow", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Specify", " ", "the", " ", "column", " ", "number", " ", "in", " ", 
     "which", " ", "the", " ", "student", " ", "IDs", " ", "are", " ", 
     RowBox[{"input", ".", " ", "The"}], " ", "program", " ", "considers", 
     " ", "the", " ", "reponse", " ", "data", " ", "start", " ", "from", " ", 
     "the", " ", "next", " ", 
     RowBox[{"column", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"studentIDcolumn", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "missing", " ", "indicator", " ", "must", " ", "be", " ", "a",
      " ", "numerical", " ", 
     RowBox[{"value", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mi", "=", 
     RowBox[{"-", "99"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ANALYSIS", " ", "SETTING"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Select", " ", "2"}], "-"}], ",", " ", 
     RowBox[{"3", "-"}], ",", " ", 
     RowBox[{
      RowBox[{"or", " ", "4"}], "-", 
      RowBox[{"parameter", " ", "logistic", " ", 
       RowBox[{"model", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"model", "=", "3"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.8967325192481833`*^9, {3.896910808310914*^9, 3.896910810577223*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"caee3d92-5409-4860-976e-2ef5e18a887e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"irt", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_", ",", "e_", ",", "theta_"}],
     "]"}], ":=", 
   RowBox[{"c", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "-", "c"}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "a"}], " ", 
          RowBox[{"(", 
           RowBox[{"theta", "-", "b"}], ")"}]}], "]"}]}], ")"}], "^", 
      "e"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infoyen", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", "^", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "-", "c"}], ")"}], "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"d", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"a", "*", 
           RowBox[{"(", 
            RowBox[{"x", "-", "b"}], ")"}]}], "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "c", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "d"}], ")"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"a", "*", 
           RowBox[{"(", 
            RowBox[{"x", "-", "b"}], ")"}]}], "]"}]}]}], ")"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "a"}], "*", 
           RowBox[{"(", 
            RowBox[{"x", "-", "b"}], ")"}]}], "]"}]}], ")"}], "^", "2"}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"slopeprior", "[", 
   RowBox[{"a_", ",", "m_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Max", "[", 
          RowBox[{"a", ",", "const"}], "]"}], "]"}], "-", "m"}], ")"}], "^", 
      "2"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", 
      RowBox[{"s", "^", "2"}]}], ")"}]}], "-", 
   RowBox[{"Log", "[", 
    RowBox[{"Max", "[", 
     RowBox[{"a", ",", "const"}], "]"}], "]"}], "-", 
   RowBox[{"Log", "[", "s", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"asymprior", "[", 
    RowBox[{"c_", ",", "alp_", ",", "bet_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alp", "-", "1"}], ")"}], "*", 
     RowBox[{"Log", "[", "c", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"bet", "-", "1"}], ")"}], "*", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "c"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.896734435959053*^9, {3.896734466266444*^9, 3.896734467014431*^9}, 
   3.896817587778823*^9, 3.896819498934115*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"b7642510-9adb-41d0-8d0a-6fc069913880"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"slopeprior", "[", 
  RowBox[{"1", ",", "0", ",", "0.5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"asymprior", "[", 
  RowBox[{"0.1", ",", "2", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.896819512247108*^9, 3.896819581937934*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"cf84ce1c-9071-422a-b65e-e81d6b1e5687"],

Cell[BoxData[
 RowBox[{"0.6931471805599453`", "\[VeryThinSpace]", "-", 
  RowBox[{"Log", "[", 
   RowBox[{"Max", "[", 
    RowBox[{"1", ",", "const"}], "]"}], "]"}], "-", 
  RowBox[{"2.`", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"Max", "[", 
      RowBox[{"1", ",", "const"}], "]"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.896822861145897*^9, 3.896828318263242*^9, 3.896828448853842*^9, 
   3.896903040278421*^9, {3.896903357312643*^9, 3.896903376737879*^9}, 
   3.896903438492985*^9, 3.896995898274185*^9, 3.896996446298627*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8d68d203-fa38-4a3f-9399-3395852fa36e"],

Cell[BoxData[
 RowBox[{"-", "2.7240271556253504`"}]], "Output",
 CellChangeTimes->{
  3.896822861145897*^9, 3.896828318263242*^9, 3.896828448853842*^9, 
   3.896903040278421*^9, {3.896903357312643*^9, 3.896903376737879*^9}, 
   3.896903438492985*^9, 3.896995898274185*^9, 3.896996446300807*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"0900ad8a-be04-4483-bb93-871be4d4fcc4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"binorm", "[", 
    RowBox[{"x1_", ",", "x2_", ",", "rho_"}], "]"}], ":=", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "rho"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"rho", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"condnorm", "[", 
     RowBox[{"xj_", ",", "zeta_", ",", "rho_"}], "]"}], ":=", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"rho", "*", "zeta"}], ",", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          RowBox[{"rho", "^", "2"}]}], "]"}]}], "]"}], ",", "xj"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataformat", "[", "data0_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "=", "data0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"IntegerQ", "[", "itemlabelrow", "]"}], "==", "False"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "invalidrow", "]"}], ";", 
         RowBox[{"Exit", "[", "]"}]}], ",", 
        RowBox[{"itemlabelrow", "<=", "0"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "invalidrow", "]"}], ";", 
         RowBox[{"Exit", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"IntegerQ", "[", "studentIDcolumn", "]"}], "==", "False"}], 
        ",", 
        RowBox[{
         RowBox[{"Print", "[", "invalidcol", "]"}], ";", 
         RowBox[{"Exit", "[", "]"}]}], ",", 
        RowBox[{"studentIDcolumn", "<=", "0"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "invalidcol", "]"}], ";", 
         RowBox[{"Exit", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"itemlabel", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", "itemlabelrow", "]"}], "]"}], ",", "studentIDcolumn"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"doublelabelcheck", "[", 
       RowBox[{"itemlabel", ",", "datafile"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testlength", "=", 
       RowBox[{"Length", "[", "itemlabel", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"studentID", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "studentIDcolumn"}], "]"}], "]"}], ",", 
         "itemlabelrow"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"samplesize", "=", 
       RowBox[{"Length", "[", "studentID", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uuu", "=", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"studentIDcolumn", "+", "1"}], ";;", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{
           RowBox[{"itemlabelrow", "+", "1"}], ";;", 
           RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"zzz", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"Sign", "[", 
         RowBox[{"uuu", "-", "mi"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uuu", "*=", "zzz"}], ";", "\[IndentingNewLine]", 
      RowBox[{"excludeitems", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Total", "[", "uuu", "]"}], ",", "samplesize"}], "]"}], 
          ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Total", "[", "uuu", "]"}], ",", "0"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"includeitems", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "testlength"}], "}"}]}], "]"}], ",", 
         "excludeitems"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"itemlabel", "=", 
       RowBox[{"itemlabel", "[", 
        RowBox[{"[", "includeitems", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testlength", "=", 
       RowBox[{"Length", "[", "itemlabel", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"testlength", "<=", "3"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "leasttestlength", "]"}], ";", 
         RowBox[{"Exit", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zzz", "=", 
       RowBox[{"zzz", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "includeitems"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uuu", "=", 
       RowBox[{"uuu", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "includeitems"}], "]"}], "]"}]}], ";"}]}], 
    "]"}]}], ";"}], "\n"}], "Input",
 CellChangeTimes->{
  3.896734435959053*^9, {3.896734466266444*^9, 3.896734467014431*^9}, 
   3.896817587778823*^9, 3.896819498934115*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"978ff87a-a4b2-4955-b871-a2388963be16"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"itemstat", "[", "data0_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "=", "data0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"dataformat", "[", "data", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "Student", "*)"}], 
      RowBox[{"numberofresponses", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"zzz", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"totalscore", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"uuu", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"passagerate", "=", 
       RowBox[{"N", "[", 
        RowBox[{"totalscore", "/", "numberofresponses"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"standardizedscore", "=", 
       RowBox[{"Standardize", "[", "passagerate", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outputstudentlabel", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Student\>\"", ",", "\"\<Number of Responses\>\"", ",", 
         "\"\<Number-Right Score\>\"", ",", "\"\<Passage Rate\>\"", ",", 
         "\"\<Standardized Score\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"outputstudent", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
           "studentID", ",", "numberofresponses", ",", "totalscore", ",", 
            "passagerate", ",", "standardizedscore"}], "}"}], "]"}], ",", 
         "outputstudentlabel"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Test Statistics\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"meanTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Mean", "[", "totalscore", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"varTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Variance", "[", "totalscore", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sdTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Sqrt", "[", "varTS", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"meanofSETS", "=", 
       RowBox[{"sdTS", "/", 
        RowBox[{"Sqrt", "[", "samplesize", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"skewTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Skewness", "[", "totalscore", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kurtTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Kurtosis", "[", "totalscore", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minTS", "=", 
       RowBox[{"Min", "[", "totalscore", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxTS", "=", 
       RowBox[{"Max", "[", "totalscore", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"outputtestlabel", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<N of Items\>\"", ",", "\"\<Sample Size\>\"", ",", "\"\<Mean\>\"",
          ",", "\"\<SE of Mean\>\"", ",", "\"\<SD\>\"", ",", 
         "\"\<Skewness\>\"", ",", "\"\<Kurtosis\>\"", ",", "\"\<Min\>\"", 
         ",", "\"\<Max\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputtest", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"outputtestlabel", ",", 
          RowBox[{"{", 
           RowBox[{
           "testlength", ",", "samplesize", ",", "meanTS", ",", "meanofSETS", 
            ",", "sdTS", ",", "skewTS", ",", "kurtTS", ",", "minTS", ",", 
            "maxTS"}], "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "[", "outputtest", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outputtest", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Author\>\"", ",", "\"\<SHOJIMA Kojiro\>\""}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Analysis Date\>\"", ",", 
             RowBox[{"DateString", "[", 
              RowBox[{"CurrentDate", "[", "]"}], "]"}]}], "}"}]}], "}"}], ",",
          "outputtest"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Item Statistics\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"itemsamplesize", "=", 
       RowBox[{"Total", "[", "zzz", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"crr", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Total", "[", "uuu", "]"}], "/", "itemsamplesize"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"itemthreshold", "=", 
       RowBox[{"InverseCDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", 
         RowBox[{"1", "-", "crr"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dev", "=", 
       RowBox[{"zzz", "*", 
        RowBox[{"(", 
         RowBox[{"uuu", "-", 
          RowBox[{"Outer", "[", 
           RowBox[{"Times", ",", 
            RowBox[{"Table", "[", 
             RowBox[{"1", ",", 
              RowBox[{"{", "samplesize", "}"}]}], "]"}], ",", "crr"}], 
           "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"var", "=", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"dev", "^", "2"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"itemsamplesize", "-", "1"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sd", "=", 
       RowBox[{"Sqrt", "[", "var", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"itc", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "dev", "]"}], ".", "standardizedscore"}], 
         "/", "sd"}], "/", "itemsamplesize"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputitemlabel", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Item\>\"", ",", "\"\<Number of Respondents\>\"", ",", 
         "\"\<Correct Response Rate\>\"", ",", "\"\<Item Threshold\>\"", ",", 
         "\"\<Item-Total Correlation\>\""}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outputitem", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
           "itemlabel", ",", "itemsamplesize", ",", "crr", ",", 
            "itemthreshold", ",", "itc"}], "}"}], "]"}], ",", 
         "outputitemlabel"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "[", "outputitem", "]"}], "]"}], ";"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.896734451051811*^9, 3.89673446051204*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"f616f732-3491-40a3-95c7-1656ddbfe950"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"itemlabelrow", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"studentIDcolumn", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mi", "=", 
   RowBox[{"-", "99"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"itemstat", "[", "data0_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "=", "data0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"dataformat", "[", "data", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "Student", "*)"}], 
      RowBox[{"numberofresponses", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"zzz", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"totalscore", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"uuu", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"passagerate", "=", 
       RowBox[{"N", "[", 
        RowBox[{"totalscore", "/", "numberofresponses"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"standardizedscore", "=", 
       RowBox[{"Standardize", "[", "passagerate", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outputstudentlabel", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Student\>\"", ",", "\"\<Number of Responses\>\"", ",", 
         "\"\<Number-Right Score\>\"", ",", "\"\<Passage Rate\>\"", ",", 
         "\"\<Standardized Score\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"outputstudent", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
           "studentID", ",", "numberofresponses", ",", "totalscore", ",", 
            "passagerate", ",", "standardizedscore"}], "}"}], "]"}], ",", 
         "outputstudentlabel"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Test Statistics\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"meanTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Mean", "[", "totalscore", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"varTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Variance", "[", "totalscore", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sdTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Sqrt", "[", "varTS", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"meanofSETS", "=", 
       RowBox[{"sdTS", "/", 
        RowBox[{"Sqrt", "[", "samplesize", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"skewTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Skewness", "[", "totalscore", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kurtTS", "=", 
       RowBox[{"N", "[", 
        RowBox[{"Kurtosis", "[", "totalscore", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minTS", "=", 
       RowBox[{"Min", "[", "totalscore", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"maxTS", "=", 
       RowBox[{"Max", "[", "totalscore", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"outputtestlabel", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<N of Items\>\"", ",", "\"\<Sample Size\>\"", ",", "\"\<Mean\>\"",
          ",", "\"\<SE of Mean\>\"", ",", "\"\<SD\>\"", ",", 
         "\"\<Skewness\>\"", ",", "\"\<Kurtosis\>\"", ",", "\"\<Min\>\"", 
         ",", "\"\<Max\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputtest", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"outputtestlabel", ",", 
          RowBox[{"{", 
           RowBox[{
           "testlength", ",", "samplesize", ",", "meanTS", ",", "meanofSETS", 
            ",", "sdTS", ",", "skewTS", ",", "kurtTS", ",", "minTS", ",", 
            "maxTS"}], "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "[", "outputtest", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outputtest", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Author\>\"", ",", "\"\<SHOJIMA Kojiro\>\""}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Analysis Date\>\"", ",", 
             RowBox[{"DateString", "[", 
              RowBox[{"CurrentDate", "[", "]"}], "]"}]}], "}"}]}], "}"}], ",",
          "outputtest"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Item Statistics\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"itemsamplesize", "=", 
       RowBox[{"Total", "[", "zzz", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"crr", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Total", "[", "uuu", "]"}], "/", "itemsamplesize"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"itemthreshold", "=", 
       RowBox[{"InverseCDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", 
         RowBox[{"1", "-", "crr"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dev", "=", 
       RowBox[{"zzz", "*", 
        RowBox[{"(", 
         RowBox[{"uuu", "-", 
          RowBox[{"Outer", "[", 
           RowBox[{"Times", ",", 
            RowBox[{"Table", "[", 
             RowBox[{"1", ",", 
              RowBox[{"{", "samplesize", "}"}]}], "]"}], ",", "crr"}], 
           "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"var", "=", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"dev", "^", "2"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"itemsamplesize", "-", "1"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sd", "=", 
       RowBox[{"Sqrt", "[", "var", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"itc", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "dev", "]"}], ".", "standardizedscore"}], 
         "/", "sd"}], "/", "itemsamplesize"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputitemlabel", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Item\>\"", ",", "\"\<Number of Respondents\>\"", ",", 
         "\"\<Correct Response Rate\>\"", ",", "\"\<Item Threshold\>\"", ",", 
         "\"\<Item-Total Correlation\>\""}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outputitem", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
           "itemlabel", ",", "itemsamplesize", ",", "crr", ",", 
            "itemthreshold", ",", "itc"}], "}"}], "]"}], ",", 
         "outputitemlabel"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "[", "outputitem", "]"}], "]"}], ";"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896734493849453*^9, 3.896734567212276*^9}, {
  3.896751585513523*^9, 3.896751585657082*^9}, {3.896817623171789*^9, 
  3.896817649885844*^9}, {3.8968178435518427`*^9, 3.8968178522008266`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"36989eff-458e-40fe-9a59-5fb758e9c46c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"filename", "=", "\"\<J15S500.csv\>\""}], ";"}], "  ", 
  RowBox[{
  "(*", "\:3053\:3053\:306b\:30d5\:30a1\:30a4\:30eb\:540d\:3068\:62e1\:5f35\
\:5b50\:3092\:5165\:529b\:3057\:307e\:3059", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"fullpath", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "filename"}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", "fullpath", "]"}]}], ";"}], "\n"}], "Input",
 CellChangeTimes->{
  3.8968181548586493`*^9, {3.89681821348943*^9, 3.896818267914652*^9}, {
   3.896828309925685*^9, 3.8968283128569517`*^9}, {3.896903347138567*^9, 
   3.89690337320615*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"45715bca-8b98-4d83-8f64-23a821d3bf5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.896734493849453*^9, 3.896734567212276*^9}, {
  3.896751585513523*^9, 3.896751585657082*^9}, {3.896817623171789*^9, 
  3.896817649885844*^9}, {3.8968178435518427`*^9, 3.8968178522008266`*^9}, {
  3.896818271178135*^9, 3.8968182871635933`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"3a2c7b35-3dc8-4d8b-a3a5-b19c7da6fc9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"itemstat", "[", "data", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.896734583276515*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"00f3ca63-bca2-4027-961e-3b09267298a9"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Test Statistics\"\>"], "Print",
 CellChangeTimes->{3.896903377122281*^9, 3.8969034385730543`*^9, 
  3.896995898381421*^9, 3.896996446665155*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[45]:=",ExpressionUUID->"5c6cbb4d-ac2c-4f3c-b1f8-\
05d001273507"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"N of Items\"\>", "15"},
     {"\<\"Sample Size\"\>", "500"},
     {"\<\"Mean\"\>", "9.664`"},
     {"\<\"SE of Mean\"\>", "0.11907378019639975`"},
     {"\<\"SD\"\>", "2.662570668570181`"},
     {"\<\"Skewness\"\>", 
      RowBox[{"-", "0.4116219753662485`"}]},
     {"\<\"Kurtosis\"\>", "2.5528375958572975`"},
     {"\<\"Min\"\>", "2"},
     {"\<\"Max\"\>", "15"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.896903377122281*^9, 3.8969034385730543`*^9, 
  3.896995898381421*^9, 3.8969964466716213`*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[45]:=",ExpressionUUID->"3a0417a5-bc3b-46ab-a803-\
e52ccd751019"],

Cell[BoxData["\<\"Item Statistics\"\>"], "Print",
 CellChangeTimes->{3.896903377122281*^9, 3.8969034385730543`*^9, 
  3.896995898381421*^9, 3.896996446849984*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[45]:=",ExpressionUUID->"3900c60f-403d-477c-a549-\
ef0eb48f6783"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"Item\"\>", "\<\"Number of Respondents\"\>", "\<\"Correct Response \
Rate\"\>", "\<\"Item Threshold\"\>", "\<\"Item-Total Correlation\"\>"},
     {"\<\"Item01\"\>", "500", "0.746`", 
      RowBox[{"-", "0.6619550962881617`"}], "0.3746480997785672`"},
     {"\<\"Item02\"\>", "500", "0.754`", 
      RowBox[{"-", "0.6871312867954693`"}], "0.39320458581499507`"},
     {"\<\"Item03\"\>", "500", "0.726`", 
      RowBox[{"-", "0.6007597742493189`"}], "0.32130029988631703`"},
     {"\<\"Item04\"\>", "500", "0.776`", 
      RowBox[{"-", "0.758753544504371`"}], "0.502823899520702`"},
     {"\<\"Item05\"\>", "500", "0.804`", 
      RowBox[{"-", "0.8559959854926822`"}], "0.329053854171997`"},
     {"\<\"Item06\"\>", "500", "0.864`", 
      RowBox[{"-", "1.098468420339863`"}], "0.3768598492052689`"},
     {"\<\"Item07\"\>", "500", "0.716`", 
      RowBox[{"-", "0.5709994731129874`"}], "0.483067171979553`"},
     {"\<\"Item08\"\>", "500", "0.588`", 
      RowBox[{"-", "0.22240322692720624`"}], "0.4052151601002188`"},
     {"\<\"Item09\"\>", "500", "0.364`", "0.3477872042786274`", 
      "0.22482031165466662`"},
     {"\<\"Item10\"\>", "500", "0.662`", 
      RowBox[{"-", "0.4179276716694819`"}], "0.31444557377460874`"},
     {"\<\"Item11\"\>", "500", "0.286`", "0.5651084520065837`", 
      "0.45508093046361264`"},
     {"\<\"Item12\"\>", "500", "0.274`", "0.6007597742493189`", 
      "0.467783947980773`"},
     {"\<\"Item13\"\>", "500", "0.634`", 
      RowBox[{"-", "0.34246630146539064`"}], "0.4712502114789127`"},
     {"\<\"Item14\"\>", "500", "0.764`", 
      RowBox[{"-", "0.7192287304399239`"}], "0.48484126159196483`"},
     {"\<\"Item15\"\>", "500", "0.706`", 
      RowBox[{"-", "0.5417365601128167`"}], "0.4127746689297761`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.896903377122281*^9, 3.8969034385730543`*^9, 
  3.896995898381421*^9, 3.8969964468976717`*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[45]:=",ExpressionUUID->"5be6fbbf-af53-40b5-8f99-\
8bbe71618167"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slope", "=", 
   RowBox[{"itc", "*", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"loc", "=", 
   RowBox[{"itemthreshold", "*", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"onevec", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", "testlength", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"loasym", "=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"model", ">=", "3"}], ",", "0.05", ",", "0"}], "]"}], "*", 
    "onevec"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"upasym", "=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"model", ">=", "4"}], ",", "0.95", ",", "1"}], "]"}], "*", 
    "onevec"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"paramset", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"slope", ",", "loc", ",", "loasym", ",", "upasym"}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.896734601348948*^9, 3.896749044232719*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"34e27eb8-57b0-4c42-bb8f-60af17b59ea9"],

Cell[CellGroupData[{

Cell[BoxData["paramset"], "Input",
 CellChangeTimes->{{3.896749052099249*^9, 3.896749053808729*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"528c34e7-c7b1-4aa6-81a2-eecec3287746"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.7492961995571344`", ",", 
     RowBox[{"-", "1.3239101925763235`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.7864091716299901`", ",", 
     RowBox[{"-", "1.3742625735909386`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.6426005997726341`", ",", 
     RowBox[{"-", "1.2015195484986378`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1.005647799041404`", ",", 
     RowBox[{"-", "1.517507089008742`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.658107708343994`", ",", 
     RowBox[{"-", "1.7119919709853644`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.7537196984105378`", ",", 
     RowBox[{"-", "2.196936840679726`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.966134343959106`", ",", 
     RowBox[{"-", "1.1419989462259748`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.8104303202004376`", ",", 
     RowBox[{"-", "0.4448064538544125`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "0.44964062330933324`", ",", "0.6955744085572548`", ",", "0.05`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6288911475492175`", ",", 
     RowBox[{"-", "0.8358553433389638`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9101618609272253`", ",", "1.1302169040131673`", ",", "0.05`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.935567895961546`", ",", "1.2015195484986378`", ",", "0.05`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9425004229578254`", ",", 
     RowBox[{"-", "0.6849326029307813`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.9696825231839297`", ",", 
     RowBox[{"-", "1.4384574608798477`"}], ",", "0.05`", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.8255493378595522`", ",", 
     RowBox[{"-", "1.0834731202256334`"}], ",", "0.05`", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8968228612536592`*^9, 3.896828318439562*^9, 
  3.896828449045932*^9, 3.89690304097392*^9, 3.896903377343151*^9, 
  3.8969034386043863`*^9, 3.8969958984246473`*^9, 3.8969964469440937`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"3c65e49f-d612-4584-93dc-6d477cbbfee7"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"quadmax", "=", "3.2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"quadincr", "=", ".4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nquad", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"quadmax", "/", "quadincr"}], "*", "2"}], "+", "1"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"quadrature", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "quadmax"}], "+", 
      RowBox[{"quadincr", "*", 
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "1", ",", "nquad"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"const", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", "testlength"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.896734601348948*^9, 3.896749044232719*^9, 
  3.896749145281814*^9, 3.8967512522977247`*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"b5674cc2-c5d6-4559-87ec-60494c500bcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "const", "]"}]], "Input",
 CellChangeTimes->{{3.896751260168288*^9, 3.8967513069007483`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d2f45801-4ec6-4d4e-9f67-e1cc77fec02c"],

Cell[BoxData["3.059023205018258`*^-7"], "Output",
 CellChangeTimes->{3.896822861280345*^9, 3.896828318459909*^9, 
  3.896828449055237*^9, 3.896903040993713*^9, 3.8969033773598948`*^9, 
  3.896903438629518*^9, 3.896995898435361*^9, 3.896996446986876*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"f7c400cf-6fe4-4eac-92b3-a1fb8daead80"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"loglike", "=", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "const"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"oldloglike", "=", 
   RowBox[{
    RowBox[{"-", "2"}], "/", "const"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"itemloglike", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"loglike", "/", "testlength"}], ",", 
     RowBox[{"{", "testlength", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.896734601348948*^9, 3.896749044232719*^9, 
  3.896749145281814*^9, 3.8967512522977247`*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"75a11155-8ad8-4b25-8554-27cf94ac3f16"],

Cell[CellGroupData[{

Cell[BoxData["itemloglike"], "Input",
 CellChangeTimes->{{3.896749152493*^9, 3.8967491558626432`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"b546d746-4d70-4b9c-97a2-351c4d726869"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "15"], "15"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.896822861289536*^9, 3.896828318479958*^9, 
  3.89682844906384*^9, 3.896903041003549*^9, 3.8969033773764544`*^9, 
  3.896903438653714*^9, 3.896995898472684*^9, 3.896996447028131*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"9bb36ceb-e179-44b2-8211-b3266f1a66eb"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"emt", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"maxemt", "=", "25"}], ";"}]}], "Input",
 CellChangeTimes->{3.896734601348948*^9, 3.896749044232719*^9, 
  3.896749145281814*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"e765db66-9a52-4371-93a3-4782314455cf"],

Cell[CellGroupData[{

Cell[BoxData["slope"], "Input",
 CellChangeTimes->{{3.8967346083264914`*^9, 3.8967346114797783`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"f2d152b6-435b-4f88-9177-5d08d145a1bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7492961995571344`", ",", "0.7864091716299901`", ",", 
   "0.6426005997726341`", ",", "1.005647799041404`", ",", 
   "0.658107708343994`", ",", "0.7537196984105378`", ",", 
   "0.966134343959106`", ",", "0.8104303202004376`", ",", 
   "0.44964062330933324`", ",", "0.6288911475492175`", ",", 
   "0.9101618609272253`", ",", "0.935567895961546`", ",", 
   "0.9425004229578254`", ",", "0.9696825231839297`", ",", 
   "0.8255493378595522`"}], "}"}]], "Output",
 CellChangeTimes->{3.896822861317569*^9, 3.8968283185021753`*^9, 
  3.896828449092969*^9, 3.896903041022545*^9, 3.896903377394342*^9, 
  3.8969034386776733`*^9, 3.896995898507463*^9, 3.896996447072402*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"1c6fc263-6340-4ca9-8c02-ccb38f88b625"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["loc"], "Input",
 CellChangeTimes->{{3.8967346156597557`*^9, 3.896734615871718*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"2b03c685-f1a5-449c-9bd2-a73ff00b3cad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.3239101925763235`"}], ",", 
   RowBox[{"-", "1.3742625735909386`"}], ",", 
   RowBox[{"-", "1.2015195484986378`"}], ",", 
   RowBox[{"-", "1.517507089008742`"}], ",", 
   RowBox[{"-", "1.7119919709853644`"}], ",", 
   RowBox[{"-", "2.196936840679726`"}], ",", 
   RowBox[{"-", "1.1419989462259748`"}], ",", 
   RowBox[{"-", "0.4448064538544125`"}], ",", "0.6955744085572548`", ",", 
   RowBox[{"-", "0.8358553433389638`"}], ",", "1.1302169040131673`", ",", 
   "1.2015195484986378`", ",", 
   RowBox[{"-", "0.6849326029307813`"}], ",", 
   RowBox[{"-", "1.4384574608798477`"}], ",", 
   RowBox[{"-", "1.0834731202256334`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8968228613229837`*^9, 3.896828318508889*^9, 
  3.8968284491199207`*^9, 3.896903041037201*^9, 3.89690337739981*^9, 
  3.896903438683817*^9, 3.8969958985393143`*^9, 3.896996447078636*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"2beb45de-bb53-4793-8508-e1aa344b551a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nquad"], "Input",
 CellChangeTimes->{{3.896734619258153*^9, 3.8967346225434732`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"9e19bfbb-0de1-45b3-817c-5e70df43ea9f"],

Cell[BoxData["17.`"], "Output",
 CellChangeTimes->{3.896822861328534*^9, 3.896828318532385*^9, 
  3.8968284491257973`*^9, 3.8969030410426283`*^9, 3.896903377413279*^9, 
  3.8969034387042217`*^9, 3.896995898545287*^9, 3.896996447117547*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"75b390fa-d06d-4950-bcde-9d03d13dcff0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["quadrature"], "Input",
 CellChangeTimes->{{3.896734627820133*^9, 3.896734630539904*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"46dcf40b-1be2-479a-b1ba-efb723d56581"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.2`"}], ",", 
   RowBox[{"-", "2.8000000000000003`"}], ",", 
   RowBox[{"-", "2.4000000000000004`"}], ",", 
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "1.6`"}], ",", 
   RowBox[{"-", "1.2000000000000002`"}], ",", 
   RowBox[{"-", "0.7999999999999998`"}], ",", 
   RowBox[{"-", "0.3999999999999999`"}], ",", "0.`", ",", 
   "0.3999999999999999`", ",", "0.7999999999999998`", ",", 
   "1.2000000000000002`", ",", "1.6000000000000005`", ",", "2.`", ",", 
   "2.4000000000000004`", ",", "2.8`", ",", "3.2`"}], "}"}]], "Output",
 CellChangeTimes->{3.89682286135189*^9, 3.896828318538333*^9, 
  3.8968284491519747`*^9, 3.8969030410583973`*^9, 3.8969033774184437`*^9, 
  3.896903438709551*^9, 3.8969958985765123`*^9, 3.896996447266862*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"4d89c88a-b589-4c50-9278-d3bec4c515cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["const"], "Input",
 CellChangeTimes->{{3.896734635286497*^9, 3.896734635993672*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"65aa33da-2823-4336-9a66-1a409bcd7b23"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", "15"]]], "Output",
 CellChangeTimes->{3.896822861357534*^9, 3.8968283185548143`*^9, 
  3.896828449157958*^9, 3.89690304106393*^9, 3.89690337743204*^9, 
  3.896903438730009*^9, 3.8969958985829983`*^9, 3.896996447273046*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"1664eda1-39bd-4dce-89e3-73429fc7301d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["loglike"], "Input",
 CellChangeTimes->{{3.896734641796832*^9, 3.896734642601729*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"06494098-573c-4930-b353-9a9738e3bbc8"],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["\[ExponentialE]", "15"]}]], "Output",
 CellChangeTimes->{3.896822861381361*^9, 3.896828318560951*^9, 
  3.89682844918416*^9, 3.896903041078961*^9, 3.896903377437364*^9, 
  3.8969034387354794`*^9, 3.8969958986159973`*^9, 3.896996447320866*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"58362764-b582-41b3-9b01-5f0bf1a707cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["oldloglike"], "Input",
 CellChangeTimes->{{3.896734647937522*^9, 3.896734650101543*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"2a86efd4-20cc-4176-ad16-e629237fb3a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  SuperscriptBox["\[ExponentialE]", "15"]}]], "Output",
 CellChangeTimes->{3.8968228613868*^9, 3.8968283185768948`*^9, 
  3.896828449190201*^9, 3.89690304108479*^9, 3.896903377450808*^9, 
  3.896903438756359*^9, 3.896995898624497*^9, 3.8969964473579617`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"19836262-c557-4ebb-9eba-aef55eabbc58"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"emt", "+=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"oldloglike", "=", "loglike"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lpj", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"irt", "[", 
        RowBox[{
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", "1", ",", 
         "quadrature"}], "]"}], "+", "const"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "testlength"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.896734658187436*^9, 3.896734662475067*^9}, 
   3.896751375899078*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"6c1c84eb-ed11-4a6b-a86d-23cfa052cef4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{
   RowBox[{"irt", "[", 
    RowBox[{
     RowBox[{"paramset", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"paramset", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"paramset", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"paramset", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "4"}], "]"}], "]"}], ",", "1", ",", 
     RowBox[{"-", "3.2"}]}], "]"}], "+", "const"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967513859098*^9, 3.896751436112153*^9}, {
  3.896751697884445*^9, 3.89675172546087*^9}, {3.896751847435116*^9, 
  3.896751848854474*^9}, {3.8967519621854343`*^9, 3.896751976300624*^9}, {
  3.896752040792389*^9, 3.896752152058558*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"890ccb33-d9f6-4731-93a8-76ea56282984"],

Cell[BoxData[
 RowBox[{"-", "1.45847586111892`"}]], "Output",
 CellChangeTimes->{3.896822861417756*^9, 3.8968283185982637`*^9, 
  3.896828449224308*^9, 3.8969030411045637`*^9, 3.896903377470717*^9, 
  3.89690343878413*^9, 3.8969958986595*^9, 3.8969964474025497`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"cf359e82-a689-483a-ada9-a06d3a4f53e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"paramset", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967513859098*^9, 3.896751436112153*^9}, {
  3.896751697884445*^9, 3.89675172546087*^9}, {3.896751847435116*^9, 
  3.896751848854474*^9}, {3.8967519621854343`*^9, 3.896752029587824*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"b7122395-6f52-4b21-ae50-ccf1421cd5fd"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.896822861422978*^9, 3.8968283186040363`*^9, 
  3.896828449252002*^9, 3.896903041119001*^9, 3.896903377476119*^9, 
  3.896903438789853*^9, 3.8969958986907682`*^9, 3.896996447408506*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"2edc3397-0fed-4622-b722-464c41413799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"J", "\[Times]", "Q"}], "*)"}], "\[IndentingNewLine]", 
  "lpj"}]], "Input",
 CellChangeTimes->{{3.896734658187436*^9, 3.896734662475067*^9}, 
   3.896751375899078*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"b1cf6700-78fb-4723-8a87-082a38fbabaa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.439438809058294`"}], ",", 
     RowBox[{"-", "1.2511281909062215`"}], ",", 
     RowBox[{"-", "1.0693142794932637`"}], ",", 
     RowBox[{"-", "0.8984666472240552`"}], ",", 
     RowBox[{"-", "0.7422482782647652`"}], ",", 
     RowBox[{"-", "0.6032419989996908`"}], ",", 
     RowBox[{"-", "0.4827969960123469`"}], ",", 
     RowBox[{"-", "0.3810392911433592`"}], ",", 
     RowBox[{"-", "0.2970469733528456`"}], ",", 
     RowBox[{"-", "0.22914091409906326`"}], ",", 
     RowBox[{"-", "0.1752136485172047`"}], ",", 
     RowBox[{"-", "0.13302494174624604`"}], ",", 
     RowBox[{"-", "0.1004216000806669`"}], ",", 
     RowBox[{"-", "0.07547161044876477`"}], ",", 
     RowBox[{"-", "0.0565250163156227`"}], ",", 
     RowBox[{"-", "0.04222302932368736`"}], ",", 
     RowBox[{"-", "0.03147643421447798`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.45847586111892`"}], ",", 
     RowBox[{"-", "1.2605525242029052`"}], ",", 
     RowBox[{"-", "1.0695146930295125`"}], ",", 
     RowBox[{"-", "0.8905436694822221`"}], ",", 
     RowBox[{"-", "0.7278437851609075`"}], ",", 
     RowBox[{"-", "0.5842984007535665`"}], ",", 
     RowBox[{"-", "0.4612895207415646`"}], ",", 
     RowBox[{"-", "0.35873804106788404`"}], ",", 
     RowBox[{"-", "0.2753566255423516`"}], ",", 
     RowBox[{"-", "0.20903736877122395`"}], ",", 
     RowBox[{"-", "0.15726507519176708`"}], ",", 
     RowBox[{"-", "0.11746562338273124`"}], ",", 
     RowBox[{"-", "0.08724508853121696`"}], ",", 
     RowBox[{"-", "0.06451894847302606`"}], ",", 
     RowBox[{"-", "0.04755569669812498`"}], ",", 
     RowBox[{"-", "0.03496564496332195`"}], ",", 
     RowBox[{"-", "0.02566120944216565`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3626143699728437`"}], ",", 
     RowBox[{"-", "1.2024769155530473`"}], ",", 
     RowBox[{"-", "1.0480356861413163`"}], ",", 
     RowBox[{"-", "0.9020349499795218`"}], ",", 
     RowBox[{"-", "0.7667608005734081`"}], ",", 
     RowBox[{"-", "0.643914798386475`"}], ",", 
     RowBox[{"-", "0.5345352172508236`"}], ",", 
     RowBox[{"-", "0.4389826948278641`"}], ",", 
     RowBox[{"-", "0.3569950401075945`"}], ",", 
     RowBox[{"-", "0.28780006973701777`"}], ",", 
     RowBox[{"-", "0.2302627750725932`"}], ",", 
     RowBox[{"-", "0.1830389365280992`"}], ",", 
     RowBox[{"-", "0.1447117822914936`"}], ",", 
     RowBox[{"-", "0.11389778736930878`"}], ",", 
     RowBox[{"-", "0.08931762605719297`"}], ",", 
     RowBox[{"-", "0.06983554130286891`"}], ",", 
     RowBox[{"-", "0.05447408876606839`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6208111188532521`"}], ",", 
     RowBox[{"-", "1.3660882779213765`"}], ",", 
     RowBox[{"-", "1.1176436892691115`"}], ",", 
     RowBox[{"-", "0.8868047136255283`"}], ",", 
     RowBox[{"-", "0.6825853941160637`"}], ",", 
     RowBox[{"-", "0.5104984414077783`"}], ",", 
     RowBox[{"-", "0.3720741766230589`"}], ",", 
     RowBox[{"-", "0.2653182578803906`"}], ",", 
     RowBox[{"-", "0.18589542506740217`"}], ",", 
     RowBox[{"-", "0.1285014833360408`"}], ",", 
     RowBox[{"-", "0.08794547512100093`"}], ",", 
     RowBox[{"-", "0.0597593985824054`"}], ",", 
     RowBox[{"-", "0.040402757054938614`"}], ",", 
     RowBox[{"-", "0.027220824999584912`"}], ",", 
     RowBox[{"-", "0.018295922378091606`"}], ",", 
     RowBox[{"-", "0.012277272691130502`"}], ",", 
     RowBox[{"-", "0.008229466166768404`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1731681349638814`"}], ",", 
     RowBox[{"-", "1.016510435714322`"}], ",", 
     RowBox[{"-", "0.8692531952871803`"}], ",", 
     RowBox[{"-", "0.7337217694413862`"}], ",", 
     RowBox[{"-", "0.6115730986574744`"}], ",", 
     RowBox[{"-", "0.5037236859472455`"}], ",", 
     RowBox[{"-", "0.41035474968747343`"}], ",", 
     RowBox[{"-", "0.3309951529469526`"}], ",", 
     RowBox[{"-", "0.26466390427974235`"}], ",", 
     RowBox[{"-", "0.210041595473883`"}], ",", 
     RowBox[{"-", "0.1656387767755577`"}], ",", 
     RowBox[{"-", "0.12993740650450442`"}], ",", 
     RowBox[{"-", "0.10149371324421225`"}], ",", 
     RowBox[{"-", "0.07900175978736482`"}], ",", 
     RowBox[{"-", "0.061323926756142656`"}], ",", 
     RowBox[{"-", "0.04749727130975398`"}], ",", 
     RowBox[{"-", "0.03672450344023044`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0397756204748347`"}], ",", 
     RowBox[{"-", "0.8701995295002019`"}], ",", 
     RowBox[{"-", "0.7159633372702192`"}], ",", 
     RowBox[{"-", "0.5794809193123923`"}], ",", 
     RowBox[{"-", "0.4618922976538982`"}], ",", 
     RowBox[{"-", "0.363106927553922`"}], ",", 
     RowBox[{"-", "0.28201163285764325`"}], ",", 
     RowBox[{"-", "0.2167839591414116`"}], ",", 
     RowBox[{"-", "0.16522898656052237`"}], ",", 
     RowBox[{"-", "0.125069954282345`"}], ",", 
     RowBox[{"-", "0.09415578776676195`"}], ",", 
     RowBox[{"-", "0.07058123337476699`"}], ",", 
     RowBox[{"-", "0.052735654263351604`"}], ",", 
     RowBox[{"-", "0.03930342426293469`"}], ",", 
     RowBox[{"-", "0.029236922737790248`"}], ",", 
     RowBox[{"-", "0.021717600897606798`"}], ",", 
     RowBox[{"-", "0.01611485118858951`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8053631321508736`"}], ",", 
     RowBox[{"-", "1.563809299905257`"}], ",", 
     RowBox[{"-", "1.3193452486080914`"}], ",", 
     RowBox[{"-", "1.0827136526448333`"}], ",", 
     RowBox[{"-", "0.8637205692656658`"}], ",", 
     RowBox[{"-", "0.6700264465926198`"}], ",", 
     RowBox[{"-", "0.5062227611008345`"}], ",", 
     RowBox[{"-", "0.37349856646794277`"}], ",", 
     RowBox[{"-", "0.27005349026424613`"}], ",", 
     RowBox[{"-", "0.19207735699106074`"}], ",", 
     RowBox[{"-", "0.13488186682250966`"}], ",", 
     RowBox[{"-", "0.0938135339081504`"}], ",", 
     RowBox[{"-", "0.06479419667454575`"}], ",", 
     RowBox[{"-", "0.04452788264962787`"}], ",", 
     RowBox[{"-", "0.03049273923657716`"}], ",", 
     RowBox[{"-", "0.020830215991038663`"}], ",", 
     RowBox[{"-", "0.014205387500029152`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.951971044019434`"}], ",", 
     RowBox[{"-", "1.7563801796134586`"}], ",", 
     RowBox[{"-", "1.5528448904673768`"}], ",", 
     RowBox[{"-", "1.3475967871372616`"}], ",", 
     RowBox[{"-", "1.1470107360553115`"}], ",", 
     RowBox[{"-", "0.9570700690221812`"}], ",", 
     RowBox[{"-", "0.7828490316464998`"}], ",", 
     RowBox[{"-", "0.6280645964568665`"}], ",", 
     RowBox[{"-", "0.4947879762467875`"}], ",", 
     RowBox[{"-", "0.38340225916110593`"}], ",", 
     RowBox[{"-", "0.29282640169290497`"}], ",", 
     RowBox[{"-", "0.2209333939919414`"}], ",", 
     RowBox[{"-", "0.16503318824782062`"}], ",", 
     RowBox[{"-", "0.12229919349868894`"}], ",", 
     RowBox[{"-", "0.09007065209295835`"}], ",", 
     RowBox[{"-", "0.0660212424368249`"}], ",", 
     RowBox[{"-", "0.048220435191302174`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6583523670165192`"}], ",", 
     RowBox[{"-", "1.5447335942676637`"}], ",", 
     RowBox[{"-", "1.4306631109902175`"}], ",", 
     RowBox[{"-", "1.3172399492519131`"}], ",", 
     RowBox[{"-", "1.2055465075372864`"}], ",", 
     RowBox[{"-", "1.0966204197930638`"}], ",", 
     RowBox[{"-", "0.9914268650235765`"}], ",", 
     RowBox[{"-", "0.8908320539251032`"}], ",", 
     RowBox[{"-", "0.7955791247326731`"}], ",", 
     RowBox[{"-", "0.7062680905374055`"}], ",", 
     RowBox[{"-", "0.6233416239345725`"}], ",", 
     RowBox[{"-", "0.5470782225114595`"}], ",", 
     RowBox[{"-", "0.477593661154925`"}], ",", 
     RowBox[{"-", "0.4148507202476197`"}], ",", 
     RowBox[{"-", "0.35867619130529327`"}], ",", 
     RowBox[{"-", "0.30878333554731835`"}], ",", 
     RowBox[{"-", "0.26479748375490264`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4908366549435896`"}], ",", 
     RowBox[{"-", "1.33179188136652`"}], ",", 
     RowBox[{"-", "1.175855126274467`"}], ",", 
     RowBox[{"-", "1.0258448998476195`"}], ",", 
     RowBox[{"-", "0.8842753511420622`"}], ",", 
     RowBox[{"-", "0.7532209723897506`"}], ",", 
     RowBox[{"-", "0.6342077573769372`"}], ",", 
     RowBox[{"-", "0.5281484415031087`"}], ",", 
     RowBox[{"-", "0.4353354968932496`"}], ",", 
     RowBox[{"-", "0.35549476336402963`"}], ",", 
     RowBox[{"-", "0.2878891419414231`"}], ",", 
     RowBox[{"-", "0.2314514918499134`"}], ",", 
     RowBox[{"-", "0.18492267577847593`"}], ",", 
     RowBox[{"-", "0.14697463817197773`"}], ",", 
     RowBox[{"-", "0.11630644972167853`"}], ",", 
     RowBox[{"-", "0.09170966272234572`"}], ",", 
     RowBox[{"-", "0.0721055612525975`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.686743511862744`"}], ",", 
     RowBox[{"-", "2.5791823914217376`"}], ",", 
     RowBox[{"-", "2.444801697705943`"}], ",", 
     RowBox[{"-", "2.2828169059974384`"}], ",", 
     RowBox[{"-", "2.0949611364127687`"}], ",", 
     RowBox[{"-", "1.8856493305654716`"}], ",", 
     RowBox[{"-", "1.661620402154744`"}], ",", 
     RowBox[{"-", "1.4312009524018892`"}], ",", 
     RowBox[{"-", "1.2033951850183988`"}], ",", 
     RowBox[{"-", "0.9869313578160578`"}], ",", 
     RowBox[{"-", "0.7893233406661239`"}], ",", 
     RowBox[{"-", "0.6160383888187658`"}], ",", 
     RowBox[{"-", "0.4699542453915805`"}], ",", 
     RowBox[{"-", "0.3512963018833662`"}], ",", 
     RowBox[{"-", "0.25809130364731625`"}], ",", 
     RowBox[{"-", "0.18695617301025574`"}], ",", 
     RowBox[{"-", "0.13393256537165027`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.730034823163596`"}], ",", 
     RowBox[{"-", "2.6315932180822874`"}], ",", 
     RowBox[{"-", "2.5059185848632977`"}], ",", 
     RowBox[{"-", "2.351148831766634`"}], ",", 
     RowBox[{"-", "2.1679780565283497`"}], ",", 
     RowBox[{"-", "1.9600872792735526`"}], ",", 
     RowBox[{"-", "1.7339581125296435`"}], ",", 
     RowBox[{"-", "1.4981592691843892`"}], ",", 
     RowBox[{"-", "1.262348143879992`"}], ",", 
     RowBox[{"-", "1.0361835003138364`"}], ",", 
     RowBox[{"-", "0.828238079257129`"}], ",", 
     RowBox[{"-", "0.64499976334397`"}], ",", 
     RowBox[{"-", "0.490157054271736`"}], ",", 
     RowBox[{"-", "0.36441121036885743`"}], ",", 
     RowBox[{"-", "0.26590555468222854`"}], ",", 
     RowBox[{"-", "0.19109307731205022`"}], ",", 
     RowBox[{"-", "0.13570032034750015`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.031174047459127`"}], ",", 
     RowBox[{"-", "1.8085119503040852`"}], ",", 
     RowBox[{"-", "1.5730560082483964`"}], ",", 
     RowBox[{"-", "1.3344414868610401`"}], ",", 
     RowBox[{"-", "1.1026613800259453`"}], ",", 
     RowBox[{"-", "0.8869316024490363`"}], ",", 
     RowBox[{"-", "0.6946114670671285`"}], ",", 
     RowBox[{"-", "0.5303480382030833`"}], ",", 
     RowBox[{"-", "0.39570276541598937`"}], ",", 
     RowBox[{"-", "0.2894225700067474`"}], ",", 
     RowBox[{"-", "0.20824620283438955`"}], ",", 
     RowBox[{"-", "0.14791189773012975`"}], ",", 
     RowBox[{"-", "0.10402768866201921`"}], ",", 
     RowBox[{"-", "0.072631504134493`"}], ",", 
     RowBox[{"-", "0.050443339952674124`"}], ",", 
     RowBox[{"-", "0.03490149537590887`"}], ",", 
     RowBox[{"-", "0.024084011883893447`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6309908156534458`"}], ",", 
     RowBox[{"-", "1.3853509640356658`"}], ",", 
     RowBox[{"-", "1.1447037773989022`"}], ",", 
     RowBox[{"-", "0.9193437470975533`"}], ",", 
     RowBox[{"-", "0.7177001305697424`"}], ",", 
     RowBox[{"-", "0.5452901239319862`"}], ",", 
     RowBox[{"-", "0.4041954102958793`"}], ",", 
     RowBox[{"-", "0.29328912637798715`"}], ",", 
     RowBox[{"-", "0.20912110049286986`"}], ",", 
     RowBox[{"-", "0.14707283731126`"}], ",", 
     RowBox[{"-", "0.10236618848416416`"}], ",", 
     RowBox[{"-", "0.07070843423860566`"}], ",", 
     RowBox[{"-", "0.04857491311176104`"}], ",", 
     RowBox[{"-", "0.03324129638763203`"}], ",", 
     RowBox[{"-", "0.022686942930129336`"}], ",", 
     RowBox[{"-", "0.015454900128396896`"}], ",", 
     RowBox[{"-", "0.010514789535655112`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6556426520381167`"}], ",", 
     RowBox[{"-", "1.446620210673121`"}], ",", 
     RowBox[{"-", "1.2392539138590595`"}], ",", 
     RowBox[{"-", "1.0401318594853968`"}], ",", 
     RowBox[{"-", "0.8551177586935664`"}], ",", 
     RowBox[{"-", "0.6888151365167464`"}], ",", 
     RowBox[{"-", "0.5441617683205774`"}], ",", 
     RowBox[{"-", "0.42226262171624934`"}], ",", 
     RowBox[{"-", "0.3225225147124564`"}], ",", 
     RowBox[{"-", "0.24303745816822916`"}], ",", 
     RowBox[{"-", "0.18111475808369915`"}], ",", 
     RowBox[{"-", "0.13377315426589437`"}], ",", 
     RowBox[{"-", "0.09812239146245566`"}], ",", 
     RowBox[{"-", "0.07159140304741536`"}], ",", 
     RowBox[{"-", "0.052025629119438914`"}], ",", 
     RowBox[{"-", "0.03769487791174236`"}], ",", 
     RowBox[{"-", "0.02725181000377557`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896822861429859*^9, 3.89682831862423*^9, 
  3.896828449259315*^9, 3.896903041127954*^9, 3.8969033774831343`*^9, 
  3.8969034388121233`*^9, 3.89699589870287*^9, 3.896996447446206*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"02d93b82-4cb4-441f-b4d8-01360947753c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lqj", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{"irt", "[", 
         RowBox[{
          RowBox[{"paramset", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"paramset", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"paramset", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "3"}], "]"}], "]"}], ",", 
          RowBox[{"paramset", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", "1", ",", 
          "quadrature"}], "]"}], "+", "const"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "testlength"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"J", "\[Times]", "Q"}], "*)"}]}], "\n", "lqj", "\n"}], "Input",
 CellChangeTimes->{{3.8967346748547*^9, 3.896734676849576*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"78b7ff48-707d-4e5f-9291-d41310ac4829"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.27057607898948466`"}], ",", 
     RowBox[{"-", "0.33712603960390786`"}], ",", 
     RowBox[{"-", "0.420441487699487`"}], ",", 
     RowBox[{"-", "0.522886296930246`"}], ",", 
     RowBox[{"-", "0.6463434142857895`"}], ",", 
     RowBox[{"-", "0.7919396653841084`"}], ",", 
     RowBox[{"-", "0.959862502252742`"}], ",", 
     RowBox[{"-", "1.1493281776878934`"}], ",", 
     RowBox[{"-", "1.3587122612035714`"}], ",", 
     RowBox[{"-", "1.58579881358307`"}], ",", 
     RowBox[{"-", "1.8280733865042742`"}], ",", 
     RowBox[{"-", "2.0829889860127917`"}], ",", 
     RowBox[{"-", "2.3481621991957216`"}], ",", 
     RowBox[{"-", "2.621488782507489`"}], ",", 
     RowBox[{"-", "2.901190223317692`"}], ",", 
     RowBox[{"-", "3.185811923531392`"}], ",", 
     RowBox[{"-", "3.4741933246196584`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2647339309934107`"}], ",", 
     RowBox[{"-", "0.3333724710399266`"}], ",", 
     RowBox[{"-", "0.4203367606379161`"}], ",", 
     RowBox[{"-", "0.5283651129569603`"}], ",", 
     RowBox[{"-", "0.659612987108962`"}], ",", 
     RowBox[{"-", "0.8153063449830129`"}], ",", 
     RowBox[{"-", "0.9955220115295053`"}], ",", 
     RowBox[{"-", "1.1991733697610008`"}], ",", 
     RowBox[{"-", "1.4242067463950387`"}], ",", 
     RowBox[{"-", "1.667937656079036`"}], ",", 
     RowBox[{"-", "1.9274205533800228`"}], ",", 
     RowBox[{"-", "2.199761988835967`"}], ",", 
     RowBox[{"-", "2.482332098570386`"}], ",", 
     RowBox[{"-", "2.7728725664868574`"}], ",", 
     RowBox[{"-", "3.069524138649908`"}], ",", 
     RowBox[{"-", "3.3708033486800515`"}], ",", 
     RowBox[{"-", "3.675553806475676`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.29570085080570907`"}], ",", 
     RowBox[{"-", "0.3573158501997631`"}], ",", 
     RowBox[{"-", "0.4317452257970328`"}], ",", 
     RowBox[{"-", "0.5204426196044838`"}], ",", 
     RowBox[{"-", "0.6245818028388653`"}], ",", 
     RowBox[{"-", "0.7449281812014849`"}], ",", 
     RowBox[{"-", "0.8817466839068372`"}], ",", 
     RowBox[{"-", "1.0347683581096092`"}], ",", 
     RowBox[{"-", "1.2032242736611758`"}], ",", 
     RowBox[{"-", "1.3859380064317086`"}], ",", 
     RowBox[{"-", "1.581454304056257`"}], ",", 
     RowBox[{"-", "1.7881766121109663`"}], ",", 
     RowBox[{"-", "2.0044901628677163`"}], ",", 
     RowBox[{"-", "2.228856574275635`"}], ",", 
     RowBox[{"-", "2.4598757036503756`"}], ",", 
     RowBox[{"-", "2.696317711473994`"}], ",", 
     RowBox[{"-", "2.93713199080336`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.22031958371136973`"}], ",", 
     RowBox[{"-", "0.2945083723210383`"}], ",", 
     RowBox[{"-", "0.39608262047265863`"}], ",", 
     RowBox[{"-", "0.5309762955012239`"}], ",", 
     RowBox[{"-", "0.7038204734252099`"}], ",", 
     RowBox[{"-", "0.9167801759530637`"}], ",", 
     RowBox[{"-", "1.1689355046051904`"}], ",", 
     RowBox[{"-", "1.4565503486394382`"}], ",", 
     RowBox[{"-", "1.7740756351225453`"}], ",", 
     RowBox[{"-", "2.1153725677510065`"}], ",", 
     RowBox[{"-", "2.4746814818264005`"}], ",", 
     RowBox[{"-", "2.8471491597134637`"}], ",", 
     RowBox[{"-", "3.2289751654244045`"}], ",", 
     RowBox[{"-", "3.617329729798712`"}], ",", 
     RowBox[{"-", "4.010177332863655`"}], ",", 
     RowBox[{"-", "4.406087692799521`"}], ",", 
     RowBox[{"-", "4.804071395238573`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.37017219634229404`"}], ",", 
     RowBox[{"-", "0.44918950684744785`"}], ",", 
     RowBox[{"-", "0.5434588926244575`"}], ",", 
     RowBox[{"-", "0.6541537193677687`"}], ",", 
     RowBox[{"-", "0.7819700548336153`"}], ",", 
     RowBox[{"-", "0.927037567871374`"}], ",", 
     RowBox[{"-", "1.0889023343284756`"}], ",", 
     RowBox[{"-", "1.2665862052009165`"}], ",", 
     RowBox[{"-", "1.4587069423446282`"}], ",", 
     RowBox[{"-", "1.6636297099047035`"}], ",", 
     RowBox[{"-", "1.8796183716881592`"}], ",", 
     RowBox[{"-", "2.1049627254083614`"}], ",", 
     RowBox[{"-", "2.3380697680550826`"}], ",", 
     RowBox[{"-", "2.577517937052301`"}], ",", 
     RowBox[{"-", "2.8220801799501407`"}], ",", 
     RowBox[{"-", "3.0707244644336633`"}], ",", 
     RowBox[{"-", "3.322600168078382`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.436233724866411`"}], ",", 
     RowBox[{"-", "0.5427762393915826`"}], ",", 
     RowBox[{"-", "0.67083881273563`"}], ",", 
     RowBox[{"-", "0.8214089679944697`"}], ",", 
     RowBox[{"-", "0.9944944288113408`"}], ",", 
     RowBox[{"-", "1.1891217896323445`"}], ",", 
     RowBox[{"-", "1.403498704439354`"}], ",", 
     RowBox[{"-", "1.635285471213601`"}], ",", 
     RowBox[{"-", "1.8818961789742632`"}], ",", 
     RowBox[{"-", "2.140760151514762`"}], ",", 
     RowBox[{"-", "2.4095062765618898`"}], ",", 
     RowBox[{"-", "2.686065062520152`"}], ",", 
     RowBox[{"-", "2.9687035436043914`"}], ",", 
     RowBox[{"-", "3.2560151065533978`"}], ",", 
     RowBox[{"-", "3.5468845032972016`"}], ",", 
     RowBox[{"-", "3.8404429166797143`"}], ",", 
     RowBox[{"-", "4.136022332105848`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.17962215903128953`"}], ",", 
     RowBox[{"-", "0.23488282621304388`"}], ",", 
     RowBox[{"-", "0.3110321147078221`"}], ",", 
     RowBox[{"-", "0.4135093042566365`"}], ",", 
     RowBox[{"-", "0.5474723051848698`"}], ",", 
     RowBox[{"-", "0.7168139076365884`"}], ",", 
     RowBox[{"-", "0.9232334555542355`"}], ",", 
     RowBox[{"-", "1.1657826259098354`"}], ",", 
     RowBox[{"-", "1.4411225284617337`"}], ",", 
     RowBox[{"-", "1.7443554990977432`"}], ",", 
     RowBox[{"-", "2.0700340973078477`"}], ",", 
     RowBox[{"-", "2.412979402865937`"}], ",", 
     RowBox[{"-", "2.76875166148616`"}], ",", 
     RowBox[{"-", "3.1338069905897745`"}], ",", 
     RowBox[{"-", "3.5054539382858514`"}], ",", 
     RowBox[{"-", "3.881718005974325`"}], ",", 
     RowBox[{"-", "4.261184896460491`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.15314337942072623`"}], ",", 
     RowBox[{"-", "0.18954939726882447`"}], ",", 
     RowBox[{"-", "0.23780601918422198`"}], ",", 
     RowBox[{"-", "0.3009205254695206`"}], ",", 
     RowBox[{"-", "0.382115960316934`"}], ",", 
     RowBox[{"-", "0.4845339147627591`"}], ",", 
     RowBox[{"-", "0.6108324311998812`"}], ",", 
     RowBox[{"-", "0.7627608891388313`"}], ",", 
     RowBox[{"-", "0.9408384587690609`"}], ",", 
     RowBox[{"-", "1.1442523626142813`"}], ",", 
     RowBox[{"-", "1.3710158672608885`"}], ",", 
     RowBox[{"-", "1.618324629653493`"}], ",", 
     RowBox[{"-", "1.8829866831428836`"}], ",", 
     RowBox[{"-", "2.1618059783280383`"}], ",", 
     RowBox[{"-", "2.451851109198404`"}], ",", 
     RowBox[{"-", "2.7505981685922745`"}], ",", 
     RowBox[{"-", "3.0559727209175342`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2112790953727794`"}], ",", 
     RowBox[{"-", "0.23999485852275598`"}], ",", 
     RowBox[{"-", "0.27331862202208795`"}], ",", 
     RowBox[{"-", "0.31180130409658935`"}], ",", 
     RowBox[{"-", "0.3560003836748636`"}], ",", 
     RowBox[{"-", "0.4064616137298689`"}], ",", 
     RowBox[{"-", "0.46369758223389873`"}], ",", 
     RowBox[{"-", "0.5281644008940645`"}], ",", 
     RowBox[{"-", "0.6002383853516762`"}], ",", 
     RowBox[{"-", "0.6801949937538431`"}], ",", 
     RowBox[{"-", "0.7681923687878655`"}], ",", 
     RowBox[{"-", "0.8642614920166533`"}], ",", 
     RowBox[{"-", "0.9683042209977172`"}], ",", 
     RowBox[{"-", "1.0800994683800615`"}], ",", 
     RowBox[{"-", "1.1993167135960554`"}], ",", 
     RowBox[{"-", "1.3255351463100211`"}], ",", 
     RowBox[{"-", "1.4582662035084457`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.255129133742801`"}], ",", 
     RowBox[{"-", "0.3065294564068186`"}], ",", 
     RowBox[{"-", "0.3689708027554192`"}], ",", 
     RowBox[{"-", "0.4439349251536972`"}], ",", 
     RowBox[{"-", "0.5327521675946257`"}], ",", 
     RowBox[{"-", "0.6364774920258344`"}], ",", 
     RowBox[{"-", "0.7557779340461462`"}], ",", 
     RowBox[{"-", "0.8908549905398666`"}], ",", 
     RowBox[{"-", "1.0414201952289486`"}], ",", 
     RowBox[{"-", "1.2067299426698876`"}], ",", 
     RowBox[{"-", "1.3856709640969296`"}], ",", 
     RowBox[{"-", "1.576876671629597`"}], ",", 
     RowBox[{"-", "1.7788507801630775`"}], ",", 
     RowBox[{"-", "1.990078177202425`"}], ",", 
     RowBox[{"-", "2.209110846731354`"}], ",", 
     RowBox[{"-", "2.434624962076008`"}], ",", 
     RowBox[{"-", "2.665451466968249`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.07053163480581298`"}], ",", 
     RowBox[{"-", "0.0788650533273295`"}], ",", 
     RowBox[{"-", "0.09073764486754791`"}], ",", 
     RowBox[{"-", "0.10758061753379873`"}], ",", 
     RowBox[{"-", "0.1313331418559184`"}], ",", 
     RowBox[{"-", "0.16455617076728268`"}], ",", 
     RowBox[{"-", "0.21051181391092422`"}], ",", 
     RowBox[{"-", "0.27314962757670447`"}], ",", 
     RowBox[{"-", "0.3569217230202814`"}], ",", 
     RowBox[{"-", "0.46635918455711206`"}], ",", 
     RowBox[{"-", "0.605413604902452`"}], ",", 
     RowBox[{"-", "0.7767009334813175`"}], ",", 
     RowBox[{"-", "0.9809099332431755`"}], ",", 
     RowBox[{"-", "1.2166345646213232`"}], ",", 
     RowBox[{"-", "1.4807109044798474`"}], ",", 
     RowBox[{"-", "1.7688996223437672`"}], ",", 
     RowBox[{"-", "2.0766329490174216`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.06744022756370774`"}], ",", 
     RowBox[{"-", "0.07468378961139144`"}], ",", 
     RowBox[{"-", "0.08512224760341287`"}], ",", 
     RowBox[{"-", "0.10010661957091023`"}], ",", 
     RowBox[{"-", "0.12149904323062542`"}], ",", 
     RowBox[{"-", "0.1518065310630445`"}], ",", 
     RowBox[{"-", "0.1942930987003382`"}], ",", 
     RowBox[{"-", "0.2530109869617978`"}], ",", 
     RowBox[{"-", "0.3326628912669061`"}], ",", 
     RowBox[{"-", "0.4382036235110799`"}], ",", 
     RowBox[{"-", "0.5741517885935586`"}], ",", 
     RowBox[{"-", "0.7437292636372195`"}], ",", 
     RowBox[{"-", "0.9481157539857857`"}], ",", 
     RowBox[{"-", "1.186148915195309`"}], ",", 
     RowBox[{"-", "1.454619908324609`"}], ",", 
     RowBox[{"-", "1.749016614513469`"}], ",", 
     RowBox[{"-", "2.064384533977094`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.14062023714729097`"}], ",", 
     RowBox[{"-", "0.17900374494234414`"}], ",", 
     RowBox[{"-", "0.23244890369712348`"}], ",", 
     RowBox[{"-", "0.30558074494352844`"}], ",", 
     RowBox[{"-", "0.4034457782006669`"}], ",", 
     RowBox[{"-", "0.5308874076931115`"}], ",", 
     RowBox[{"-", "0.6916838132323333`"}], ",", 
     RowBox[{"-", "0.8877021489359961`"}], ",", 
     RowBox[{"-", "1.1184257494983822`"}], ",", 
     RowBox[{"-", "1.3810885364483039`"}], ",", 
     RowBox[{"-", "1.6713477946563118`"}], ",", 
     RowBox[{"-", "1.9841785529776144`"}], ",", 
     RowBox[{"-", "2.3146549641041`"}], ",", 
     RowBox[{"-", "2.6584437331453796`"}], ",", 
     RowBox[{"-", "3.0120077668982828`"}], ",", 
     RowBox[{"-", "3.3726077596913195`"}], ",", 
     RowBox[{"-", "3.738199193948885`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2178263730635354`"}], ",", 
     RowBox[{"-", "0.2879959200316674`"}], ",", 
     RowBox[{"-", "0.38319139684687337`"}], ",", 
     RowBox[{"-", "0.5087944286913076`"}], ",", 
     RowBox[{"-", "0.669181464465403`"}], ",", 
     RowBox[{"-", "0.8667222277325595`"}], ",", 
     RowBox[{"-", "1.101154690861077`"}], ",", 
     RowBox[{"-", "1.3696569944176493`"}], ",", 
     RowBox[{"-", "1.6675775868630451`"}], ",", 
     RowBox[{"-", "1.9894581633209403`"}], ",", 
     RowBox[{"-", "2.3299390379306684`"}], ",", 
     RowBox[{"-", "2.6843273607546005`"}], ",", 
     RowBox[{"-", "3.048824314158975`"}], ",", 
     RowBox[{"-", "3.420518204171526`"}], ",", 
     RowBox[{"-", "3.797260473190372`"}], ",", 
     RowBox[{"-", "4.17750677100048`"}], ",", 
     RowBox[{"-", "4.560166783848341`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.21191764531093207`"}], ",", 
     RowBox[{"-", "0.26835513435785147`"}], ",", 
     RowBox[{"-", "0.3419265133332352`"}], ",", 
     RowBox[{"-", "0.4360389616607835`"}], ",", 
     RowBox[{"-", "0.5537896702751407`"}], ",", 
     RowBox[{"-", "0.6974968439460323`"}], ",", 
     RowBox[{"-", "0.8682804361320704`"}], ",", 
     RowBox[{"-", "1.065838969790766`"}], ",", 
     RowBox[{"-", "1.2885109222370679`"}], ",", 
     RowBox[{"-", "1.5335956688761452`"}], ",", 
     RowBox[{"-", "1.7978117122544373`"}], ",", 
     RowBox[{"-", "2.0777459586208074`"}], ",", 
     RowBox[{"-", "2.3701932021469596`"}], ",", 
     RowBox[{"-", "2.6723535813677057`"}], ",", 
     RowBox[{"-", "2.981906785328655`"}], ",", 
     RowBox[{"-", "3.297002755367316`"}], ",", 
     RowBox[{"-", "3.6162075418126762`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8968228614552317`*^9, 3.896828318633664*^9, 
  3.8968284492881536`*^9, 3.896903041148234*^9, 3.896903377501371*^9, 
  3.896903438821806*^9, 3.8969958987372723`*^9, 3.896996447456996*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"e011c20f-061b-4af6-b07b-196cfffeb65e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"postthetanume", "=", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"zzz", "*", "uuu"}], ")"}], ".", "lpj"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"zzz", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "uuu"}], ")"}]}], ")"}], ".", "lqj"}], "-", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"quadrature", "^", "2"}], "/", "2"}], ",", 
        RowBox[{"{", "samplesize", "}"}]}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"S", "\[Times]", "Q"}], "*)"}]}], "\n", 
 RowBox[{"Dimensions", "[", "postthetanume", "]"}]}], "Input",
 CellChangeTimes->{
  3.896734709799601*^9, 3.896734853470086*^9, {3.89673490916431*^9, 
   3.896734917005949*^9}, 3.8967528122892303`*^9, {3.8967529062951202`*^9, 
   3.8967529152673597`*^9}, {3.896752946429943*^9, 3.896752948853158*^9}, {
   3.8967534096993923`*^9, 3.8967534655545893`*^9}, {3.89675352216527*^9, 
   3.8967535359906807`*^9}, {3.896907936292863*^9, 3.89690794002665*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"5b37f45a-a7b6-4a0a-b38c-ebbf8d0d3187"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"500", ",", "17"}], "}"}]], "Output",
 CellChangeTimes->{3.8968228614629393`*^9, 3.896828318651587*^9, 
  3.896828449295953*^9, 3.896903041168805*^9, 3.89690337750926*^9, 
  3.896903438844521*^9, 3.896995898745864*^9, 3.896996447498032*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"c6ea21a8-8d3d-4be3-937b-f0f72ffda0a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"postthetadenom", "=", 
    RowBox[{"Total", "[", 
     RowBox[{"Transpose", "[", "postthetanume", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"S", "\[Times]", "1"}], 
   "*)"}]}], "\[IndentingNewLine]", "postthetadenom"}], "Input",
 CellChangeTimes->{{3.896734750036096*^9, 3.896734841043186*^9}, {
  3.8967349211851463`*^9, 3.896734928413185*^9}, {3.896753549429945*^9, 
  3.896753575894609*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"57598909-66ee-4154-b8f2-7d5ea87aa6fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.00006663833952716086`", ",", "0.0019037476492596095`", ",", 
   "0.005237984741205168`", ",", "0.002946196786295225`", ",", 
   "0.0003458440820095444`", ",", "0.01402791509428826`", ",", 
   "0.0000218554866887707`", ",", "0.00024940985302182757`", ",", 
   "0.058756292684999316`", ",", "0.00011261096885783388`", ",", 
   "0.00010940105831622975`", ",", "0.0009998550734444914`", ",", 
   "0.045903743237841015`", ",", "0.0006473652271347408`", ",", 
   "0.00038965464939176987`", ",", "0.00011476129644593222`", ",", 
   "0.0043189876920316315`", ",", "0.00005611457625080024`", ",", 
   "0.00409705474207379`", ",", "0.000032224871510604015`", ",", 
   "0.04308422581518892`", ",", "0.0001676797100938065`", ",", 
   "0.0013444143064747067`", ",", "0.0031159780705698947`", ",", 
   "0.0006599948031864283`", ",", "0.000014407114603198638`", ",", 
   "0.00022844300903361286`", ",", "0.02084437125535967`", ",", 
   "0.02084437125535967`", ",", "0.00017142932809496208`", ",", 
   "0.00022589963673034277`", ",", "0.003231704659796081`", ",", 
   "0.00033687138929979323`", ",", "0.0001677511509045314`", ",", 
   "0.0887822040337995`", ",", "0.0008839060262592184`", ",", 
   "0.001927375589391522`", ",", "0.012289203228368234`", ",", 
   "0.0013251462040693462`", ",", "0.0014543144513755122`", ",", 
   "0.011511677101707458`", ",", "0.018710655685784616`", ",", 
   "0.002468739613652513`", ",", "0.0008916018458634846`", ",", 
   "0.0026331268726012226`", ",", "0.006359087123831929`", ",", 
   "0.0016741748712852192`", ",", "0.0025449818438358232`", ",", 
   "0.0013916015772844905`", ",", "0.007260277581548391`", ",", 
   "0.003648935939693739`", ",", "0.05054210351973664`", ",", 
   "0.0011017603938711484`", ",", "0.0021406964542380435`", ",", 
   "0.0017852946740029689`", ",", "0.01402791509428826`", ",", 
   "0.0010909575236613916`", ",", "0.012289203228368234`", ",", 
   "0.06235055664018844`", ",", "0.002230198040129907`", ",", 
   "0.01871065568578462`", ",", "0.004231747568290343`", ",", 
   "0.00019805863760536676`", ",", "0.0012587499579141679`", ",", 
   "0.00136092852180179`", ",", "0.00041537597003369627`", ",", 
   "0.00004070376320100229`", ",", "0.00007677310134817358`", ",", 
   "0.05054210351973664`", ",", "0.0002434277845034999`", ",", 
   "0.00016180685368193516`", ",", "0.00016924391251287702`", ",", 
   "0.007105439911987562`", ",", "0.0031159780705698947`", ",", 
   "0.002230198040129907`", ",", "0.001166861199463356`", ",", 
   "0.015720588472495453`", ",", "0.05054210351973664`", ",", 
   "0.0025449818438358232`", ",", "0.000046435882776864844`", ",", 
   "0.0010128607550670028`", ",", "0.0002497010587694685`", ",", 
   "0.0002477739715332097`", ",", "0.0010119481610470788`", ",", 
   "0.0030851333580720337`", ",", "0.00009728592375238944`", ",", 
   "0.00045044011743667646`", ",", "0.000024025871299651665`", ",", 
   "0.0015337078888518598`", ",", "0.003402976354635571`", ",", 
   "0.00032666029781749776`", ",", "0.0001681995579806599`", ",", 
   "0.0002202212467174027`", ",", "0.05054210351973664`", ",", 
   "0.00024319193862281795`", ",", "0.0002788018262133525`", ",", 
   "0.0009996639777826231`", ",", "0.00010730959387445084`", ",", 
   "0.002427581526849976`", ",", "0.008073482061111997`", ",", 
   "0.00036890056946506936`", ",", "0.0004973710510001336`", ",", 
   "0.0007706824726504434`", ",", "0.0003102572486808875`", ",", 
   "0.014972014009576696`", ",", "0.00044664036160805995`", ",", 
   "0.0010530091471357332`", ",", "0.0027782225248452782`", ",", 
   "0.00033589222265458787`", ",", "0.008406171211528715`", ",", 
   "0.008406171211528715`", ",", "0.0014197480559361203`", ",", 
   "0.00013081451471249077`", ",", "0.00011062100466600815`", ",", 
   "0.00015187461130771856`", ",", "0.005081922317138354`", ",", 
   "0.00034090781268631895`", ",", "0.0006157065930304406`", ",", 
   "0.0001117648381648565`", ",", "0.0008936208422295816`", ",", 
   "0.0016828193266408594`", ",", "0.00039950750288394305`", ",", 
   "0.013396070217621731`", ",", "0.04308422581518891`", ",", 
   "0.003041390756175185`", ",", "0.00256961484113064`", ",", 
   "0.00034588374587096374`", ",", "0.015028824413044577`", ",", 
   "0.0060345657432815504`", ",", "0.0005066726097517156`", ",", 
   "0.003931162759132186`", ",", "0.0012396111697894098`", ",", 
   "0.02084437125535967`", ",", "0.000118431766870008`", ",", 
   "0.00006337361385673742`", ",", "0.00014846406026971932`", ",", 
   "0.009160840816646849`", ",", "0.0009168606187019446`", ",", 
   "0.0001512797256758645`", ",", "0.0006946889620170732`", ",", 
   "0.015028824413044577`", ",", "0.00022730801711667517`", ",", 
   "0.0013237641910987127`", ",", "0.00032752501555517743`", ",", 
   "0.0027641351133780687`", ",", "0.0008340278026937081`", ",", 
   "0.00008702594579387813`", ",", "0.0060345657432815504`", ",", 
   "0.0006167682557497831`", ",", "0.007260277581548391`", ",", 
   "0.0023080270480718263`", ",", "0.004036857015446517`", ",", 
   "0.017276377784935643`", ",", "0.0005870922101622693`", ",", 
   "0.0004991207245518048`", ",", "0.0008814347223444558`", ",", 
   "0.002705862319060514`", ",", "0.0032058547523703346`", ",", 
   "0.007174626112732877`", ",", "0.0887822040337995`", ",", 
   "0.004839314279962093`", ",", "0.0008767106853149571`", ",", 
   "0.0005159010126149196`", ",", "0.00008463504679346753`", ",", 
   "0.008202696532021412`", ",", "0.00015212477154465733`", ",", 
   "0.0018276225190324246`", ",", "0.000341213468643622`", ",", 
   "0.05466637050121326`", ",", "0.000028795818272415603`", ",", 
   "0.0004084896994658015`", ",", "0.05855588551230034`", ",", 
   "0.00364717960951239`", ",", "0.00020233702717504414`", ",", 
   "0.00033283377539337173`", ",", "0.005950744107478432`", ",", 
   "0.02084437125535967`", ",", "0.0006877545612356377`", ",", 
   "0.00136092852180179`", ",", "0.0005587317846475964`", ",", 
   "0.0007706432674488652`", ",", "0.00019615531317824857`", ",", 
   "0.015028824413044577`", ",", "0.0007823861653276494`", ",", 
   "0.002914960971900548`", ",", "0.0009036469382409136`", ",", 
   "0.00005340344481846179`", ",", "0.0009050836035232186`", ",", 
   "0.0022369955219607154`", ",", "0.0008941635833214486`", ",", 
   "0.0008274360418414402`", ",", "0.00025218992110789357`", ",", 
   "0.0011137809025646309`", ",", "0.0002227839647246198`", ",", 
   "0.00017103117524812621`", ",", "0.013396070217621731`", ",", 
   "0.001176907952739118`", ",", "0.012507395830270046`", ",", 
   "0.0021855865264603035`", ",", "0.000563463400899721`", ",", 
   "0.010523418856182274`", ",", "0.003446565358572519`", ",", 
   "0.0003168609007371099`", ",", "0.05054210351973664`", ",", 
   "0.004454212729536592`", ",", "0.0004105957534741388`", ",", 
   "0.003071382667759625`", ",", "0.011511677101707458`", ",", 
   "0.000499904231673998`", ",", "0.001376043994110489`", ",", 
   "0.0005061723855858036`", ",", "0.058756292684999316`", ",", 
   "0.00649338746453675`", ",", "0.00046571435904103794`", ",", 
   "0.0006717578696137166`", ",", "0.0006057016621914507`", ",", 
   "0.04308422581518892`", ",", "0.00577937708867727`", ",", 
   "0.0001646321169287488`", ",", "0.00005746904366317144`", ",", 
   "0.00022039310043241384`", ",", "0.015028824413044577`", ",", 
   "0.002364855995432481`", ",", "0.00033513210843083216`", ",", 
   "0.002040988888554125`", ",", "0.003556452356686075`", ",", 
   "0.002164450295292642`", ",", "0.005334416333136226`", ",", 
   "0.00016496566582952969`", ",", "0.002336022310124976`", ",", 
   "0.0008455518310820577`", ",", "0.00004890343274322829`", ",", 
   "0.05054210351973664`", ",", "0.00018142336942467038`", ",", 
   "0.0013909731003226417`", ",", "0.0011086361215120342`", ",", 
   "0.00007733550122379588`", ",", "0.011025401680762688`", ",", 
   "0.003664707966101128`", ",", "0.02084437125535967`", ",", 
   "0.05054210351973664`", ",", "0.0014197480559361203`", ",", 
   "0.0008922517148946119`", ",", "0.001554869938529694`", ",", 
   "0.02084437125535967`", ",", "0.00007922068245759593`", ",", 
   "0.0016335456766211976`", ",", "0.0887822040337995`", ",", 
   "0.001780174867403529`", ",", "0.05466637050121326`", ",", 
   "0.0004626213558938599`", ",", "0.0009243220021893408`", ",", 
   "0.00210581308262855`", ",", "0.0008637595097500382`", ",", 
   "0.0026911758232148254`", ",", "0.00021039113398542054`", ",", 
   "0.0005585343204045464`", ",", "0.00001239139138788641`", ",", 
   "0.0004823451349838186`", ",", "0.00015034932510528667`", ",", 
   "0.00007226707369252886`", ",", "0.05855588551230034`", ",", 
   "0.0037025107539644005`", ",", "0.00011010836679893156`", ",", 
   "0.0003043968609689081`", ",", "0.005158322183137722`", ",", 
   "0.010485979037402476`", ",", "0.0008072971494850536`", ",", 
   "0.0014568512313876227`", ",", "0.00015918778772986583`", ",", 
   "0.01996492749482724`", ",", "0.0007013672268415358`", ",", 
   "0.00018259662906849116`", ",", "0.0012210620589063232`", ",", 
   "0.001078159346343347`", ",", "0.00873399557897552`", ",", 
   "0.00003191859141413024`", ",", "0.0001900971841462098`", ",", 
   "0.0045280839798057`", ",", "0.0006794903767883872`", ",", 
   "0.001978834993418586`", ",", "0.0003049406579788239`", ",", 
   "0.0004445293923499082`", ",", "0.05054210351973664`", ",", 
   "0.0002491824197442614`", ",", "0.00044150664449637433`", ",", 
   "0.008924975934827733`", ",", "0.0012812456562243525`", ",", 
   "0.01588097087099657`", ",", "0.0887822040337995`", ",", 
   "0.0056638532455022365`", ",", "0.018710655685784616`", ",", 
   "0.00007673126227233628`", ",", "0.0025449818438358232`", ",", 
   "0.00003672093355745671`", ",", "0.00035523573925405155`", ",", 
   "0.01038863287460914`", ",", "0.0012979608846423827`", ",", 
   "0.0002527067192014763`", ",", "0.0007348797323652089`", ",", 
   "0.00019684914271893075`", ",", "0.008196593773212087`", ",", 
   "0.0010248778748755082`", ",", "0.0004061303721780896`", ",", 
   "0.0007545439694514839`", ",", "0.0011524183514779684`", ",", 
   "0.000258131287119375`", ",", "0.0015337078888518598`", ",", 
   "0.002946196786295225`", ",", "0.0012095357049409163`", ",", 
   "0.005237984741205168`", ",", "0.019179291685098906`", ",", 
   "0.004400616442916635`", ",", "0.0002957077769807571`", ",", 
   "0.0013590011905705724`", ",", "0.001002407920560174`", ",", 
   "0.05855588551230034`", ",", "0.0002315285062297551`", ",", 
   "0.000018245329564622905`", ",", "0.0005588125645093156`", ",", 
   "0.0019788785435598793`", ",", "0.012290704544451843`", ",", 
   "0.00012041834833118536`", ",", "0.0013237641910987127`", ",", 
   "0.045903743237841015`", ",", "0.015720588472495453`", ",", 
   "0.0007025888501121599`", ",", "0.0032251208785476354`", ",", 
   "0.003004462740654759`", ",", "0.005214974468966145`", ",", 
   "0.008406171211528715`", ",", "0.0010039769006951243`", ",", 
   "0.0009221888405654353`", ",", "0.0013237641910987127`", ",", 
   "0.003648935939693739`", ",", "0.008202696532021412`", ",", 
   "0.0015509072526634438`", ",", "0.0003539112836477422`", ",", 
   "0.045903743237841015`", ",", "0.000655029487857124`", ",", 
   "0.00008702895801540044`", ",", "0.00136092852180179`", ",", 
   "0.003556452356686075`", ",", "0.011025401680762688`", ",", 
   "0.00039869473077346247`", ",", "0.011511677101707458`", ",", 
   "0.005950744107478432`", ",", "0.007579533375972734`", ",", 
   "0.0032251208785476354`", ",", "0.00043649828556102487`", ",", 
   "0.0013467034959637409`", ",", "0.0008222394345310728`", ",", 
   "0.007144519970405069`", ",", "0.0014627669531909685`", ",", 
   "0.009904733994692315`", ",", "0.016948222321883963`", ",", 
   "0.0008506883378249321`", ",", "0.017276377784935643`", ",", 
   "0.0006616621415453837`", ",", "0.00006990864566459257`", ",", 
   "0.05054210351973664`", ",", "0.00630265068090059`", ",", 
   "0.00010434700578467673`", ",", "0.0008262347176069965`", ",", 
   "0.004454212729536592`", ",", "0.007121006231583167`", ",", 
   "0.0887822040337995`", ",", "0.00009693599193034917`", ",", 
   "0.0003222295811888042`", ",", "0.003396727656010534`", ",", 
   "0.05466637050121326`", ",", "0.001091109408607885`", ",", 
   "0.0017852946740029689`", ",", "0.00003890110646778134`", ",", 
   "0.0011848886361532968`", ",", "0.005237984741205168`", ",", 
   "0.0019515315422404674`", ",", "0.0008760526001755728`", ",", 
   "0.017276377784935643`", ",", "0.001976608645728342`", ",", 
   "0.00021255270461713343`", ",", "0.00008544339388579119`", ",", 
   "0.00021220062634082386`", ",", "0.0001937776867718329`", ",", 
   "0.0071943821746460026`", ",", "0.0003121801974975155`", ",", 
   "0.00005146661147703476`", ",", "0.00020868560587195716`", ",", 
   "0.05054210351973664`", ",", "0.0011086361215120342`", ",", 
   "0.0003551973594379996`", ",", "0.0003506935669042079`", ",", 
   "0.003446565358572519`", ",", "0.0007121705387660493`", ",", 
   "0.00022596515480334937`", ",", "0.00036048201051744685`", ",", 
   "0.001593041094436026`", ",", "0.0020052160231046937`", ",", 
   "0.000028664069354197324`", ",", "0.00033687138929979323`", ",", 
   "0.009160840816646849`", ",", "0.0003225500357431274`", ",", 
   "0.001164330901848305`", ",", "0.004232363642009218`", ",", 
   "0.000372091880851543`", ",", "0.0023168843279430342`", ",", 
   "0.0002000865109750013`", ",", "0.00210581308262855`", ",", 
   "0.0004524367296475949`", ",", "0.002473871985113542`", ",", 
   "0.005265160601260097`", ",", "0.00047831073691755667`", ",", 
   "0.005950744107478432`", ",", "0.0000642018294720184`", ",", 
   "0.009551963052901204`", ",", "0.0887822040337995`", ",", 
   "0.0006066738365277035`", ",", "0.013071037984336764`", ",", 
   "0.00003242287159170635`", ",", "0.002132105450232863`", ",", 
   "0.001934862202014974`", ",", "0.0006188739624376271`", ",", 
   "0.000875085750708003`", ",", "0.0005504555523267756`", ",", 
   "0.001934862202014974`", ",", "0.00005008918029285854`", ",", 
   "0.008196593773212087`", ",", "0.0001626908184250113`", ",", 
   "0.004208987599923529`", ",", "0.001516758337123924`", ",", 
   "0.007494343581648091`", ",", "0.0015898976096401743`", ",", 
   "0.006834071908838301`", ",", "0.01311846374901843`", ",", 
   "0.0007965860913937555`", ",", "0.011025401680762688`", ",", 
   "0.002100146788757462`", ",", "0.0017120989431574423`", ",", 
   "0.0008670118248726436`", ",", "0.0022514348635131825`", ",", 
   "0.0002392908351988222`", ",", "0.0034492647020973317`", ",", 
   "0.010485979037402476`", ",", "0.010485979037402476`", ",", 
   "0.0009616607073490605`", ",", "0.0004677191425705865`", ",", 
   "0.06235055664018844`", ",", "0.01402791509428826`", ",", 
   "0.0003689940565568066`", ",", "0.004598676738991602`", ",", 
   "0.000376929261099046`", ",", "0.0044814813247234155`", ",", 
   "0.0005804875754117846`", ",", "0.05054210351973664`", ",", 
   "0.05855588551230034`", ",", "0.00018123112754634462`", ",", 
   "0.008524674053109225`", ",", "0.011511677101707458`", ",", 
   "0.0019515315422404683`", ",", "0.000016134951034315375`", ",", 
   "0.0005608224473600009`", ",", "0.00005677045977183997`", ",", 
   "0.00014543107504645387`", ",", "0.00025859068976209196`", ",", 
   "0.0005921392687561152`", ",", "0.015720588472495453`", ",", 
   "0.013396070217621731`", ",", "0.045903743237841015`", ",", 
   "0.0001570230578519044`", ",", "0.00040872855882234085`", ",", 
   "0.00024080978574242707`", ",", "0.00009141831716692528`", ",", 
   "0.0007967555230473152`", ",", "0.00018259230013573465`", ",", 
   "0.01996492749482724`", ",", "0.00024270421273958032`", ",", 
   "0.01038863287460914`", ",", "0.011025401680762688`", ",", 
   "0.00020887924703442525`", ",", "0.012372529516391595`", ",", 
   "0.0003153974091314582`", ",", "0.05855588551230034`", ",", 
   "0.0010472852546484068`", ",", "0.0012289219337951723`", ",", 
   "0.018710655685784616`", ",", "0.01311846374901843`", ",", 
   "0.007144519970405069`", ",", "0.001685158149312747`", ",", 
   "0.003158495367684105`", ",", "0.00041208147487858303`", ",", 
   "0.0002941745638388098`", ",", "0.0029047223054446468`", ",", 
   "0.0002542258707183376`", ",", "0.0009972953500252421`", ",", 
   "0.0003153974091314582`", ",", "0.00015927646577534852`", ",", 
   "0.00018825241820978454`", ",", "0.0001971386498769059`", ",", 
   "0.0019515315422404683`", ",", "0.00005100034887163797`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.896822861488278*^9, 3.8968283186845617`*^9, 
  3.896828449339031*^9, 3.896903041264367*^9, 3.896903377526401*^9, 
  3.8969034388545027`*^9, 3.896995898778523*^9, 3.896996447507194*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"7afde7e8-fbfe-47c1-972e-e0271934221d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"posttheta", "=", 
    RowBox[{"postthetanume", "/", "postthetadenom"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"S", "\[Times]", "Q"}], "*)"}]}], "\n", 
 RowBox[{"posttheta", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.896734833423295*^9, 3.8967348356802597`*^9}, {
  3.896734932154508*^9, 3.896734938198406*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"22cfb828-205d-455d-87ac-a775986fb551"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.00005992556959776659`", ",", "0.0005651854984657925`", ",", 
     "0.004060302954257515`", ",", "0.021030515910494478`", ",", 
     "0.07462436806632344`", ",", "0.17403681645131952`", ",", 
     "0.25961090103106876`", ",", "0.24500323903288376`", ",", 
     "0.1468714171735401`", ",", "0.05679876571982176`", ",", 
     "0.014497871853254154`", ",", "0.0025093589681454637`", ",", 
     "0.00030320459159100384`", ",", "0.000026346282918866643`", ",", 
     "1.6948096641204229`*^-6", ",", "8.292559203466414`*^-8", ",", 
     "3.1610613912285713`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.637944181405787`*^-7", ",", "6.908543976463337`*^-6", ",", 
     "0.00010203384797481915`", ",", "0.0010950786541763452`", ",", 
     "0.008038407157119431`", ",", "0.03849404997232056`", ",", 
     "0.11673462645450011`", ",", "0.22168122729715306`", ",", 
     "0.2649728437685076`", ",", "0.20278904811723206`", ",", 
     "0.10183941673992004`", ",", "0.03452936898445733`", ",", 
     "0.008147113917979796`", ",", "0.0013792873191625053`", ",", 
     "0.00017260026721242427`", ",", "0.000016410504489478096`", ",", 
     "1.2146593998519832`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9444312468271477`*^-7", ",", "4.015340692990413`*^-6", ",", 
     "0.00006450344603696351`", ",", "0.0007518944617449988`", ",", 
     "0.005980442822807098`", ",", "0.030949582163963117`", ",", 
     "0.1011663960780078`", ",", "0.20660310170981624`", ",", 
     "0.2650506409579682`", ",", "0.21736740814120664`", ",", 
     "0.11682395789655245`", ",", "0.04234818170039398`", ",", 
     "0.01067438779058795`", ",", "0.0019294299773733252`", ",", 
     "0.0002576646562277104`", ",", "0.000026135228353867743`", ",", 
     "2.063185142126135`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1448179436808762`*^-8", ",", "2.7703947746959565`*^-7", ",", 
     "5.486023906802887`*^-6", ",", "0.00008285546798672685`", ",", 
     "0.0008950690204053424`", ",", "0.006565400751785258`", ",", 
     "0.03155804669367101`", ",", "0.09768719264449327`", ",", 
     "0.1945528380935002`", ",", "0.2522361482704611`", ",", 
     "0.21721041036860309`", ",", "0.12738778065127385`", ",", 
     "0.05230749514307876`", ",", "0.015476213161278281`", ",", 
     "0.0033942942303899987`", ",", "0.0005667231684954248`", ",", 
     "0.00007375782301406444`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0004391419562448433`", ",", "0.003255769409652818`", ",", 
     "0.017743458783863617`", ",", "0.06703150157355636`", ",", 
     "0.16672058062306513`", ",", "0.2625385188179083`", ",", 
     "0.25584739755434166`", ",", "0.15343637776888835`", ",", 
     "0.05716930660861221`", ",", "0.01350744215542438`", ",", 
     "0.002079300778616053`", ",", "0.00021497545703298086`", ",", 
     "0.00001540762010548738`", ",", "7.901275283487126`*^-7", ",", 
     "2.9888298927579214`*^-8", ",", "8.577195217729228`*^-10", ",", 
     "1.9140936309613605`*^-11"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896822861497291*^9, 3.896828318726366*^9, 
  3.896828449379388*^9, 3.8969030413033648`*^9, 3.896903377535306*^9, 
  3.89690343887602*^9, 3.8969958987879763`*^9, 3.896996447547721*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"84ae7008-966f-4478-822a-cda21bec8862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"marginalposttheta", "=", 
    RowBox[{"Total", "[", "posttheta", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Q", "\[Times]", "1"}], 
   "*)"}]}], "\[IndentingNewLine]", "marginalposttheta"}], "Input",
 CellChangeTimes->{{3.896734984015704*^9, 3.89673498537157*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"49e372d7-620c-44de-933d-2a66352aa436"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.42976286640734157`", ",", "1.5656176226508116`", ",", 
   "4.789359676493449`", ",", "12.07073190997347`", ",", 
   "24.528149185132513`", ",", "40.34962940759579`", ",", "56.1936329925172`",
    ",", "69.81529893657134`", ",", "77.66549445348312`", ",", 
   "74.51001651766965`", ",", "59.80260304264512`", ",", "39.83530926161984`",
    ",", "22.13627097278957`", ",", "10.36184187981114`", ",", 
   "4.125827355748157`", ",", "1.4075718198021598`", ",", 
   "0.41288209908922296`"}], "}"}]], "Output",
 CellChangeTimes->{3.8968228615205793`*^9, 3.8968283187439823`*^9, 
  3.896828449406629*^9, 3.896903041320256*^9, 3.896903377550425*^9, 
  3.896903438882841*^9, 3.896995898818684*^9, 3.896996447556066*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"9a8a8b6f-f35c-4a19-9ba0-00d814a12c1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"qjtrue", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "uuu", "]"}], ".", "posttheta"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"J", "\[Times]", "Q"}], 
   "*)"}]}], "\[IndentingNewLine]", "qjtrue"}], "Input",
 CellChangeTimes->{{3.896734996485663*^9, 3.896734998988439*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"1eea5d9e-9114-4f02-a0c2-9d06b4546245"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.11627408383210719`", ",", "0.5415374587020719`", ",", 
     "2.010412360230201`", ",", "5.848729855066539`", ",", 
     "13.249010875767187`", ",", "23.842418994680404`", ",", 
     "36.09889848560856`", ",", "48.810890581056725`", ",", 
     "58.8983391112513`", ",", "60.568932018850006`", ",", 
     "51.35824660246996`", ",", "35.673106419285105`", ",", 
     "20.450400471234296`", ",", "9.793444346883035`", ",", 
     "3.9649222214198474`", ",", "1.369233684065101`", ",", 
     "0.40520242959752517`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1481736617156952`", ",", "0.5493971828095726`", ",", 
     "1.8203851887860694`", ",", "5.170908612833443`", ",", 
     "12.021592212010455`", ",", "22.747276938724983`", ",", 
     "36.38412998232049`", ",", "50.93569542405258`", ",", 
     "61.71694948778751`", ",", "62.53196059377194`", ",", 
     "51.996845479860255`", ",", "35.535002828552884`", ",", 
     "20.169495950941876`", ",", "9.622554557161951`", ",", 
     "3.89834523966016`", ",", "1.3502612246457706`", ",", 
     "0.40102543436437377`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.16553795544814343`", ",", "0.6800073260240339`", ",", 
     "2.3350515160648753`", ",", "6.449078667848322`", ",", 
     "13.93959487758422`", ",", "24.00206215965379`", ",", 
     "35.31605619515355`", ",", "47.32891726188966`", ",", 
     "56.97487304119096`", ",", "58.28655853873245`", ",", 
     "49.08654780525202`", ",", "33.956527029097856`", ",", 
     "19.49535110717544`", ",", "9.400387722027952`", ",", 
     "3.843238136626795`", ",", "1.3403520487156877`", ",", 
     "0.3998586115142382`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.05348005627344843`", ",", "0.2891595910624156`", ",", 
     "1.228043430699744`", ",", "4.012589109359176`", ",", 
     "10.147954817236297`", ",", "20.646125153014427`", ",", 
     "35.50938412318902`", ",", "52.558882689651796`", ",", 
     "65.52364269693352`", ",", "67.01810042821486`", ",", 
     "55.744041785691635`", ",", "37.93225966251518`", ",", 
     "21.375193858893233`", ",", "10.105981034685994`", ",", 
     "4.054353753586147`", ",", "1.391073140450568`", ",", 
     "0.40973466854250273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.14207829920864068`", ",", "0.6372779297520306`", ",", 
     "2.3247112158959973`", ",", "6.751194829241525`", ",", 
     "15.385921906518464`", ",", "27.791880914102777`", ",", 
     "41.64796968402999`", ",", "54.71537173909755`", ",", 
     "63.69088073270217`", ",", "63.54988639002739`", ",", 
     "52.789380130519966`", ",", "36.23709091744458`", ",", 
     "20.665388734916274`", ",", "9.882049445051685`", ",", 
     "3.9999832814181184`", ",", "1.3807478430887723`", ",", 
     "0.4081860069840645`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1606279748264566`", ",", "0.6696232034386843`", ",", 
     "2.362889183579007`", ",", "6.810756354393538`", ",", 
     "15.626923936956045`", ",", "28.836185521230767`", ",", 
     "44.75602596526494`", ",", "60.64490683714583`", ",", 
     "71.13779952708873`", ",", "69.9567578097016`", ",", "56.6236300355146`",
      ",", "37.778881756635116`", ",", "21.01895203948739`", ",", 
     "9.881087653935097`", ",", "3.9650641395550545`", ",", 
     "1.3656431262497621`", ",", "0.4042449349973532`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.12722082477109267`", ",", "0.4840972992585942`", ",", 
     "1.5225944716223263`", ",", "3.9890384895208317`", ",", 
     "8.923525334549895`", ",", "17.571462687977693`", ",", 
     "30.76435513763059`", ",", "46.83182814563278`", ",", 
     "59.7785905055143`", ",", "62.352258383267866`", ",", 
     "52.75410230512517`", ",", "36.42372672351171`", ",", 
     "20.77143729066417`", ",", "9.912771896977826`", ",", 
     "4.00449310452157`", ",", "1.3805839573849998`", ",", 
     "0.40791344206857755`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.04753719586869689`", ",", "0.24709178765101228`", ",", 
     "1.0003164323455447`", ",", "3.1057045226863793`", ",", 
     "7.488722815645433`", ",", "14.722276264147489`", ",", 
     "25.069711260629347`", ",", "37.63676386420039`", ",", 
     "48.19549092377075`", ",", "50.82303182231116`", ",", 
     "43.60569798955174`", ",", "30.576066653506114`", ",", 
     "17.721180480661587`", ",", "8.602570936952715`", ",", 
     "3.5393707210761334`", ",", "1.2438905767086998`", ",", 
     "0.37457575228679496`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1780124207503116`", ",", "0.5887053578169391`", ",", 
     "1.6172470042311522`", ",", "3.7138384457096087`", ",", 
     "7.185551188311025`", ",", "11.930775393292944`", ",", 
     "17.49340403059809`", ",", "22.9820803775792`", ",", 
     "26.74324944343479`", ",", "27.12194452415341`", ",", 
     "23.73416893822726`", ",", "17.727349311805987`", ",", 
     "11.171816302443881`", ",", "5.905034627300749`", ",", 
     "2.6193487840068586`", ",", "0.9785556180911414`", ",", 
     "0.30891823224665005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.07075061246846168`", ",", "0.38335797745985667`", ",", 
     "1.5978040804979314`", ",", "5.004027893291418`", ",", 
     "11.76131832042353`", ",", "21.472723937176898`", ",", 
     "32.655526725111855`", ",", "44.02279434612447`", ",", 
     "52.64293373064501`", ",", "53.621614646439454`", ",", 
     "45.15773829151224`", ",", "31.22725882418893`", ",", 
     "17.84512730288199`", ",", "8.5285138347929`", ",", "3.45364564043361`", 
     ",", "1.197478014246331`", ",", "0.35738582230510885`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01045795319782201`", ",", "0.06018538781866013`", ",", 
     "0.2632429691834812`", ",", "0.8507364089129426`", ",", 
     "2.0373976985155777`", ",", "3.890246724258555`", ",", 
     "6.870728927809224`", ",", "12.087020566530668`", ",", 
     "19.271032066284192`", ",", "25.101829213852255`", ",", 
     "25.796279220839708`", ",", "20.98283104650352`", ",", 
     "13.705606977676759`", ",", "7.302373489347097`", ",", 
     "3.2175978734907638`", ",", "1.1849997179479757`", ",", 
     "0.36743375783079124`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.017684950039823896`", ",", "0.07463779071987822`", ",", 
     "0.24774343122593404`", ",", "0.6604337089185871`", ",", 
     "1.5112989580428668`", ",", "3.210955692741976`", ",", 
     "6.43844952881183`", ",", "11.667043212023147`", ",", 
     "18.22643535687593`", ",", "23.643367038014624`", ",", 
     "24.74817619392516`", ",", "20.624173499268142`", ",", 
     "13.720309845405378`", ",", "7.379560489066315`", ",", 
     "3.2598458744707552`", ",", "1.1990547293463756`", ",", 
     "0.37082970110327007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.03066243262794187`", ",", "0.16747196747481655`", ",", 
     "0.7348641611227353`", ",", "2.524792362118376`", ",", 
     "6.775766105216922`", ",", "14.646343958475633`", ",", 
     "26.627599529436708`", ",", "41.238909375262104`", ",", 
     "53.24726464238693`", ",", "56.10130241210752`", ",", 
     "47.93426611980132`", ",", "33.35761732192142`", ",", 
     "19.105719355684336`", ",", "9.137271685756073`", ",", 
     "3.702556131989457`", ",", "1.2844809441696183`", ",", 
     "0.38311149444808523`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08546568743348007`", ",", "0.3813600579571267`", ",", 
     "1.417323195153579`", ",", "4.31996906518445`", ",", 
     "10.624570385073817`", ",", "21.154931821065496`", ",", 
     "35.24718157651324`", ",", "50.777716786589494`", ",", 
     "62.87789130519792`", ",", "64.9274876536412`", ",", "54.813871993338`", 
     ",", "37.79083056751895`", ",", "21.47914480114931`", ",", 
     "10.195490603144625`", ",", "4.0923999397475965`", ",", 
     "1.4021861084071283`", ",", "0.412178452884593`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.10903082326974499`", ",", "0.44204509668346376`", ",", 
     "1.5176930146765184`", ",", "4.315456618064325`", ",", 
     "10.027278335586338`", ",", "19.34322668482188`", ",", 
     "32.1938355045821`", ",", "46.97682617683907`", ",", 
     "58.48180845747072`", ",", "60.04406954715037`", ",", 
     "50.25774792276338`", ",", "34.52196985998279`", ",", 
     "19.707512856464085`", ",", "9.462590610351356`", ",", 
     "3.856799894682232`", ",", "1.342222842981451`", ",", 
     "0.3998857536301691`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8968228615271273`*^9, 3.896828318750855*^9, 
  3.8968284494159737`*^9, 3.896903041328392*^9, 3.8969033775573*^9, 
  3.8969034389029293`*^9, 3.8969958988267813`*^9, 3.896996447597209*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"34521ae5-1518-45f9-8e95-62d8bc0a54b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"qjfalse", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"zzz", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "uuu"}], ")"}]}], "]"}], ".", "posttheta"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"J", "\[Times]", "Q"}], "*)"}]}], "\n", "qjfalse"}], "Input",
 CellChangeTimes->{3.896735010643036*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"af69cad4-5ef7-4e0f-849c-6809911557ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.3134887825752345`", ",", "1.0240801639487405`", ",", 
     "2.7789473162632463`", ",", "6.22200205490694`", ",", 
     "11.279138309365326`", ",", "16.50721041291544`", ",", 
     "20.094734506908672`", ",", "21.004408355514627`", ",", 
     "18.76715534223181`", ",", "13.941084498819633`", ",", 
     "8.44435644017516`", ",", "4.162202842334695`", ",", 
     "1.6858705015552984`", ",", "0.5683975329280987`", ",", 
     "0.16090513432831088`", ",", "0.03833813573706018`", ",", 
     "0.00767966949169769`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2815892046916466`", ",", "1.01622043984124`", ",", 
     "2.968974487707378`", ",", "6.899823297140035`", ",", 
     "12.506556973122061`", ",", "17.602352468870855`", ",", 
     "19.80950301019675`", ",", "18.879603512518777`", ",", 
     "15.94854496569561`", ",", "11.978055923897713`", ",", 
     "7.805757562784874`", ",", "4.300306433066921`", ",", 
     "1.966775021847715`", ",", "0.7392873226491815`", ",", 
     "0.22748211608799723`", ",", "0.05731059515639049`", ",", 
     "0.011856664724849125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.26422491095919826`", ",", "0.8856102966267787`", ",", 
     "2.454308160428572`", ",", "5.6216532421251575`", ",", 
     "10.588554307548295`", ",", "16.34756724794205`", ",", 
     "20.877576797363687`", ",", "22.486381674681702`", ",", 
     "20.690621412292153`", ",", "16.223457978937212`", ",", 
     "10.716055237393102`", ",", "5.878782232521948`", ",", 
     "2.6409198656141477`", ",", "0.9614541577831812`", ",", 
     "0.282589219121362`", ",", "0.06721977108647334`", ",", 
     "0.01302348757498471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3762828101338933`", ",", "1.2764580315883967`", ",", 
     "3.5613162457937024`", ",", "8.058142800614302`", ",", 
     "14.380194367896216`", ",", "19.703504254581418`", ",", 
     "20.68424886932822`", ",", "17.25641624691956`", ",", 
     "12.141851756549595`", ",", "7.491916089454765`", ",", 
     "4.058561256953485`", ",", "1.9030495991046288`", ",", 
     "0.7610771138963582`", ",", "0.2558608451251395`", ",", 
     "0.07147360216201018`", ",", "0.016498679351593153`", ",", 
     "0.0031474305467201497`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.28768456719870106`", ",", "0.9283396928987815`", ",", 
     "2.4646484605974495`", ",", "5.319537080731953`", ",", 
     "9.142227278614051`", ",", "12.557748493493058`", ",", 
     "14.545663308487251`", ",", "15.09992719747381`", ",", 
     "13.974613720780953`", ",", "10.96013012764226`", ",", 
     "7.013222912125158`", ",", "3.5982183441752165`", ",", 
     "1.4708822378733197`", ",", "0.47979243475944894`", ",", 
     "0.12584407433003772`", ",", "0.02682397671338882`", ",", 
     "0.004696092105158451`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.26913489158088516`", ",", "0.8959944192121281`", ",", 
     "2.42647049291444`", ",", "5.259975555579938`", ",", 
     "8.901225248176464`", ",", "11.51344388636507`", ",", 
     "11.437607027252298`", ",", "9.170392099425523`", ",", 
     "6.527694926394403`", ",", "4.5532587079680304`", ",", 
     "3.178973007130515`", ",", "2.056427504984689`", ",", 
     "1.1173189333021978`", ",", "0.48075422587603767`", ",", 
     "0.16076321619310313`", ",", "0.04192869355239913`", ",", 
     "0.008637164091869647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3025420416362491`", ",", "1.0815203233922182`", ",", 
     "3.26676520487112`", ",", "8.081693420452645`", ",", 
     "15.60462385058262`", ",", "22.77816671961816`", ",", 
     "25.42927785488664`", ",", "22.98347079093859`", ",", 
     "17.886903947968815`", ",", "12.157758134401789`", ",", 
     "7.048500737519948`", ",", "3.411582538108092`", ",", 
     "1.3648336821254157`", ",", "0.44906998283330785`", ",", 
     "0.12133425122658634`", ",", "0.0269878624171615`", ",", 
     "0.004968657020645348`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.38222567053864487`", ",", "1.3185258349998001`", ",", 
     "3.789043244147902`", ",", "8.965027387287098`", ",", 
     "17.039426369487085`", ",", "25.62735314344836`", ",", 
     "31.123921731887883`", ",", "32.17853507237098`", ",", 
     "29.470003529712365`", ",", "23.68698469535849`", ",", 
     "16.196905053093367`", ",", "9.259242608113682`", ",", 
     "4.415090492128002`", ",", "1.7592709428584197`", ",", 
     "0.5864566346720241`", ",", "0.16368124309346122`", ",", 
     "0.03830634680242786`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.25175044565703025`", ",", "0.9769122648338735`", ",", 
     "3.172112672262295`", ",", "8.356893464263871`", ",", 
     "17.34259799682149`", ",", "28.4188540143029`", ",", 
     "38.70022896191914`", ",", "46.83321855899216`", ",", 
     "50.922245010048314`", ",", "47.38807199351625`", ",", 
     "36.068434104417854`", ",", "22.107959949813818`", ",", 
     "10.964454670345706`", ",", "4.4568072525103855`", ",", 
     "1.5064785717412998`", ",", "0.4290162017110197`", ",", 
     "0.10396386684257286`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3590122539388801`", ",", "1.1822596451909557`", ",", 
     "3.191555595995514`", ",", "7.06670401668206`", ",", 
     "12.766830864708984`", ",", "18.876905470418947`", ",", 
     "23.538106267405382`", ",", "25.79250459044689`", ",", 
     "25.0225607228381`", ",", "20.888401871230208`", ",", 
     "14.644864751132879`", ",", "8.60805043743088`", ",", 
     "4.291143669907596`", ",", "1.8333280450182334`", ",", 
     "0.6721817153145482`", ",", "0.21009380555582993`", ",", 
     "0.05549627678411398`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.41930491320951974`", ",", "1.5054322348321518`", ",", 
     "4.526116707309965`", ",", "11.219995501060536`", ",", 
     "22.49075148661694`", ",", "36.459382683337296`", ",", 
     "49.32290406470803`", ",", "57.72827837004069`", ",", 
     "58.39446238719892`", ",", "49.4081873038174`", ",", 
     "34.00632382180541`", ",", "18.852478215116275`", ",", 
     "8.43066399511283`", ",", "3.059468390464036`", ",", 
     "0.9082294822573937`", ",", "0.22257210185418502`", ",", 
     "0.045448341258431654`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4120779163675178`", ",", "1.490979831930934`", ",", 
     "4.541616245267513`", ",", "11.410298201054893`", ",", 
     "23.01685022708965`", ",", "37.138673714853866`", ",", 
     "49.755183463705414`", ",", "58.148255724548214`", ",", 
     "59.43905909660718`", ",", "50.866649479655024`", ",", 
     "35.054426848719956`", ",", "19.21113576235166`", ",", 
     "8.415961127384211`", ",", "2.9822813907448187`", ",", 
     "0.8659814812774029`", ",", "0.20851709045578531`", ",", 
     "0.04205239798595288`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.39910043377939985`", ",", "1.3981456551759956`", ",", 
     "4.054495515370711`", ",", "9.545939547855102`", ",", 
     "17.75238307991559`", ",", "25.703285449120216`", ",", 
     "29.56603346308053`", ",", "28.576389561309256`", ",", 
     "24.41822981109619`", ",", "18.40871410556214`", ",", 
     "11.868336922843781`", ",", "6.477691939698387`", ",", 
     "3.0305516171052527`", ",", "1.2245701940550624`", ",", 
     "0.42327122375870124`", ",", "0.12309087563254278`", ",", 
     "0.029770604641137653`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.34429717897386164`", ",", "1.1842575646936857`", ",", 
     "3.372036481339867`", ",", "7.750762844789028`", ",", 
     "13.903578800058698`", ",", "19.194697586530353`", ",", 
     "20.946451416003992`", ",", "19.037582149981866`", ",", 
     "14.7876031482852`", ",", "9.582528864028452`", ",", 
     "4.988731049307129`", ",", "2.0444786941008575`", ",", 
     "0.6571261716402803`", ",", "0.16635127666650842`", ",", 
     "0.03342741600056062`", ",", "0.005385711395032619`", ",", 
     "0.0007036462046298715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.32073204313759673`", ",", "1.1235725259673486`", ",", 
     "3.271666661816928`", ",", "7.755275291909152`", ",", 
     "14.500870849546176`", ",", "21.00640272277397`", ",", 
     "23.999797487935133`", ",", "22.83847275973229`", ",", 
     "19.183685996012393`", ",", "14.465946970519287`", ",", 
     "9.544855119881744`", ",", "5.313339401637007`", ",", 
     "2.428758116325507`", ",", "0.8992512694597757`", ",", 
     "0.2690274610659254`", ",", "0.06534897682071049`", ",", 
     "0.012996345459053794`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896822861553039*^9, 3.896828318769924*^9, 
  3.896828449443672*^9, 3.896903041347064*^9, 3.896903377574086*^9, 
  3.896903438911097*^9, 3.896995898859868*^9, 3.8969964476072598`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"b8cc8970-4992-421c-9545-39dde6e4b0ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"j", " ", "=", " ", "9"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exloglike", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qjtrue", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "*", 
      RowBox[{"Log", "[", 
       RowBox[{"irt", "[", 
        RowBox[{
        "a", ",", "b", ",", "c", ",", "1", ",", "1", ",", "quadrature"}], 
        "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"qjfalse", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "*", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{"irt", "[", 
         RowBox[{
         "a", ",", "b", ",", "c", ",", "1", ",", "1", ",", "quadrature"}], 
         "]"}]}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exloglike", "+=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "/", "2"}], ")"}], "^", "2"}]}], "/", "2"}], "+", 
    RowBox[{"slopeprior", "[", 
     RowBox[{"a", ",", "0", ",", ".5"}], "]"}], "+", 
    RowBox[{"asymprior", "[", 
     RowBox[{"c", ",", "2", ",", "5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exloglike", ",", 
       RowBox[{
        RowBox[{"-", "5"}], "<=", "b", "<=", "5"}], ",", 
       RowBox[{"0", "<=", "c", "<=", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PrecisionGoal", "->", "5"}], ",", 
     RowBox[{"AccuracyGoal", "->", "5"}]}], "]"}], ",", "_Real", ",", 
   "Infinity"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.896820395034971*^9, 3.89682044585679*^9}, {
  3.8968205057696*^9, 3.896820547038546*^9}, {3.896820586977071*^9, 
  3.896820693437984*^9}, {3.896822576037095*^9, 3.896822613187036*^9}, {
  3.896822672199772*^9, 3.896822681070711*^9}, {3.896822721544589*^9, 
  3.8968227223751793`*^9}, {3.8968232271527348`*^9, 3.896823247825254*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"0d4035c7-489a-45d4-9e95-a71752ea0ec4"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{
  3.896822861580289*^9, {3.896823231372203*^9, 3.896823248216811*^9}, 
   3.896828318777755*^9, 3.89682844945192*^9, 3.896903041358129*^9, 
   3.896903377593499*^9, 3.8969034389329042`*^9, 3.896995898870693*^9, 
   3.896996447651124*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"f2a0642d-5d28-4c21-828b-6fd2cf02b3a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "325.5603671297887`"}], ",", "0.8965697452181652`", ",", 
   "2.3909083180175656`", ",", "0.26721193513567115`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.896822861580289*^9, {3.896823231372203*^9, 3.896823248216811*^9}, 
   3.896828318777755*^9, 3.89682844945192*^9, 3.896903041358129*^9, 
   3.896903377593499*^9, 3.8969034389329042`*^9, 3.896995898870693*^9, 
   3.896996447779503*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"b48d6baa-380e-4071-be06-305ea17c3962"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Reverse"], "Input",
 CellChangeTimes->{
  3.896822892732707*^9, {3.8968235736485853`*^9, 3.896823593559266*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"3b0e15f2-e9f4-47a5-9d4a-847d61d671a0"],

Cell[BoxData["Reverse"], "Output",
 CellChangeTimes->{3.8968228940142097`*^9, 3.896823581298582*^9, 
  3.896828318801343*^9, 3.8968284494837723`*^9, 3.896903041550218*^9, 
  3.896903377804061*^9, 3.896903438967606*^9, 3.896995898909186*^9, 
  3.8969964477862053`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"549d9c78-a51c-43e3-bc0c-98e391bc3f01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6a21\:7bc4\:30b3\:30fc\:30c9\:3053\:3053\:304b\:3089", "Section",
 CellChangeTimes->{{3.896820381257729*^9, 
  3.8968203868104*^9}},ExpressionUUID->"603ae7f5-bf5d-4f91-b4ce-280217df55fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slope", "=", 
   RowBox[{"itc", "*", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"loc", "=", 
   RowBox[{"itemthreshold", "*", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"onevec", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", "testlength", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"loasym", "=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"model", ">=", "3"}], ",", "0.05", ",", "0"}], "]"}], "*", 
    "onevec"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"upasym", "=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"model", ">=", "4"}], ",", "0.95", ",", "1"}], "]"}], "*", 
    "onevec"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"paramset", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"slope", ",", "loc", ",", "loasym", ",", "upasym"}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"quadmax", "=", "3.2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"quadincr", "=", ".4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nquad", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"quadmax", "/", "quadincr"}], "*", "2"}], "+", "1"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"quadrature", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "quadmax"}], "+", 
      RowBox[{"quadincr", "*", 
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "1", ",", "nquad"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"const", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", "testlength"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"loglike", "=", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "const"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"oldloglike", "=", 
   RowBox[{
    RowBox[{"-", "2"}], "/", "const"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"itemloglike", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"loglike", "/", "testlength"}], ",", 
     RowBox[{"{", "testlength", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"emt", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"maxemt", "=", "25"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Label", "[", "emtop", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"loglike", "-", "oldloglike"}], "<=", 
       RowBox[{"0.00001", "*", 
        RowBox[{"Abs", "[", "oldloglike", "]"}]}]}], ",", 
      RowBox[{"Goto", "[", "emend", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"emt", "==", "maxemt"}], ",", 
      RowBox[{"Goto", "[", "emend", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"emt", "+=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"oldloglike", "=", "loglike"}], ";", "\[IndentingNewLine]", 
    RowBox[{"lpj", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"irt", "[", 
          RowBox[{
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", "1", ",", 
           "quadrature"}], "]"}], "+", "const"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "testlength"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"J", "\[Times]", "Q"}], "*)"}], 
    RowBox[{"lqj", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", 
         RowBox[{"irt", "[", 
          RowBox[{
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "3"}], "]"}], "]"}], ",", 
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", "1", ",", 
           "quadrature"}], "]"}], "+", "const"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "testlength"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"J", "\[Times]", "Q"}], "*)"}], 
    RowBox[{"postthetanume", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zzz", "*", "uuu"}], ")"}], ".", "lpj"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zzz", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "uuu"}], ")"}]}], ")"}], ".", "lqj"}], "-", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"quadrature", "^", "2"}], "/", "2"}], ",", 
         RowBox[{"{", "samplesize", "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"S", "\[Times]", "Q"}], "*)"}], 
    RowBox[{"postthetadenom", "=", 
     RowBox[{"Total", "[", 
      RowBox[{"Transpose", "[", "postthetanume", "]"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"S", "\[Times]", "1"}], "*)"}], 
    RowBox[{"posttheta", "=", 
     RowBox[{"postthetanume", "/", "postthetadenom"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"S", "\[Times]", "Q"}], "*)"}], 
    RowBox[{"marginalposttheta", "=", 
     RowBox[{"Total", "[", "posttheta", "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"Q", "\[Times]", "1"}], "*)"}], 
    RowBox[{"qjtrue", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "uuu", "]"}], ".", "posttheta"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"J", "\[Times]", "Q"}], "*)"}], 
    RowBox[{"qjfalse", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"zzz", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "uuu"}], ")"}]}], "]"}], ".", "posttheta"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"J", "\[Times]", "Q"}], "*)"}], 
    RowBox[{"exlogmax", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"model", "==", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"exloglike", "=", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"qjtrue", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "*", 
              RowBox[{"Log", "[", 
               RowBox[{"irt", "[", 
                RowBox[{
                "a", ",", "b", ",", "0", ",", "1", ",", "1", ",", 
                 "quadrature"}], "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"qjfalse", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "*", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "-", 
                RowBox[{"irt", "[", 
                 RowBox[{
                 "a", ",", "b", ",", "0", ",", "1", ",", "1", ",", 
                  "quadrature"}], "]"}]}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"exloglike", "+=", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "/", "2"}], ")"}], "^", "2"}]}], "/", "2"}], "+", 
            RowBox[{"slopeprior", "[", 
             RowBox[{"a", ",", "0", ",", ".5"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"FindMaximum", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"exloglike", ",", 
                RowBox[{
                 RowBox[{"-", "5"}], "<=", "b", "<=", "5"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"PrecisionGoal", "->", "5"}], ",", 
              RowBox[{"AccuracyGoal", "->", "5"}]}], "]"}], ",", "_Real", ",",
             "Infinity"}], "]"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         
         RowBox[{"model", "==", "3"}], ",", 
         RowBox[{
          RowBox[{"exloglike", "=", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"qjtrue", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "*", 
              RowBox[{"Log", "[", 
               RowBox[{"irt", "[", 
                RowBox[{
                "a", ",", "b", ",", "c", ",", "1", ",", "1", ",", 
                 "quadrature"}], "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"qjfalse", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "*", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "-", 
                RowBox[{"irt", "[", 
                 RowBox[{
                 "a", ",", "b", ",", "c", ",", "1", ",", "1", ",", 
                  "quadrature"}], "]"}]}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"exloglike", "+=", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "/", "2"}], ")"}], "^", "2"}]}], "/", "2"}], "+", 
            RowBox[{"slopeprior", "[", 
             RowBox[{"a", ",", "0", ",", ".5"}], "]"}], "+", 
            RowBox[{"asymprior", "[", 
             RowBox[{"c", ",", "2", ",", "5"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"FindMaximum", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"exloglike", ",", 
                RowBox[{
                 RowBox[{"-", "5"}], "<=", "b", "<=", "5"}], ",", 
                RowBox[{"0", "<=", "c", "<=", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"PrecisionGoal", "->", "5"}], ",", 
              RowBox[{"AccuracyGoal", "->", "5"}]}], "]"}], ",", "_Real", ",",
             "Infinity"}], "]"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         
         RowBox[{"model", "==", "4"}], ",", 
         RowBox[{
          RowBox[{"exloglike", "=", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"qjtrue", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "*", 
              RowBox[{"Log", "[", 
               RowBox[{"irt", "[", 
                RowBox[{
                "a", ",", "b", ",", "c", ",", "d", ",", "1", ",", 
                 "quadrature"}], "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"qjfalse", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "*", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "-", 
                RowBox[{"irt", "[", 
                 RowBox[{
                 "a", ",", "b", ",", "c", ",", "d", ",", "1", ",", 
                  "quadrature"}], "]"}]}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"exloglike", "+=", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "/", "2"}], ")"}], "^", "2"}]}], "/", "2"}], "+", 
            RowBox[{"slopeprior", "[", 
             RowBox[{"a", ",", "0", ",", ".5"}], "]"}], "+", 
            RowBox[{"asymprior", "[", 
             RowBox[{"c", ",", "2", ",", "5"}], "]"}], "+", 
            RowBox[{"asymprior", "[", 
             RowBox[{"d", ",", "10", ",", "2"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"FindMaximum", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"exloglike", ",", 
                RowBox[{
                 RowBox[{"-", "5"}], "<=", "b", "<=", "5"}], ",", 
                RowBox[{"0", "<=", "c", "<", "d", "<=", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"d", ",", 
                  RowBox[{"paramset", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "4"}], "]"}], "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"PrecisionGoal", "->", "5"}], ",", 
              RowBox[{"AccuracyGoal", "->", "5"}]}], "]"}], ",", "_Real", ",",
             "Infinity"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "testlength", ",", "1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"exlogmax", "=", 
     RowBox[{"Reverse", "[", "exlogmax", "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"paramset", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "p"}], "]"}], "]"}], "=", 
       RowBox[{"exlogmax", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"p", "+", "1"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "1", ",", "model"}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"itemloglike", "=", 
     RowBox[{"exlogmax", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"loglike", "=", 
     RowBox[{"Total", "[", "itemloglike", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Iteration: \>\"", ",", "emt", ",", "\"\<, log likelihood: \>\"", 
      ",", "loglike"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", "\:8ffd\:52a0\:3057\:305f\:884c", "*)"}], 
    RowBox[{"Goto", "[", "emtop", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Label", "[", "emend", "]"}], ";"}], ")"}], ";"}]}], "Input",
 CellChangeTimes->{{3.896735022567955*^9, 3.896735022570915*^9}, {
  3.896753845932699*^9, 3.896753862889991*^9}, {3.896820346740548*^9, 
  3.896820349527418*^9}, {3.896825327554768*^9, 3.89682537574629*^9}, {
  3.8968256296146812`*^9, 3.8968256503722*^9}, {3.89682758922351*^9, 
  3.896827594093689*^9}, {3.8968280512164288`*^9, 3.896828051995285*^9}, {
  3.896828435378963*^9, 3.8968284355552263`*^9}, {3.896903434850526*^9, 
  3.8969034353289633`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"0ed218cc-2cd1-42fd-91f3-0070ee920777"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3960.281013275007`"}]}],
  SequenceForm["Iteration: ", 1, ", log likelihood: ", -3960.281013275007],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.896996448068521*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"2d129c3e-09a6-4894-92e9-\
06672a303805"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3938.3509349991145`"}]}],
  SequenceForm["Iteration: ", 2, ", log likelihood: ", -3938.3509349991145`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.896996448300737*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"2b20223d-297b-497b-9c8d-\
de631a89209a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3931.8244638850524`"}]}],
  SequenceForm["Iteration: ", 3, ", log likelihood: ", -3931.8244638850524`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.896996448531879*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"193fc47f-1757-48db-9ab9-\
d6c1e9d78dba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3928.680210987105`"}]}],
  SequenceForm["Iteration: ", 4, ", log likelihood: ", -3928.680210987105],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.89699644877238*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"9d3ff43e-3943-419c-941a-\
cc38fed0710c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3926.993808441238`"}]}],
  SequenceForm["Iteration: ", 5, ", log likelihood: ", -3926.993808441238],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.896996449009911*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"09c6fb6f-6ebe-4b6e-84a1-\
edadb1a61491"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3926.0486636202695`"}]}],
  SequenceForm["Iteration: ", 6, ", log likelihood: ", -3926.0486636202695`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.896996449252378*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"139df383-0e61-4bae-9379-\
6f963767f6c8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3925.5067414207197`"}]}],
  SequenceForm["Iteration: ", 7, ", log likelihood: ", -3925.5067414207197`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.8969964494838037`*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"ba7e25b1-e132-4972-b047-\
bbc4bf5d91ab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3925.1919869168405`"}]}],
  SequenceForm["Iteration: ", 8, ", log likelihood: ", -3925.1919869168405`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.8969964497273407`*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"bab8d998-c877-4304-a43f-\
1517bda3bdbd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "9", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3925.0077376328354`"}]}],
  SequenceForm["Iteration: ", 9, ", log likelihood: ", -3925.0077376328354`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.8969964499634857`*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"58976e58-4e0b-4eac-9428-\
738ff68d65ab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3924.8993313023702`"}]}],
  SequenceForm["Iteration: ", 10, ", log likelihood: ", -3924.8993313023702`],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.896996450196356*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"37fed0db-7119-4c0e-933a-\
27bfb130bff0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "11", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3924.8353222835417`"}]}],
  SequenceForm["Iteration: ", 11, ", log likelihood: ", -3924.8353222835417`],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.896996450427327*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"30461198-e21e-41aa-a17d-\
aa0e98a3fd15"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "12", 
   "\[InvisibleSpace]", "\<\", log likelihood: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3924.797429969076`"}]}],
  SequenceForm["Iteration: ", 12, ", log likelihood: ", -3924.797429969076],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.896825379421093*^9, {3.8968256352631598`*^9, 3.896825651977*^9}, 
   3.896827594840816*^9, 3.896828053248592*^9, 3.896828319049157*^9, {
   3.89682843639926*^9, 3.896828449685342*^9}, 3.8969030417597723`*^9, 
   3.896903378050544*^9, 3.896903439229974*^9, 3.896995899173695*^9, 
   3.896996450664803*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[97]:=",ExpressionUUID->"3c662e58-71ca-49a2-88dd-\
d51415d898c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["loglike"], "Input",
 CellChangeTimes->{{3.8967350354446898`*^9, 3.896735035761714*^9}, {
  3.896995914712782*^9, 3.896995920651527*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"f0e05437-0916-4d19-a1a0-574ed854e4bd"],

Cell[BoxData[
 RowBox[{"-", "3924.797429969076`"}]], "Output",
 CellChangeTimes->{
  3.8968260493155203`*^9, 3.8968276009238653`*^9, 3.896828062059306*^9, 
   3.896828323784596*^9, 3.896828453840249*^9, 3.8969030455309668`*^9, 
   3.8969033800426064`*^9, 3.89690344174936*^9, {3.896995901859791*^9, 
   3.896995921679582*^9}, 3.8969964507975597`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"831a49ce-5e75-455b-a0aa-0cc3157b94cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["paramset"], "Input",
 CellChangeTimes->{{3.896735041003047*^9, 3.896735042820562*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"eb9fc8e7-f10a-4188-b7a6-6994cb8cd474"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.8175851119007529`", ",", 
     RowBox[{"-", "0.8336985807939006`"}], ",", "0.2803617972377969`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.859864142715216`", ",", 
     RowBox[{"-", "1.1194179064041005`"}], ",", "0.18520630375511157`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6574012921190109`", ",", 
     RowBox[{"-", "0.6989745756258239`"}], ",", "0.30484149520266296`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.550137259836682`", ",", 
     RowBox[{"-", "0.9487841663771392`"}], ",", "0.1441967685270164`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7214905892436969`", ",", 
     RowBox[{"-", "1.5583722500884778`"}], ",", "0.2583870064263874`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0216522174366311`", ",", 
     RowBox[{"-", "1.8759277974164417`"}], ",", "0.18269617348724115`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2551801647450702`", ",", 
     RowBox[{"-", "0.6553748720817218`"}], ",", "0.17931304172074927`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7484924540020759`", ",", 
     RowBox[{"-", "0.15461216344741485`"}], ",", "0.13077439961440923`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.1774864636204054`", ",", "2.287028953384503`", ",", 
     "0.2929682017250307`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5464455568452781`", ",", 
     RowBox[{"-", "0.5051945019687711`"}], ",", "0.2221218080909572`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4759903440354176`", ",", "1.0897059645872287`", ",", 
     "0.06274802920038244`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4784412869953947`", ",", "1.0849284690490142`", ",", 
     "0.04620867711583613`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8978511159415067`", ",", 
     RowBox[{"-", "0.501889477467909`"}], ",", "0.09599176383991918`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.418056817847052`", ",", 
     RowBox[{"-", "0.7878819718030401`"}], ",", "0.22595640730645447`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9075609122569056`", ",", 
     RowBox[{"-", "0.8124787453800454`"}], ",", "0.1531515200852505`", ",", 
     "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896826051706616*^9, 3.896827603938695*^9, 3.896828064102743*^9, 
   3.8968283237992687`*^9, {3.896828426568911*^9, 3.896828453846801*^9}, 
   3.8969030455382757`*^9, 3.896903380048628*^9, 3.896903441772992*^9, 
   3.896995901866486*^9, 3.896996450804366*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"fa6c8f80-c660-4357-bdae-76f883f5f99b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"se", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "testlength", "}"}], ",", 
     RowBox[{"{", "model", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"se", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"info", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"marginalposttheta", "*", 
            RowBox[{"irt", "[", 
             RowBox[{
             "a", ",", "b", ",", "c", ",", "d", ",", "1", ",", "quadrature"}],
              "]"}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"irt", "[", 
                RowBox[{
                "a", ",", "b", ",", "c", ",", "d", ",", "1", ",", 
                 "quadrature"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
                "2"}], "}"}]}], "]"}]}], "+", 
           RowBox[{"marginalposttheta", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"irt", "[", 
               RowBox[{
               "a", ",", "b", ",", "c", ",", "d", ",", "1", ",", 
                "quadrature"}], "]"}]}], ")"}], "*", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"1", "-", 
                RowBox[{"irt", "[", 
                 RowBox[{
                 "a", ",", "b", ",", "c", ",", "d", ",", "1", ",", 
                  "quadrature"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
                "2"}], "}"}]}], "]"}]}]}], "]"}]}], "-", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "/", "2"}], ")"}], "^", "2"}]}], "/", "2"}], "+", 
           
           RowBox[{"slopeprior", "[", 
            RowBox[{"a", ",", "0", ",", ".5"}], "]"}], "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"model", ">=", "3"}], ",", 
             RowBox[{"asymprior", "[", 
              RowBox[{"c", ",", "2", ",", "5"}], "]"}], ",", "0"}], "]"}], 
           "+", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"model", ">=", "4"}], ",", 
             RowBox[{"asymprior", "[", 
              RowBox[{"d", ",", "10", ",", "2"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "2"}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"info", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"info", "//.", 
           RowBox[{"a", "->", 
            RowBox[{"paramset", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "1"}], "]"}], "]"}]}]}], "//.", 
          RowBox[{"b", "->", 
           RowBox[{"paramset", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}]}]}], "//.", 
         RowBox[{"c", "->", 
          RowBox[{"paramset", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "3"}], "]"}], "]"}]}]}], "//.", 
        RowBox[{"d", "->", 
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "4"}], "]"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"info", "=", 
       RowBox[{"info", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "model"}], ",", 
          RowBox[{"1", ";;", "model"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Diagonal", "[", 
        RowBox[{"Inverse", "[", "info", "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "testlength", ",", "1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"se", "=", 
   RowBox[{"Reverse", "[", "se", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"theta50", "=", 
   RowBox[{"theta50", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "3"}], "]"}], "]"}], ">", ".5"}], ",", 
        RowBox[{"-", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "4"}], "]"}], "]"}], "<", ".5"}], ",", 
        "Infinity", ",", "True", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"1", "-", 
              RowBox[{"2", "*", 
               RowBox[{"paramset", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "3"}], "]"}], "]"}]}]}], "]"}], "-", 
            RowBox[{"Log", "[", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"paramset", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "4"}], "]"}], "]"}]}], "-", "1"}], "]"}]}],
            ")"}], "/", 
          RowBox[{"paramset", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "+", 
         RowBox[{"paramset", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "testlength"}], "}"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"outputparamset", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"paramset", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Slope\>\"", ",", "\"\<Location\>\"", ",", 
       "\"\<Lower Asymptote\>\"", ",", "\"\<Upper Asymptote\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"outputse", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"se", ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<PSD(Slope)\>\"", ",", "\"\<PSD(Loc)\>\"", ",", "\"\<PSD(LA)\>\"",
          ",", "\"\<PSD(UA)\>\""}], "}"}], ",", "model"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"outputparamset", "=", 
   RowBox[{"outputparamset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "model"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"outputparam", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Prepend", "[", 
        RowBox[{"itemlabel", ",", "\"\<Item\>\""}], "]"}], "}"}], ",", 
      RowBox[{"Transpose", "[", "outputparamset", "]"}], ",", 
      RowBox[{"Transpose", "[", "outputse", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"MatrixForm", "[", "outputparam", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.896735053088538*^9, 3.8967350530919027`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"d5b27c9e-a65f-4caa-8d4f-e763878c9f73"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"Item\"\>", "\<\"Slope\"\>", "\<\"Location\"\>", "\<\"Lower \
Asymptote\"\>", "\<\"PSD(Slope)\"\>", "\<\"PSD(Loc)\"\>", "\<\"PSD(LA)\"\>"},
     {"\<\"Item01\"\>", "0.8175851119007529`", 
      RowBox[{"-", "0.8336985807939006`"}], "0.2803617972377969`", 
      "0.18193116398695103`", "0.627880359722795`", "0.17018709426731152`"},
     {"\<\"Item02\"\>", "0.859864142715216`", 
      RowBox[{"-", "1.1194179064041005`"}], "0.18520630375511157`", 
      "0.15660469464869328`", "0.4711754419173018`", "0.1487881378561448`"},
     {"\<\"Item03\"\>", "0.6574012921190109`", 
      RowBox[{"-", "0.6989745756258239`"}], "0.30484149520266296`", 
      "0.16198400168371052`", "0.797500862559019`", "0.17282460257946877`"},
     {"\<\"Item04\"\>", "1.550137259836682`", 
      RowBox[{"-", "0.9487841663771392`"}], "0.1441967685270164`", 
      "0.2273042872552233`", "0.21563177036686665`", "0.10437429228402113`"},
     {"\<\"Item05\"\>", "0.7214905892436969`", 
      RowBox[{"-", "1.5583722500884778`"}], "0.2583870064263874`", 
      "0.14760548736046997`", "0.6998783750914915`", "0.1860087071948693`"},
     {"\<\"Item06\"\>", "1.0216522174366311`", 
      RowBox[{"-", "1.8759277974164417`"}], "0.18269617348724115`", 
      "0.17137958993836871`", "0.4229842277569504`", "0.1576686235920801`"},
     {"\<\"Item07\"\>", "1.2551801647450702`", 
      RowBox[{"-", "0.6553748720817218`"}], "0.17931304172074927`", 
      "0.21444260533617593`", "0.2893332340789848`", "0.11653799017465474`"},
     {"\<\"Item08\"\>", "0.7484924540020759`", 
      RowBox[{"-", "0.15461216344741485`"}], "0.13077439961440923`", 
      "0.14774436366649268`", "0.3943110287815857`", "0.10774582468939882`"},
     {"\<\"Item09\"\>", "1.1774864636204054`", "2.287028953384503`", 
      "0.2929682017250307`", "0.4927542411801528`", "0.42286939526070905`", 
      "0.044045906447137774`"},
     {"\<\"Item10\"\>", "0.5464455568452781`", 
      RowBox[{"-", "0.5051945019687711`"}], "0.2221218080909572`", 
      "0.13117308683843887`", "0.7785131061103336`", "0.15616311177514094`"},
     {"\<\"Item11\"\>", "1.4759903440354176`", "1.0897059645872287`", 
      "0.06274802920038244`", "0.26334551559730407`", "0.12031312348729276`", 
      "0.03205830680961672`"},
     {"\<\"Item12\"\>", "1.4784412869953947`", "1.0849284690490142`", 
      "0.04620867711583613`", "0.24531467551264696`", "0.11501158808628718`", 
      "0.02760246621492369`"},
     {"\<\"Item13\"\>", "0.8978511159415067`", 
      RowBox[{"-", "0.501889477467909`"}], "0.09599176383991918`", 
      "0.1422356290098381`", "0.27151633522264446`", "0.08577648965489665`"},
     {"\<\"Item14\"\>", "1.418056817847052`", 
      RowBox[{"-", "0.7878819718030401`"}], "0.22595640730645447`", 
      "0.2477068246341593`", "0.2912077441527764`", "0.12521897109912705`"},
     {"\<\"Item15\"\>", "0.9075609122569056`", 
      RowBox[{"-", "0.8124787453800454`"}], "0.1531515200852505`", 
      "0.15880482025598006`", "0.38332768806436696`", "0.12540729222140928`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.8968283247974854`*^9, 3.896828454798978*^9, 
  3.896903046543062*^9, 3.896903381263492*^9, 3.89690344298398*^9, 
  3.896995903055717*^9, 3.896996452086256*^9},
 CellLabel->
  "\:8a55\:4fa1\:4e2d\:ff1aIn[117]:=",ExpressionUUID->"67669572-44b4-40df-\
bce5-93047ab120ca"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eapscore", "=", 
   RowBox[{"posttheta", ".", "quadrature"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"psd", "=", 
   RowBox[{"Diagonal", "[", 
    RowBox[{"posttheta", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"quadrature", ",", 
           RowBox[{"{", "samplesize", "}"}]}], "]"}], "-", "eapscore"}], 
        ")"}], "^", "2"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.896735062546568*^9, 3.8967350948728313`*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"56d73c03-19c2-4449-b12b-521b350a1079"],

Cell[CellGroupData[{

Cell[BoxData["eapscore"], "Input",
 CellChangeTimes->{{3.896735069303068*^9, 3.896735070878358*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"55f4c727-2dff-4e1c-85ad-617e0f801b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.7551867772573746`"}], ",", 
   RowBox[{"-", "0.17395581502528504`"}], ",", "0.01384336800254491`", ",", 
   "0.576281957276719`", ",", 
   RowBox[{"-", "0.9745805642818635`"}], ",", "0.8523693463749844`", ",", 
   "0.021454561077002443`", ",", "0.027359113072481782`", ",", 
   "1.2360883077373033`", ",", 
   RowBox[{"-", "0.24969583849821425`"}], ",", 
   RowBox[{"-", "0.4151189933664392`"}], ",", 
   RowBox[{"-", "0.49206462793276473`"}], ",", "1.0212931058778603`", ",", 
   "0.8407353395447767`", ",", 
   RowBox[{"-", "1.330553268019028`"}], ",", 
   RowBox[{"-", "1.546516081440838`"}], ",", "0.5735957591545713`", ",", 
   RowBox[{"-", "1.068871755560543`"}], ",", "0.7464961486656485`", ",", 
   RowBox[{"-", "0.9327313338077758`"}], ",", "1.0322249144653837`", ",", 
   RowBox[{"-", "0.7303337614506119`"}], ",", "0.39011328064418566`", ",", 
   RowBox[{"-", "0.039300148190142874`"}], ",", 
   RowBox[{"-", "0.20638369630014247`"}], ",", 
   RowBox[{"-", "1.4695257067803484`"}], ",", "0.058384736964339996`", ",", 
   "0.37300644089251633`", ",", "0.37300644089251633`", ",", 
   RowBox[{"-", "1.588828937068815`"}], ",", 
   RowBox[{"-", "1.4328069425427885`"}], ",", "0.5306011313076773`", ",", 
   RowBox[{"-", "1.243034123337494`"}], ",", 
   RowBox[{"-", "1.138451342234739`"}], ",", "1.8100709639200185`", ",", 
   RowBox[{"-", "0.3615324080425784`"}], ",", "0.5447515114815968`", ",", 
   "0.3189514006361861`", ",", 
   RowBox[{"-", "0.45243803089617285`"}], ",", "0.3706516336378932`", ",", 
   "0.357396701992847`", ",", "1.5970622067439084`", ",", 
   "0.08070888057222436`", ",", 
   RowBox[{"-", "0.1758843648654668`"}], ",", "0.5027451602169098`", ",", 
   "0.26611750417606483`", ",", 
   RowBox[{"-", "0.2341243409400286`"}], ",", "1.0253349592920116`", ",", 
   "0.4142784220535105`", ",", "1.2016947791494101`", ",", 
   "0.6710506009574051`", ",", "0.5885598223223422`", ",", 
   "0.09554867658070962`", ",", "0.5902770810481983`", ",", 
   "1.2113630558488895`", ",", "0.8523693463749844`", ",", 
   RowBox[{"-", "0.1514027282665561`"}], ",", "0.3189514006361861`", ",", 
   "1.225857712257418`", ",", "0.9493017725364225`", ",", 
   "1.5970622067439084`", ",", "0.13987644584683434`", ",", 
   RowBox[{"-", "0.17984272450083033`"}], ",", "0.21107015116556432`", ",", 
   "0.3686002036639451`", ",", 
   RowBox[{"-", "1.279197423570313`"}], ",", 
   RowBox[{"-", "0.9171047684950342`"}], ",", 
   RowBox[{"-", "1.3510194959086648`"}], ",", "0.5885598223223422`", ",", 
   RowBox[{"-", "1.0240133987769697`"}], ",", 
   RowBox[{"-", "1.4594744377262074`"}], ",", 
   RowBox[{"-", "0.03853851858177489`"}], ",", "0.17167321937987415`", ",", 
   RowBox[{"-", "0.039300148190142874`"}], ",", "0.9493017725364225`", ",", 
   RowBox[{"-", "0.2457255752238214`"}], ",", "0.9644456402461241`", ",", 
   "0.5885598223223422`", ",", "1.0253349592920116`", ",", 
   RowBox[{"-", "1.4650260137963147`"}], ",", 
   RowBox[{"-", "0.07960642624697276`"}], ",", 
   RowBox[{"-", "1.0870982041666493`"}], ",", 
   RowBox[{"-", "0.6298387876992841`"}], ",", 
   RowBox[{"-", "0.6131914154787848`"}], ",", "0.6850393870255511`", ",", 
   RowBox[{"-", "0.5372935558340866`"}], ",", "0.34914125162075227`", ",", 
   RowBox[{"-", "0.7069707610390489`"}], ",", "0.8899454445591491`", ",", 
   "0.04489607282107367`", ",", 
   RowBox[{"-", "0.6224221581884646`"}], ",", 
   RowBox[{"-", "0.918854430939371`"}], ",", 
   RowBox[{"-", "0.8852142074562952`"}], ",", "0.5885598223223422`", ",", 
   RowBox[{"-", "0.19866993604008992`"}], ",", "0.541230450115005`", ",", 
   RowBox[{"-", "0.17912948449121682`"}], ",", 
   RowBox[{"-", "0.8262270667931372`"}], ",", "0.4492788480014692`", ",", 
   "0.7627558367132354`", ",", 
   RowBox[{"-", "0.43317588852414457`"}], ",", 
   RowBox[{"-", "0.8951196045065235`"}], ",", "1.0269977916247581`", ",", 
   RowBox[{"-", "1.0691983383492705`"}], ",", "0.4090446252160381`", ",", 
   RowBox[{"-", "1.0228041758028796`"}], ",", 
   RowBox[{"-", "0.21652567593187208`"}], ",", "0.6156461638187096`", ",", 
   RowBox[{"-", "1.2061078377321064`"}], ",", "0.7232981654118815`", ",", 
   "0.7232981654118815`", ",", "0.3669632650210034`", ",", 
   RowBox[{"-", "1.2208722968372818`"}], ",", 
   RowBox[{"-", "0.2632023629655519`"}], ",", 
   RowBox[{"-", "1.3435616061496625`"}], ",", "1.0785213778257634`", ",", 
   "0.3933879299884653`", ",", 
   RowBox[{"-", "0.840056575177633`"}], ",", 
   RowBox[{"-", "0.8758887922851283`"}], ",", 
   RowBox[{"-", "0.25340784434127056`"}], ",", "0.04848131266979518`", ",", 
   RowBox[{"-", "0.6866833424854214`"}], ",", "0.7952882328305668`", ",", 
   "1.0322249144653837`", ",", "0.0006733512550764417`", ",", 
   "1.1928831440614585`", ",", 
   RowBox[{"-", "1.3259130470142355`"}], ",", "0.319260460659617`", ",", 
   "0.2071328338652587`", ",", "0.7809100088449149`", ",", 
   RowBox[{"-", "0.031591444547194855`"}], ",", "0.2444191192305091`", ",", 
   "0.37300644089251633`", ",", 
   RowBox[{"-", "1.3931303299315432`"}], ",", 
   RowBox[{"-", "0.9947430849402576`"}], ",", 
   RowBox[{"-", "1.3093792484289872`"}], ",", "0.8999362972643886`", ",", 
   "0.34623038735709233`", ",", "0.22886814597773372`", ",", 
   "0.32326013332181586`", ",", "0.319260460659617`", ",", 
   RowBox[{"-", "1.4018239809945081`"}], ",", "1.0959449843720825`", ",", 
   RowBox[{"-", "1.4443115932232806`"}], ",", "0.6583945630229242`", ",", 
   RowBox[{"-", "0.6543604511794574`"}], ",", 
   RowBox[{"-", "1.331560624643971`"}], ",", "0.2071328338652587`", ",", 
   RowBox[{"-", "0.29477110079916563`"}], ",", "1.2016947791494101`", ",", 
   "1.252102700191498`", ",", "0.23691619999167635`", ",", 
   "1.5092778430888136`", ",", 
   RowBox[{"-", "0.315050480960096`"}], ",", 
   RowBox[{"-", "0.8753048703135634`"}], ",", "0.3531597677974927`", ",", 
   "0.12551333437106496`", ",", "0.9667370950752225`", ",", 
   "1.2413470034146323`", ",", "1.8100709639200185`", ",", 
   "0.21220177265839563`", ",", 
   RowBox[{"-", "0.5849193200143505`"}], ",", 
   RowBox[{"-", "0.7605223881372922`"}], ",", 
   RowBox[{"-", "1.2446228105345876`"}], ",", "0.10884318912442593`", ",", 
   RowBox[{"-", "1.189818267569431`"}], ",", "0.3498599183997919`", ",", 
   RowBox[{"-", "0.5419124903546086`"}], ",", "1.5259596326557365`", ",", 
   RowBox[{"-", "1.339903780370861`"}], ",", 
   RowBox[{"-", "0.8580955790251649`"}], ",", "0.7258629814407145`", ",", 
   "0.20088910342054195`", ",", "0.6195946162071825`", ",", 
   RowBox[{"-", "0.9373705983129359`"}], ",", "0.1484723446789754`", ",", 
   "0.37300644089251633`", ",", 
   RowBox[{"-", "0.46688869060624694`"}], ",", "0.3686002036639451`", ",", 
   RowBox[{"-", "0.6458589447367418`"}], ",", 
   RowBox[{"-", "0.8212597689499554`"}], ",", 
   RowBox[{"-", "1.2372703664614297`"}], ",", "0.319260460659617`", ",", 
   RowBox[{"-", "0.5107635923771808`"}], ",", "0.5050014347222005`", ",", 
   "0.44883991093609116`", ",", 
   RowBox[{"-", "0.33997570219228146`"}], ",", "0.3962968319582053`", ",", 
   RowBox[{"-", "0.17163400754490665`"}], ",", 
   RowBox[{"-", "0.19074586080157035`"}], ",", 
   RowBox[{"-", "0.18563810581133955`"}], ",", 
   RowBox[{"-", "0.9672672142818874`"}], ",", 
   RowBox[{"-", "0.056924040254595465`"}], ",", 
   RowBox[{"-", "1.0493469478146347`"}], ",", 
   RowBox[{"-", "1.9454329155234975`"}], ",", "0.7952882328305668`", ",", 
   "0.2704636036706338`", ",", "1.2633036680849294`", ",", 
   RowBox[{"-", "0.015967051378322765`"}], ",", "0.4861804925151948`", ",", 
   "0.4420157300613602`", ",", "0.4901184863554623`", ",", 
   RowBox[{"-", "1.2943247431447082`"}], ",", "0.5885598223223422`", ",", 
   "0.09478347301613291`", ",", 
   RowBox[{"-", "0.4030372443298058`"}], ",", "0.6931628562216716`", ",", 
   "0.357396701992847`", ",", "0.06167338857186568`", ",", 
   "0.10419717994604541`", ",", "0.31677433820586437`", ",", 
   "1.2360883077373033`", ",", "0.10906307464529538`", ",", 
   RowBox[{"-", "0.42077178442307817`"}], ",", 
   RowBox[{"-", "0.23606446810636333`"}], ",", 
   RowBox[{"-", "0.18843133247006766`"}], ",", "1.0322249144653837`", ",", 
   "0.6265707065441928`", ",", 
   RowBox[{"-", "1.5259250030922897`"}], ",", 
   RowBox[{"-", "0.772340352769133`"}], ",", 
   RowBox[{"-", "1.2962296907566924`"}], ",", "0.319260460659617`", ",", 
   "0.0011967851007118613`", ",", 
   RowBox[{"-", "0.4866353163764088`"}], ",", 
   RowBox[{"-", "0.023701487229171113`"}], ",", "0.049915247890945195`", ",", 
   
   RowBox[{"-", "0.24105587836351908`"}], ",", "0.23979834189700866`", ",", 
   RowBox[{"-", "0.933058117905566`"}], ",", 
   RowBox[{"-", "0.05326395180317468`"}], ",", 
   RowBox[{"-", "0.7485646254856388`"}], ",", 
   RowBox[{"-", "1.5844733014939372`"}], ",", "0.5885598223223422`", ",", 
   RowBox[{"-", "1.5880515351391253`"}], ",", 
   RowBox[{"-", "0.021831152643402116`"}], ",", 
   RowBox[{"-", "0.2122002291064326`"}], ",", 
   RowBox[{"-", "0.7693672445334027`"}], ",", "1.441671311204948`", ",", 
   "0.7193169600128583`", ",", "0.37300644089251633`", ",", 
   "0.5885598223223422`", ",", "0.3669632650210034`", ",", 
   RowBox[{"-", "0.09679376799045764`"}], ",", 
   RowBox[{"-", "0.4050268621255396`"}], ",", "0.37300644089251633`", ",", 
   RowBox[{"-", "1.5369408427933247`"}], ",", "0.534076544837556`", ",", 
   "1.8100709639200185`", ",", 
   RowBox[{"-", "0.20274675825219374`"}], ",", "1.5259596326557365`", ",", 
   RowBox[{"-", "0.3723629486514528`"}], ",", 
   RowBox[{"-", "0.5826984359839207`"}], ",", "0.4941461969102331`", ",", 
   RowBox[{"-", "0.253144127102853`"}], ",", "0.5745395831912651`", ",", 
   "0.006106899640236113`", ",", 
   RowBox[{"-", "0.5189105736366006`"}], ",", 
   RowBox[{"-", "1.176185706859607`"}], ",", 
   RowBox[{"-", "0.962068309022762`"}], ",", 
   RowBox[{"-", "0.01739790266457123`"}], ",", 
   RowBox[{"-", "1.1285771313762392`"}], ",", "0.7258629814407145`", ",", 
   "0.5196025749802794`", ",", 
   RowBox[{"-", "0.7516509260376896`"}], ",", "0.9362797380852402`", ",", 
   "0.2659262036621038`", ",", "0.37570314640229796`", ",", 
   RowBox[{"-", "0.43893792692106093`"}], ",", "1.0050382676429388`", ",", 
   RowBox[{"-", "0.11806259016100751`"}], ",", "0.5568055556671192`", ",", 
   RowBox[{"-", "0.1499731580861987`"}], ",", 
   RowBox[{"-", "1.1778965861980715`"}], ",", 
   RowBox[{"-", "0.31152011768617666`"}], ",", "0.31294371439030244`", ",", 
   "0.32409413441991297`", ",", 
   RowBox[{"-", "0.8940944606661215`"}], ",", 
   RowBox[{"-", "1.1032012828449553`"}], ",", "0.07526926350036209`", ",", 
   RowBox[{"-", "0.7659022043482308`"}], ",", "0.32948398751562524`", ",", 
   "0.7981893847647473`", ",", 
   RowBox[{"-", "0.8362697295641645`"}], ",", "0.5885598223223422`", ",", 
   RowBox[{"-", "0.2859769147465213`"}], ",", 
   RowBox[{"-", "1.1707273964397826`"}], ",", "0.9426720223393517`", ",", 
   RowBox[{"-", "0.33800417269576144`"}], ",", "1.0437642370733624`", ",", 
   "1.8100709639200185`", ",", "0.1717276311279729`", ",", 
   "1.5970622067439084`", ",", 
   RowBox[{"-", "1.8259912740980426`"}], ",", "1.0253349592920116`", ",", 
   RowBox[{"-", "1.538731833931693`"}], ",", 
   RowBox[{"-", "0.6824594544238529`"}], ",", "0.3325155514698349`", ",", 
   "0.4032624663600315`", ",", 
   RowBox[{"-", "1.097860624405155`"}], ",", "0.39140645131427826`", ",", 
   RowBox[{"-", "1.1059991772089326`"}], ",", "1.2037158793286875`", ",", 
   RowBox[{"-", "0.32591515456496556`"}], ",", 
   RowBox[{"-", "0.40261513580232466`"}], ",", "0.280080575579834`", ",", 
   "0.4463492948312003`", ",", 
   RowBox[{"-", "1.1382715519905675`"}], ",", "0.8899454445591491`", ",", 
   "0.576281957276719`", ",", 
   RowBox[{"-", "0.17719732089757378`"}], ",", "0.01384336800254491`", ",", 
   "0.43709099707752547`", ",", "0.7307472430850748`", ",", 
   RowBox[{"-", "0.7962242565292164`"}], ",", "0.383484664924698`", ",", 
   "0.7772697694268332`", ",", "0.7258629814407145`", ",", 
   RowBox[{"-", "0.6878248770283572`"}], ",", 
   RowBox[{"-", "1.3478768341019267`"}], ",", "0.03887147339273443`", ",", 
   RowBox[{"-", "0.23280444759055707`"}], ",", "1.006419707087221`", ",", 
   RowBox[{"-", "0.2053641705865237`"}], ",", "1.0959449843720825`", ",", 
   "1.0212931058778603`", ",", "0.9644456402461241`", ",", 
   RowBox[{"-", "0.495704721056853`"}], ",", "0.06816988817819232`", ",", 
   "0.5295115536840371`", ",", "0.21081006817966735`", ",", 
   "0.7232981654118815`", ",", 
   RowBox[{"-", "0.6255171278287854`"}], ",", 
   RowBox[{"-", "0.4720771520506192`"}], ",", "1.0959449843720825`", ",", 
   "0.6710506009574051`", ",", "0.10884318912442593`", ",", 
   RowBox[{"-", "0.1683774401565996`"}], ",", "0.7417734766459199`", ",", 
   "1.0212931058778603`", ",", 
   RowBox[{"-", "0.29690326638820763`"}], ",", 
   RowBox[{"-", "1.676716556811406`"}], ",", "0.3686002036639451`", ",", 
   "0.049915247890945195`", ",", "1.441671311204948`", ",", 
   RowBox[{"-", "0.7525303660578507`"}], ",", "0.357396701992847`", ",", 
   "0.1484723446789754`", ",", "0.7860958283052281`", ",", 
   "0.06816988817819232`", ",", "0.8641783158424416`", ",", 
   RowBox[{"-", "0.16175458310019214`"}], ",", 
   RowBox[{"-", "0.37104702952531643`"}], ",", "0.19794299889325406`", ",", 
   RowBox[{"-", "0.3809315628830428`"}], ",", "0.724472933046983`", ",", 
   "1.0316127395638341`", ",", 
   RowBox[{"-", "0.7470447730004233`"}], ",", "1.5092778430888136`", ",", 
   RowBox[{"-", "1.944692802635241`"}], ",", 
   RowBox[{"-", "0.2636683150903298`"}], ",", "0.5885598223223422`", ",", 
   "1.2184971950027075`", ",", 
   RowBox[{"-", "1.010937102953746`"}], ",", "0.26557269608637946`", ",", 
   "0.09478347301613291`", ",", "0.17220922245337028`", ",", 
   "1.8100709639200185`", ",", 
   RowBox[{"-", "1.182028581492045`"}], ",", 
   RowBox[{"-", "0.14155807446750313`"}], ",", "0.02921030403904009`", ",", 
   "1.5259596326557365`", ",", "0.35354601132572133`", ",", 
   "1.2113630558488895`", ",", 
   RowBox[{"-", "0.2502033055666029`"}], ",", 
   RowBox[{"-", "0.2867459734542795`"}], ",", "0.01384336800254498`", ",", 
   RowBox[{"-", "0.07191483145811463`"}], ",", 
   RowBox[{"-", "0.08296873256865031`"}], ",", "1.5092778430888136`", ",", 
   "0.9904506760694796`", ",", 
   RowBox[{"-", "1.9260096897122119`"}], ",", 
   RowBox[{"-", "1.038538844827358`"}], ",", 
   RowBox[{"-", "0.7004718236265587`"}], ",", 
   RowBox[{"-", "0.8712742686649741`"}], ",", "0.7386127639450784`", ",", 
   RowBox[{"-", "0.7634705417387754`"}], ",", 
   RowBox[{"-", "0.1248000523030108`"}], ",", 
   RowBox[{"-", "0.8926209354816486`"}], ",", "0.5885598223223422`", ",", 
   RowBox[{"-", "0.2122002291064326`"}], ",", 
   RowBox[{"-", "0.9253440338118128`"}], ",", 
   RowBox[{"-", "0.7434166438400676`"}], ",", "0.4901184863554623`", ",", 
   RowBox[{"-", "0.40397746835827075`"}], ",", "0.2563700806938493`", ",", 
   RowBox[{"-", "0.4403982097844805`"}], ",", "0.46513399388088494`", ",", 
   "1.0900522851214136`", ",", 
   RowBox[{"-", "1.1114547300056394`"}], ",", 
   RowBox[{"-", "1.243034123337494`"}], ",", "0.8999362972643886`", ",", 
   RowBox[{"-", "0.846501575172987`"}], ",", "0.24384989014244418`", ",", 
   "0.8081914304200739`", ",", 
   RowBox[{"-", "0.08769052301866956`"}], ",", "0.10100157778899119`", ",", 
   RowBox[{"-", "2.1292035172628996`"}], ",", "0.4941461969102331`", ",", 
   RowBox[{"-", "0.42355132742112767`"}], ",", "0.5785022227206096`", ",", 
   "0.7814078308790608`", ",", "0.10307971645719888`", ",", 
   "0.1484723446789754`", ",", 
   RowBox[{"-", "0.2834599153628544`"}], ",", "0.22551153313151506`", ",", 
   "1.8100709639200185`", ",", 
   RowBox[{"-", "0.4737793292806873`"}], ",", "1.339839620587435`", ",", 
   RowBox[{"-", "1.3999379369862166`"}], ",", 
   RowBox[{"-", "0.13852220129142032`"}], ",", 
   RowBox[{"-", "0.19988455065619798`"}], ",", 
   RowBox[{"-", "0.7749370160599464`"}], ",", 
   RowBox[{"-", "0.23544660467124456`"}], ",", "0.8909639649867653`", ",", 
   RowBox[{"-", "0.19988455065619798`"}], ",", 
   RowBox[{"-", "0.40527469845484365`"}], ",", "1.2037158793286875`", ",", 
   RowBox[{"-", "1.3456198152903012`"}], ",", "0.49080765390185416`", ",", 
   "0.5511142379197331`", ",", "0.19895595648624775`", ",", 
   "0.903219009664088`", ",", "0.2946930148061846`", ",", 
   "0.9939027028985948`", ",", "0.33316576941265375`", ",", 
   "1.441671311204948`", ",", "0.5436189584062743`", ",", 
   RowBox[{"-", "0.1314289183517572`"}], ",", 
   RowBox[{"-", "0.4450222435077694`"}], ",", "0.467528216320009`", ",", 
   "0.6059566709016846`", ",", 
   RowBox[{"-", "0.0900579017525431`"}], ",", "0.37570314640229796`", ",", 
   "0.37570314640229796`", ",", 
   RowBox[{"-", "0.5025282317530407`"}], ",", 
   RowBox[{"-", "0.9417990181066547`"}], ",", "1.225857712257418`", ",", 
   "0.8523693463749844`", ",", "0.09876219574471667`", ",", 
   "0.8497302234016209`", ",", "0.20168486790458862`", ",", 
   "0.6391900161433195`", ",", 
   RowBox[{"-", "0.486867643622516`"}], ",", "0.5885598223223422`", ",", 
   "0.7258629814407145`", ",", 
   RowBox[{"-", "1.7706380540832491`"}], ",", "0.9700688123629322`", ",", 
   "0.357396701992847`", ",", 
   RowBox[{"-", "0.07191483145811442`"}], ",", 
   RowBox[{"-", "1.4474999918565266`"}], ",", 
   RowBox[{"-", "0.8531411462597274`"}], ",", 
   RowBox[{"-", "0.5127654835282733`"}], ",", 
   RowBox[{"-", "1.0623598055188472`"}], ",", 
   RowBox[{"-", "1.787301920317717`"}], ",", 
   RowBox[{"-", "0.30156426525651314`"}], ",", "0.9644456402461241`", ",", 
   "0.7952882328305668`", ",", "1.0212931058778603`", ",", 
   RowBox[{"-", "1.1125457262445215`"}], ",", 
   RowBox[{"-", "1.0775753651836117`"}], ",", 
   RowBox[{"-", "1.4439541498809791`"}], ",", 
   RowBox[{"-", "1.0399675397895174`"}], ",", 
   RowBox[{"-", "0.268238410744806`"}], ",", 
   RowBox[{"-", "1.3544353693993512`"}], ",", "0.5568055556671192`", ",", 
   RowBox[{"-", "0.0664169522586882`"}], ",", "0.3325155514698349`", ",", 
   "1.441671311204948`", ",", 
   RowBox[{"-", "0.853189768669729`"}], ",", "0.4270121340799497`", ",", 
   RowBox[{"-", "0.9756038031324468`"}], ",", "0.7258629814407145`", ",", 
   RowBox[{"-", "0.3112441431967553`"}], ",", "0.30967964110721535`", ",", 
   "1.5970622067439084`", ",", "0.9939027028985948`", ",", 
   "0.19794299889325406`", ",", "0.41554976815477207`", ",", 
   "0.13265577468278594`", ",", 
   RowBox[{"-", "0.38048216763046405`"}], ",", 
   RowBox[{"-", "0.9657791075268874`"}], ",", "1.0493077291049318`", ",", 
   "0.05865271395121872`", ",", 
   RowBox[{"-", "0.18805140278753968`"}], ",", 
   RowBox[{"-", "0.9756038031324468`"}], ",", 
   RowBox[{"-", "1.185533229035662`"}], ",", 
   RowBox[{"-", "0.9820488029018164`"}], ",", 
   RowBox[{"-", "0.5121410808294931`"}], ",", 
   RowBox[{"-", "0.07191483145811442`"}], ",", 
   RowBox[{"-", "1.2474208190865457`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8968283249088907`*^9, 3.896828454902904*^9, 
  3.8969030466871443`*^9, 3.8969033813521757`*^9, 3.8969034430177603`*^9, 
  3.896995903095295*^9, 3.896996452233346*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"ddbb610a-f98c-4bcc-8541-03ee558d9ca8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["psd"], "Input",
 CellChangeTimes->{{3.896735077327643*^9, 3.896735077732789*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"80bc0118-4953-4d96-82e0-d667db71d476"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.33702643463410753`", ",", "0.2996575205816587`", ",", 
   "0.3059197090358423`", ",", "0.3305991769119905`", ",", 
   "0.3499229608557321`", ",", "0.33887832152906217`", ",", 
   "0.4069341300962687`", ",", "0.34275579847155374`", ",", 
   "0.3908645868447794`", ",", "0.3297837919460742`", ",", 
   "0.3465901634946574`", ",", "0.30800572442363466`", ",", 
   "0.34463064340184074`", ",", "0.35653255607340145`", ",", 
   "0.33999178228357313`", ",", "0.33237822597910166`", ",", 
   "0.3290538549963889`", ",", "0.3702430507661758`", ",", 
   "0.3647135063083544`", ",", "0.4244615961941338`", ",", 
   "0.3409124336219741`", ",", "0.34519307711368796`", ",", 
   "0.32732170446439196`", ",", "0.3069816429525251`", ",", 
   "0.32522398079923986`", ",", "0.36570297982358174`", ",", 
   "0.3356905056294481`", ",", "0.31108570673793706`", ",", 
   "0.31108570673793706`", ",", "0.3537210169890334`", ",", 
   "0.3273689995420902`", ",", "0.33326343270406245`", ",", 
   "0.3341892518022388`", ",", "0.3262435099400311`", ",", 
   "0.4169453196336547`", ",", "0.3194200085816194`", ",", 
   "0.3647874187812406`", ",", "0.311525065804875`", ",", 
   "0.3114466133883732`", ",", "0.3331165053498195`", ",", 
   "0.3095023476565399`", ",", "0.4157075947727617`", ",", 
   "0.3307247958084806`", ",", "0.3286995770849449`", ",", 
   "0.3656557000186231`", ",", "0.3359206501736576`", ",", 
   "0.3070478286968612`", ",", "0.354913360160338`", ",", 
   "0.36575231671157393`", ",", "0.36021512352804874`", ",", 
   "0.32885877703644767`", ",", "0.31574687203673474`", ",", 
   "0.33840045477988634`", ",", "0.33466315148531794`", ",", 
   "0.40197270895626375`", ",", "0.33887832152906217`", ",", 
   "0.3064181809695788`", ",", "0.311525065804875`", ",", 
   "0.3946795195796947`", ",", "0.35337442309158273`", ",", 
   "0.4157075947727617`", ",", "0.3346915651380315`", ",", 
   "0.35385275846685127`", ",", "0.3425700052746953`", ",", 
   "0.33534146227983364`", ",", "0.33460130485436584`", ",", 
   "0.40227414246054655`", ",", "0.3643100517081079`", ",", 
   "0.31574687203673474`", ",", "0.3252242135731571`", ",", 
   "0.3455434950854412`", ",", "0.33765767851366857`", ",", 
   "0.31091574095356206`", ",", "0.3069816429525251`", ",", 
   "0.35337442309158273`", ",", "0.31521558780842485`", ",", 
   "0.3758448147191994`", ",", "0.31574687203673474`", ",", 
   "0.354913360160338`", ",", "0.39523058801055777`", ",", 
   "0.32900595113692443`", ",", "0.3415943427601772`", ",", 
   "0.3271297301905657`", ",", "0.3055049174161645`", ",", 
   "0.36300283088363694`", ",", "0.37953763037277677`", ",", 
   "0.36408059300955675`", ",", "0.36820962957735`", ",", 
   "0.3546143067928931`", ",", "0.3245897506958862`", ",", 
   "0.33724251325419075`", ",", "0.34628891779028376`", ",", 
   "0.33392457486983934`", ",", "0.31574687203673474`", ",", 
   "0.34348416019447403`", ",", "0.35243438948017436`", ",", 
   "0.32815134965776316`", ",", "0.3799396071578102`", ",", 
   "0.3335843680609891`", ",", "0.3361601323657131`", ",", 
   "0.3159396530733204`", ",", "0.32420036511489597`", ",", 
   "0.4018717184360794`", ",", "0.35501799772950554`", ",", 
   "0.3103083204802724`", ",", "0.30868484783597405`", ",", 
   "0.3208121030797706`", ",", "0.3283775071221949`", ",", 
   "0.31147321425330227`", ",", "0.3379872753113025`", ",", 
   "0.3379872753113025`", ",", "0.3312364819674692`", ",", 
   "0.33983416335456845`", ",", "0.35975905728322966`", ",", 
   "0.35243597613199057`", ",", "0.3561141612749298`", ",", 
   "0.3599531867865974`", ",", "0.32068121295065666`", ",", 
   "0.35651066735665105`", ",", "0.3148493193859832`", ",", 
   "0.3120161321521099`", ",", "0.31897507851826085`", ",", 
   "0.33316922128578264`", ",", "0.340912433621974`", ",", 
   "0.3096220068921001`", ",", "0.4002107104849347`", ",", 
   "0.36257414831216755`", ",", "0.3122588536570846`", ",", 
   "0.3358613551644734`", ",", "0.387604701036309`", ",", 
   "0.30385956051907687`", ",", "0.3367717614396521`", ",", 
   "0.31108570673793706`", ",", "0.3400672712077312`", ",", 
   "0.3221963505369471`", ",", "0.3464493121951154`", ",", 
   "0.37439725138822044`", ",", "0.3623210822929508`", ",", 
   "0.3662991489527445`", ",", "0.33148534444886035`", ",", 
   "0.3122588536570846`", ",", "0.356704433437855`", ",", 
   "0.402305721724483`", ",", "0.34569606049570645`", ",", 
   "0.3654566920515448`", ",", "0.3249452951027953`", ",", 
   "0.35508749509873255`", ",", "0.3358613551644734`", ",", 
   "0.3242894849254368`", ",", "0.36021512352804874`", ",", 
   "0.4047837694624342`", ",", "0.33276374287342697`", ",", 
   "0.41405425578625393`", ",", "0.3226313841655195`", ",", 
   "0.3320654059892683`", ",", "0.36424286964818176`", ",", 
   "0.31362083142409714`", ",", "0.35746642191951167`", ",", 
   "0.35947813017024977`", ",", "0.4169453196336547`", ",", 
   "0.3341988553538218`", ",", "0.32205653249824157`", ",", 
   "0.33971404766561003`", ",", "0.36110306654078217`", ",", 
   "0.3107585088814803`", ",", "0.33962257837903237`", ",", 
   "0.33127176163009175`", ",", "0.3135187540076439`", ",", 
   "0.3720411467476022`", ",", "0.38509612363781276`", ",", 
   "0.3420831327921614`", ",", "0.3516609906565964`", ",", 
   "0.3090188765527423`", ",", "0.3917173654873732`", ",", 
   "0.3234488234420355`", ",", "0.3072293213131519`", ",", 
   "0.31108570673793706`", ",", "0.31243726744363925`", ",", 
   "0.33534146227983364`", ",", "0.3138714537122706`", ",", 
   "0.3224699548838282`", ",", "0.351965885472352`", ",", 
   "0.3122588536570846`", ",", "0.3171792875059668`", ",", 
   "0.3362393050273787`", ",", "0.359424322201638`", ",", 
   "0.3379179272151385`", ",", "0.3623986400712416`", ",", 
   "0.3039335678003115`", ",", "0.3227392860206709`", ",", 
   "0.3203465382448701`", ",", "0.3170157557574974`", ",", 
   "0.3267548611363503`", ",", "0.3252384689456792`", ",", 
   "0.35858554968409945`", ",", "0.33316922128578264`", ",", 
   "0.33424847325773366`", ",", "0.3611616772491992`", ",", 
   "0.3328428899528799`", ",", "0.36270352855223637`", ",", 
   "0.3409323702070642`", ",", "0.335968506008712`", ",", 
   "0.3400775885419203`", ",", "0.31574687203673474`", ",", 
   "0.30908548776660055`", ",", "0.33397231824058016`", ",", 
   "0.3721622191672739`", ",", "0.3095023476565399`", ",", 
   "0.32905343266291087`", ",", "0.337863180211982`", ",", 
   "0.3369453918573566`", ",", "0.3908645868447794`", ",", 
   "0.3098924679475359`", ",", "0.3330277408457922`", ",", 
   "0.31930219916033975`", ",", "0.3311339036729449`", ",", 
   "0.3409124336219741`", ",", "0.3301135150761215`", ",", 
   "0.35398123586278346`", ",", "0.37666494654149046`", ",", 
   "0.3151508831623723`", ",", "0.3122588536570846`", ",", 
   "0.3086750214975535`", ",", "0.3232300856262832`", ",", 
   "0.33313188154097273`", ",", "0.30465568901892004`", ",", 
   "0.30816161811604215`", ",", "0.33137766128055157`", ",", 
   "0.3546310302938174`", ",", "0.30934587891492177`", ",", 
   "0.33180931453186047`", ",", "0.3382637376964971`", ",", 
   "0.31574687203673474`", ",", "0.36072981111673763`", ",", 
   "0.31236811546116205`", ",", "0.30578543819390247`", ",", 
   "0.35159498459266203`", ",", "0.41370840727324515`", ",", 
   "0.3674765845114435`", ",", "0.31108570673793706`", ",", 
   "0.31574687203673474`", ",", "0.3312364819674692`", ",", 
   "0.31109189374629564`", ",", "0.31107701445309605`", ",", 
   "0.31108570673793706`", ",", "0.363076816737499`", ",", 
   "0.3345685792985291`", ",", "0.4169453196336547`", ",", 
   "0.31128409366249277`", ",", "0.3720411467476022`", ",", 
   "0.32543610746986407`", ",", "0.3125639915718479`", ",", 
   "0.3380835654797357`", ",", "0.3153669485076561`", ",", 
   "0.3362076363088755`", ",", "0.3608560555589482`", ",", 
   "0.34085723477855345`", ",", "0.4017385582739799`", ",", 
   "0.3200807462961547`", ",", "0.33030895637890917`", ",", 
   "0.32153660878357054`", ",", "0.3516609906565964`", ",", 
   "0.33352614732467756`", ",", "0.34061097668054197`", ",", 
   "0.39367608516751507`", ",", "0.3350327489539848`", ",", 
   "0.3123511975307366`", ",", "0.3105279119740807`", ",", 
   "0.35297329130712646`", ",", "0.34094360477952684`", ",", 
   "0.34339977288926654`", ",", "0.3262920319831197`", ",", 
   "0.34372632340346365`", ",", "0.3137800974212326`", ",", 
   "0.33585285578184915`", ",", "0.3351842709838254`", ",", 
   "0.3746187002491834`", ",", "0.3360400247063635`", ",", 
   "0.30624754512719693`", ",", "0.3087452640196586`", ",", 
   "0.3373618978995481`", ",", "0.39255171808838185`", ",", 
   "0.3187627379302621`", ",", "0.31574687203673474`", ",", 
   "0.3367311418820284`", ",", "0.3400572609378728`", ",", 
   "0.37360141971903743`", ",", "0.30831608017434325`", ",", 
   "0.3793243876690188`", ",", "0.4169453196336547`", ",", 
   "0.31009333543094586`", ",", "0.4157075947727617`", ",", 
   "0.36395097949493965`", ",", "0.354913360160338`", ",", 
   "0.34056428510089987`", ",", "0.32986260967292336`", ",", 
   "0.31198096522502244`", ",", "0.35872360331795217`", ",", 
   "0.3556041590104292`", ",", "0.35483762820480863`", ",", 
   "0.34655783007378616`", ",", "0.36074715283846487`", ",", 
   "0.3256747163828613`", ",", "0.327085948557006`", ",", 
   "0.3410689294478393`", ",", "0.3618843342388528`", ",", 
   "0.31343209698431823`", ",", "0.3546143067928931`", ",", 
   "0.3305991769119905`", ",", "0.33367260476910304`", ",", 
   "0.3059197090358423`", ",", "0.31202074040238853`", ",", 
   "0.37005544995135353`", ",", "0.32708166288724916`", ",", 
   "0.3264967499448134`", ",", "0.3519949135027663`", ",", 
   "0.3516609906565964`", ",", "0.31328096465783095`", ",", 
   "0.4124357776365924`", ",", "0.3367625265996035`", ",", 
   "0.31221299099297295`", ",", "0.3762212223207798`", ",", 
   "0.35099193764307685`", ",", "0.402305721724483`", ",", 
   "0.34463064340184074`", ",", "0.3758448147191994`", ",", 
   "0.3424989242566301`", ",", "0.31148296875421533`", ",", 
   "0.33519168789796533`", ",", "0.3076047899825064`", ",", 
   "0.3379872753113025`", ",", "0.3234302666556877`", ",", 
   "0.3048972396240813`", ",", "0.402305721724483`", ",", 
   "0.32885877703644767`", ",", "0.3107585088814803`", ",", 
   "0.32960968012314595`", ",", "0.39050409706821354`", ",", 
   "0.34463064340184074`", ",", "0.3308236988093592`", ",", 
   "0.3717205948622109`", ",", "0.33534146227983364`", ",", 
   "0.30465568901892004`", ",", "0.41370840727324515`", ",", 
   "0.30775190176482453`", ",", "0.3095023476565399`", ",", 
   "0.3072293213131519`", ",", "0.3388770378335398`", ",", 
   "0.31148296875421533`", ",", "0.39115204413834087`", ",", 
   "0.3235882551522052`", ",", "0.32341261067574467`", ",", 
   "0.3344262572387217`", ",", "0.3111595138691308`", ",", 
   "0.338627484244935`", ",", "0.3837221243780741`", ",", 
   "0.3103871167651629`", ",", "0.41405425578625393`", ",", 
   "0.3254925456805653`", ",", "0.3482005898498724`", ",", 
   "0.31574687203673474`", ",", "0.3608731870608795`", ",", 
   "0.352222189750893`", ",", "0.36452658513511943`", ",", 
   "0.30908548776660055`", ",", "0.305886113477188`", ",", 
   "0.4169453196336547`", ",", "0.3473461952859914`", ",", 
   "0.33316163965373685`", ",", "0.30431858196245626`", ",", 
   "0.3720411467476022`", ",", "0.36524494434580745`", ",", 
   "0.40197270895626375`", ",", "0.3685085834740446`", ",", 
   "0.31406903110181805`", ",", "0.30591970903584237`", ",", 
   "0.30529413002021194`", ",", "0.3246854347042502`", ",", 
   "0.41405425578625393`", ",", "0.3531084430203091`", ",", 
   "0.3522857749776877`", ",", "0.3115194909258704`", ",", 
   "0.318269461752387`", ",", "0.33928305476778803`", ",", 
   "0.3384051663752174`", ",", "0.32211787196757846`", ",", 
   "0.34547876306788544`", ",", "0.31810673266760336`", ",", 
   "0.31574687203673474`", ",", "0.30578543819390247`", ",", 
   "0.3201152394921489`", ",", "0.3322422396526136`", ",", 
   "0.335968506008712`", ",", "0.31558062686048355`", ",", 
   "0.3742652729877001`", ",", "0.3126430896879976`", ",", 
   "0.33196161703589533`", ",", "0.3556156512242037`", ",", 
   "0.3779401399941702`", ",", "0.3341892518022388`", ",", 
   "0.37439725138822044`", ",", "0.31780086876534547`", ",", 
   "0.3282889084218504`", ",", "0.37224904947491977`", ",", 
   "0.32926635162022155`", ",", "0.3319579168814294`", ",", 
   "0.31723484254092194`", ",", "0.3380835654797357`", ",", 
   "0.3246497872235514`", ",", "0.3671757217768382`", ",", 
   "0.36731821248480434`", ",", "0.36733968113227927`", ",", 
   "0.3072293213131519`", ",", "0.36800540761659356`", ",", 
   "0.30920811012149413`", ",", "0.4169453196336547`", ",", 
   "0.3109356535662535`", ",", "0.36365595357217373`", ",", 
   "0.36623642170543774`", ",", "0.313101666905774`", ",", 
   "0.30460458149577757`", ",", "0.3241717884860075`", ",", 
   "0.3042250647180985`", ",", "0.3974650769848891`", ",", 
   "0.30460458149577757`", ",", "0.3764037180094328`", ",", 
   "0.36074715283846487`", ",", "0.33355830462438596`", ",", 
   "0.3367252902131918`", ",", "0.329230198042711`", ",", 
   "0.3076571199997147`", ",", "0.3515829166780548`", ",", 
   "0.33287002279787803`", ",", "0.38069965577906334`", ",", 
   "0.32897237877728275`", ",", "0.41370840727324515`", ",", 
   "0.3347577569520577`", ",", "0.3127442110398247`", ",", 
   "0.3139440467192322`", ",", "0.32809014725531765`", ",", 
   "0.3516665967849397`", ",", "0.3108846965280902`", ",", 
   "0.3123511975307366`", ",", "0.3123511975307366`", ",", 
   "0.30170539885691483`", ",", "0.3217857874030718`", ",", 
   "0.3946795195796947`", ",", "0.33887832152906217`", ",", 
   "0.3341258340372118`", ",", "0.37534511361100903`", ",", 
   "0.3596835341123624`", ",", "0.37486137790745827`", ",", 
   "0.3106219685054388`", ",", "0.31574687203673474`", ",", 
   "0.3516609906565964`", ",", "0.337579917943772`", ",", 
   "0.37731235386314776`", ",", "0.3095023476565399`", ",", 
   "0.3052941300202117`", ",", "0.3683606983635395`", ",", 
   "0.33822075346581154`", ",", "0.3518134824547548`", ",", 
   "0.3334245966887509`", ",", "0.3565649894643244`", ",", 
   "0.3279040076366569`", ",", "0.3758448147191994`", ",", 
   "0.33316922128578264`", ",", "0.34463064340184074`", ",", 
   "0.361408580786849`", ",", "0.33375829028030546`", ",", 
   "0.3599797650500357`", ",", "0.3279446036881374`", ",", 
   "0.32448867477996685`", ",", "0.32912383851597443`", ",", 
   "0.34339977288926654`", ",", "0.32695422698677346`", ",", 
   "0.31198096522502244`", ",", "0.41370840727324515`", ",", 
   "0.322425562638633`", ",", "0.3401275632019461`", ",", 
   "0.3303532164471647`", ",", "0.3516609906565964`", ",", 
   "0.3316591142722942`", ",", "0.33759048779218637`", ",", 
   "0.4157075947727617`", ",", "0.38069965577906334`", ",", 
   "0.3344262572387217`", ",", "0.32718649145365253`", ",", 
   "0.32680556235694647`", ",", "0.3194990500061318`", ",", 
   "0.3462651970419918`", ",", "0.3525168766154748`", ",", 
   "0.34053780252207266`", ",", "0.3186936917498068`", ",", 
   "0.3303532164471647`", ",", "0.3466632738706821`", ",", 
   "0.3045101206002826`", ",", "0.32739026883436906`", ",", 
   "0.3052941300202117`", ",", "0.3437001796223449`"}], "}"}]], "Output",
 CellChangeTimes->{3.8968283249715433`*^9, 3.896828454971661*^9, 
  3.8969030467731123`*^9, 3.896903381374023*^9, 3.896903443027326*^9, 
  3.896995903105485*^9, 3.8969964522939873`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"188b869d-9341-4947-9023-7e0259d7dbf7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookEvaluate", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<mod/Module_Modelfit.nb\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.896996268134431*^9, 3.896996372610319*^9}, {
  3.8969964168108883`*^9, 3.896996418257922*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"7b03ba11-ec7d-47c6-8218-4cb4eacefb31"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"itemmodelnparam", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"model", ",", 
     RowBox[{"{", "testlength", "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "itemmodelnparam"}], "Input",
 CellChangeTimes->{{3.896996268134431*^9, 3.896996352265527*^9}, 
   3.896996429866622*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"346dfb6a-75e2-44d5-9993-0b7fa8dd60b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.896996290643558*^9, 3.8969963418090982`*^9}, {
  3.896996424245013*^9, 3.896996452604135*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"da976f82-ff0c-45e7-a53d-7860448af93c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"itemmodelloglike", "=", 
   RowBox[{"itemloglike", "+", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"paramset", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", "2"}], ")"}], "^", 
      "2"}], "/", "2"}], "-", 
    RowBox[{"slopeprior", "[", 
     RowBox[{
      RowBox[{"paramset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "0", ",", ".5"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"model", "\[GreaterEqual]", "3"}], ",", 
    RowBox[{"itemmodelloglike", "-=", 
     RowBox[{"asymprior", "[", 
      RowBox[{
       RowBox[{"paramset", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "2", ",", "5"}], 
      "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"model", "\[GreaterEqual]", "4"}], ",", 
    RowBox[{"itemmodelloglike", "-=", 
     RowBox[{"asymprior", "[", 
      RowBox[{
       RowBox[{"paramset", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", "10", ",", "2"}], 
      "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", "itemloglike"}], "Input",\

 CellChangeTimes->{{3.8969964884630337`*^9, 3.896996523167601*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"15a4004c-b71f-4729-94e6-1209c00778dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "265.7822085374967`"}], ",", 
   RowBox[{"-", "256.195684105533`"}], ",", 
   RowBox[{"-", "283.47228010468723`"}], ",", 
   RowBox[{"-", "207.69028789775885`"}], ",", 
   RowBox[{"-", "235.11586975700067`"}], ",", 
   RowBox[{"-", "176.74378861322901`"}], ",", 
   RowBox[{"-", "253.59556062332143`"}], ",", 
   RowBox[{"-", "317.5071358638063`"}], ",", 
   RowBox[{"-", "325.31938616137285`"}], ",", 
   RowBox[{"-", "311.98843564463624`"}], ",", 
   RowBox[{"-", "251.73162067330955`"}], ",", 
   RowBox[{"-", "242.43235664791717`"}], ",", 
   RowBox[{"-", "296.3748271225691`"}], ",", 
   RowBox[{"-", "226.19268651809668`"}], ",", 
   RowBox[{"-", "274.6553016983409`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896996501261319*^9, 3.89699652372465*^9}},
 CellLabel->
  "Out[144]=",ExpressionUUID->"283577b6-72eb-42e0-9a81-386b62918d85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["itemmodelloglike"], "Input",
 CellChangeTimes->{{3.896996664522534*^9, 3.8969966926016006`*^9}, {
  3.896997019728671*^9, 3.896997022117311*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"309fb9a7-5210-4a05-a57b-80bc41d273c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "262.9781394202634`"}], ",", 
   RowBox[{"-", "253.40399448752552`"}], ",", 
   RowBox[{"-", "280.63929820018416`"}], ",", 
   RowBox[{"-", "204.88884199610587`"}], ",", 
   RowBox[{"-", "232.13381016251014`"}], ",", 
   RowBox[{"-", "173.66750590806845`"}], ",", 
   RowBox[{"-", "250.90330847236805`"}], ",", 
   RowBox[{"-", "314.77976953791494`"}], ",", 
   RowBox[{"-", "321.92167741160875`"}], ",", 
   RowBox[{"-", "309.31777594846324`"}], ",", 
   RowBox[{"-", "248.42586137888011`"}], ",", 
   RowBox[{"-", "238.8919074434166`"}], ",", 
   RowBox[{"-", "293.4666940585931`"}], ",", 
   RowBox[{"-", "223.47368392173655`"}], ",", 
   RowBox[{"-", "271.9020386843982`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.89699665183849*^9, 3.8969966935549297`*^9}, 
   3.896997022505472*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"d3c4d2d3-62d0-43e4-b41d-86bd26b184e6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"itemfit", "[", 
   RowBox[{
   "zzz", ",", "uuu", ",", "itemmodelloglike", ",", "itemmodelnparam"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{3.896998684087591*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"2da80d42-f5cd-4758-b101-2600984c0a10"],

Cell[CellGroupData[{

Cell[BoxData["testfitout"], "Input",
 CellChangeTimes->{{3.896998704175337*^9, 3.8969987095052347`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"cd1aabd5-a762-4975-b900-b64b1899a641"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Model\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"N of EM Cycles\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Log-Likelihood(Benchmark Model)\"\>", ",", 
     RowBox[{"-", "3560.005123060587`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Log-Likelihood(Null Model)\"\>", ",", 
     RowBox[{"-", "4350.217047864219`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chi-square(Null Model)\"\>", ",", "1580.4238496072653`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DF(Null Model)\"\>", ",", "195"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Log-Likelihood(Analysis Model)\"\>", ",", 
     RowBox[{"-", "3880.794307032037`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chi-square(Analysis Model)\"\>", ",", "641.5783679429007`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DF(Analysis Model)\"\>", ",", "165"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFI\"\>", ",", "0.594046642549508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RFI\"\>", ",", "0.5202369411948731`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IFI\"\>", ",", "0.6632963560172198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TLI\"\>", ",", "0.5934608889143799`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CFI\"\>", ",", "0.6560053675429369`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RMSEA\"\>", ",", "0.07608077325010337`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AIC\"\>", ",", "311.57836794290074`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CAIC\"\>", ",", 
     RowBox[{"-", "384.16163873610185`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BIC\"\>", ",", 
     RowBox[{"-", "383.8319682967608`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896998710858403*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"71ea0efb-bcec-48c0-9aa7-6904f5b35e5e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nres", "=", 
   RowBox[{"Total", "[", "zzz", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nitem", "=", "testlength"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"crr", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Total", "[", "uuu", "]"}], "/", "nres"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"con", "=", "const"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nobs", "=", "samplesize"}], ";"}]}], "Input",
 CellChangeTimes->{3.896998819864756*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"20f181d3-9e9f-4d24-a329-2a49f3988ab6"],

Cell[CellGroupData[{

Cell[BoxData["con"], "Input",
 CellChangeTimes->{{3.896998825783001*^9, 3.896998833728108*^9}, {
  3.8969995718316517`*^9, 3.896999573054124*^9}, {3.896999609010903*^9, 
  3.896999624412259*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"e8addacc-76ff-4bcc-8db8-535cb8c5d86f"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", "15"]]], "Output",
 CellChangeTimes->{{3.8969988269390574`*^9, 3.896998833968872*^9}, 
   3.896999573297987*^9, {3.896999619167919*^9, 3.896999625007516*^9}},
 CellLabel->
  "Out[179]=",ExpressionUUID->"dd675670-8310-42cb-b069-16c8921481d8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"total", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"uuu", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totaltally", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Tally", "[", "total", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totallist", "=", 
   RowBox[{"totaltally", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totaldist", "=", 
   RowBox[{"totaltally", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.89699885246073*^9},
 CellLabel->
  "In[159]:=",ExpressionUUID->"2ea9f409-e2cd-48b1-8136-fa059004b768"],

Cell[CellGroupData[{

Cell[BoxData["totaldist"], "Input",
 CellChangeTimes->{{3.896998857418688*^9, 3.896998877532915*^9}, {
  3.896999678069187*^9, 3.8969996807389107`*^9}, {3.8969997146538973`*^9, 
  3.896999715237042*^9}, {3.896999801625901*^9, 3.896999807348222*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"0f413d56-ae10-46b3-b2bc-f1da299a448e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "2", ",", "10", ",", "25", ",", "33", ",", "44", ",", "40", ",", 
   "50", ",", "77", ",", "82", ",", "65", ",", "45", ",", "18", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8969988598996067`*^9, 3.896998877760806*^9}, 
   3.896999681837966*^9, 3.896999717121447*^9, {3.896999802456949*^9, 
   3.8969998087767878`*^9}},
 CellLabel->
  "Out[183]=",ExpressionUUID->"8b14bdc9-9f71-4628-af14-f7a58e40d1bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ntotal", "=", 
   RowBox[{"Length", "[", "totallist", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalpos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"total", ",", 
       RowBox[{"totallist", "[", 
        RowBox[{"[", "t", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "ntotal"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cgj", "=", 
    RowBox[{"N", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Extract", "[", 
         RowBox[{"uuu", ",", 
          RowBox[{"totalpos", "[", 
           RowBox[{"[", "t", "]"}], "]"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "1", ",", "ntotal"}], "}"}]}], "]"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"G", " ", "x", " ", "J"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fgj", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{"totaldist", ",", 
        RowBox[{"{", "nitem", "}"}]}], "]"}], "]"}], "-", "cgj"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"G", " ", "x", " ", "J"}], 
   "*)"}]}], "\[IndentingNewLine]", "fgj"}], "Input",
 CellChangeTimes->{
  3.89699889503232*^9, {3.896999863014462*^9, 3.896999894446772*^9}, {
   3.8969999502792797`*^9, 3.896999951015723*^9}, {3.897000866357856*^9, 
   3.8970008671660967`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"3828b0a1-0c21-4d05-91a6-6fd90e2a4a9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3.`", ",", "2.`", ",", "2.`", ",", "3.`", ",", "3.`", ",", "2.`", ",", 
     "2.`", ",", "3.`", ",", "2.`", ",", "3.`", ",", "3.`", ",", "3.`", ",", 
     "3.`", ",", "3.`", ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "2.`", ",", "2.`", ",", "2.`", ",", "0.`", ",", "2.`", ",", 
     "1.`", ",", "2.`", ",", "1.`", ",", "2.`", ",", "2.`", ",", "2.`", ",", 
     "2.`", ",", "1.`", ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6.`", ",", "7.`", ",", "6.`", ",", "8.`", ",", "7.`", ",", "6.`", ",", 
     "6.`", ",", "8.`", ",", "7.`", ",", "8.`", ",", "10.`", ",", "9.`", ",", 
     "9.`", ",", "7.`", ",", "6.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "16.`", ",", "14.`", ",", "11.`", ",", "12.`", ",", "13.`", ",", "10.`", 
     ",", "18.`", ",", "18.`", ",", "21.`", ",", "12.`", ",", "25.`", ",", 
     "24.`", ",", "19.`", ",", "19.`", ",", "18.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12.`", ",", "18.`", ",", "13.`", ",", "20.`", ",", "11.`", ",", "13.`", 
     ",", "26.`", ",", "25.`", ",", "24.`", ",", "19.`", ",", "26.`", ",", 
     "32.`", ",", "24.`", ",", "16.`", ",", "18.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15.`", ",", "17.`", ",", "19.`", ",", "26.`", ",", "7.`", ",", "10.`", 
     ",", "23.`", ",", "28.`", ",", "33.`", ",", "18.`", ",", "42.`", ",", 
     "42.`", ",", "29.`", ",", "19.`", ",", "24.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.`", ",", "13.`", ",", "18.`", ",", "11.`", ",", "10.`", ",", "7.`", 
     ",", "16.`", ",", "22.`", ",", "27.`", ",", "17.`", ",", "37.`", ",", 
     "34.`", ",", "22.`", ",", "12.`", ",", "17.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.`", ",", "16.`", ",", "20.`", ",", "9.`", ",", "18.`", ",", "5.`", 
     ",", "13.`", ",", "23.`", ",", "31.`", ",", "21.`", ",", "44.`", ",", 
     "40.`", ",", "14.`", ",", "14.`", ",", "15.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "19.`", ",", "10.`", ",", "17.`", ",", "11.`", ",", "9.`", ",", "4.`", 
     ",", "20.`", ",", "26.`", ",", "56.`", ",", "27.`", ",", "63.`", ",", 
     "68.`", ",", "23.`", ",", "16.`", ",", "16.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "14.`", ",", "12.`", ",", "14.`", ",", "4.`", ",", "14.`", ",", "2.`", 
     ",", "7.`", ",", "24.`", ",", "56.`", ",", "20.`", ",", "55.`", ",", 
     "61.`", ",", "22.`", ",", "9.`", ",", "14.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.`", ",", "8.`", ",", "10.`", ",", "4.`", ",", "5.`", ",", "1.`", ",", 
     "8.`", ",", "16.`", ",", "40.`", ",", "14.`", ",", "30.`", ",", "33.`", 
     ",", "10.`", ",", "2.`", ",", "10.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.`", ",", "4.`", ",", "5.`", ",", "2.`", ",", "1.`", ",", "6.`", ",", 
     "2.`", ",", "8.`", ",", "17.`", ",", "4.`", ",", "18.`", ",", "13.`", 
     ",", "2.`", ",", "0.`", ",", "5.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "3.`", ",", "3.`", ",", "4.`", ",", "2.`", ",", "2.`", ",", 
     "4.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896999876131844*^9, 3.89699989545153*^9}, 
   3.8969999520146837`*^9, 3.897000868513672*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"bb823c65-23ea-4282-bf1a-53dfa665b96d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"grprefmat", "=", 
   RowBox[{"cgj", "/", "totaldist"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.896998903163039*^9, 3.896998937308303*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"3ee27bfd-5ed4-41d0-9d79-c81af9eb3843"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"itembenchloglike", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"cgj", "*", 
      RowBox[{"Log", "[", 
       RowBox[{"grprefmat", "+", "con"}], "]"}]}], "+", 
     RowBox[{"fgj", "*", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "grprefmat", "+", "con"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "itembenchloglike"}], "Input",
 CellChangeTimes->{
  3.896998950272264*^9, {3.896998986748467*^9, 3.896998988544078*^9}, {
   3.897000660958311*^9, 3.897000664330682*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"4ff3a9b3-a332-4188-85b0-d1d44c7f7b46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "240.18961141245262`"}], ",", 
   RowBox[{"-", "235.4363635200375`"}], ",", 
   RowBox[{"-", "260.90642155637437`"}], ",", 
   RowBox[{"-", "192.07180243393628`"}], ",", 
   RowBox[{"-", "206.53721476503648`"}], ",", 
   RowBox[{"-", "153.93971690854093`"}], ",", 
   RowBox[{"-", "228.37875378811484`"}], ",", 
   RowBox[{"-", "293.22518376946607`"}], ",", 
   RowBox[{"-", "300.4923376733499`"}], ",", 
   RowBox[{"-", "288.19835566954333`"}], ",", 
   RowBox[{"-", "224.0854868165807`"}], ",", 
   RowBox[{"-", "214.79668883857536`"}], ",", 
   RowBox[{"-", "262.0306953126549`"}], ",", 
   RowBox[{"-", "204.9528009589729`"}], ",", 
   RowBox[{"-", "254.7636896369505`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.89699898880301*^9, 3.897000664620997*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"b0e1da02-bf70-4a05-a63a-b7d55ef32bc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["itembenchloglike"], "Input",
 CellChangeTimes->{{3.89699895590066*^9, 3.896998959097843*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"ea8a872e-e625-4342-afc4-54cf1e5ba5f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "240.18961141245262`"}], ",", 
   RowBox[{"-", "235.4363635200375`"}], ",", 
   RowBox[{"-", "260.90642155637437`"}], ",", 
   RowBox[{"-", "192.07180243393628`"}], ",", 
   RowBox[{"-", "206.53721476503648`"}], ",", 
   RowBox[{"-", "153.93971690854093`"}], ",", 
   RowBox[{"-", "228.37875378811484`"}], ",", 
   RowBox[{"-", "293.22518376946607`"}], ",", 
   RowBox[{"-", "300.4923376733499`"}], ",", 
   RowBox[{"-", "288.19835566954333`"}], ",", 
   RowBox[{"-", "224.0854868165807`"}], ",", 
   RowBox[{"-", "214.79668883857536`"}], ",", 
   RowBox[{"-", "262.0306953126549`"}], ",", 
   RowBox[{"-", "204.9528009589729`"}], ",", 
   RowBox[{"-", "254.7636896369505`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896998960491008*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"01096f64-d412-437b-8532-e9d879fff515"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"itemnullloglike", "=", 
   RowBox[{
    RowBox[{"nobs", "*", "crr", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"crr", "+", "con"}], "]"}]}], "+", 
    RowBox[{"nobs", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "crr"}], ")"}], "*", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "crr", "+", "con"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", "itemnullloglike"}], "Input",
 CellChangeTimes->{{3.89700119797075*^9, 3.8970012112006187`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"7da8a83f-f02c-4065-9d98-a387a5c7f954"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "283.3432328015146`"}], ",", 
   RowBox[{"-", "278.9486319301941`"}], ",", 
   RowBox[{"-", "293.59812763229905`"}], ",", 
   RowBox[{"-", "265.9617979500293`"}], ",", 
   RowBox[{"-", "247.4031907743613`"}], ",", 
   RowBox[{"-", "198.81736523554355`"}], ",", 
   RowBox[{"-", "298.34549199806077`"}], ",", 
   RowBox[{"-", "338.7888009406459`"}], ",", 
   RowBox[{"-", "327.84218653680347`"}], ",", 
   RowBox[{"-", "319.8496782370727`"}], ",", 
   RowBox[{"-", "299.2652870863921`"}], ",", 
   RowBox[{"-", "293.59812763229905`"}], ",", 
   RowBox[{"-", "328.3959150197982`"}], ",", 
   RowBox[{"-", "273.212285134245`"}], ",", 
   RowBox[{"-", "302.84692895496016`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.897001211470636*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"09b93589-dd6f-4ec0-8a11-ebcf2aee07ef"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897001202554888*^9, 
  3.8970012036242123`*^9}},ExpressionUUID->"16b66cfd-0f75-4d9e-a3b6-\
cc0440c15596"]
}, Open  ]]
},
WindowSize->{1501, 1027},
WindowMargins->{{Automatic, 329}, {Automatic, 65}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"], 
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) \
(2023\:5e741\:670831\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cde8f1d3-dafd-4211-8fb3-d6d5ffaa0ea2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 309, 5, 44, "Text",ExpressionUUID->"531f5a85-d355-474d-88f9-7982c61a4b0f"],
Cell[873, 27, 4001, 105, 1120, "Input",ExpressionUUID->"caee3d92-5409-4860-976e-2ef5e18a887e"],
Cell[4877, 134, 2888, 94, 189, "Input",ExpressionUUID->"b7642510-9adb-41d0-8d0a-6fc069913880"],
Cell[CellGroupData[{
Cell[7790, 232, 343, 6, 64, "Input",ExpressionUUID->"cf84ce1c-9071-422a-b65e-e81d6b1e5687"],
Cell[8136, 240, 644, 14, 43, "Output",ExpressionUUID->"8d68d203-fa38-4a3f-9399-3395852fa36e"],
Cell[8783, 256, 373, 6, 42, "Output",ExpressionUUID->"0900ad8a-be04-4483-bb93-871be4d4fcc4"]
}, Open  ]],
Cell[9171, 265, 5514, 148, 888, "Input",ExpressionUUID->"978ff87a-a4b2-4955-b871-a2388963be16"],
Cell[14688, 415, 6850, 166, 1347, "Input",ExpressionUUID->"f616f732-3491-40a3-95c7-1656ddbfe950"],
Cell[21541, 583, 7200, 175, 1425, "Input",ExpressionUUID->"36989eff-458e-40fe-9a59-5fb758e9c46c"],
Cell[28744, 760, 833, 21, 154, "Input",ExpressionUUID->"45715bca-8b98-4d83-8f64-23a821d3bf5a"],
Cell[29580, 783, 415, 7, 37, "Input",ExpressionUUID->"3a2c7b35-3dc8-4d8b-a3a5-b19c7da6fc9c"],
Cell[CellGroupData[{
Cell[30020, 794, 203, 4, 37, "Input",ExpressionUUID->"00f3ca63-bca2-4027-961e-3b09267298a9"],
Cell[CellGroupData[{
Cell[30248, 802, 270, 5, 29, "Print",ExpressionUUID->"5c6cbb4d-ac2c-4f3c-b1f8-05d001273507"],
Cell[30521, 809, 1048, 28, 193, "Print",ExpressionUUID->"3a0417a5-bc3b-46ab-a803-e52ccd751019"],
Cell[31572, 839, 270, 5, 29, "Print",ExpressionUUID->"3900c60f-403d-477c-a549-ef0eb48f6783"],
Cell[31845, 846, 2428, 50, 327, "Print",ExpressionUUID->"5be6fbbf-af53-40b5-8f99-8bbe71618167"]
}, Open  ]]
}, Open  ]],
Cell[34300, 900, 1051, 33, 241, "Input",ExpressionUUID->"34e27eb8-57b0-4c42-bb8f-60af17b59ea9"],
Cell[CellGroupData[{
Cell[35376, 937, 179, 2, 37, "Input",ExpressionUUID->"528c34e7-c7b1-4aa6-81a2-eecec3287746"],
Cell[35558, 941, 2453, 66, 121, "Output",ExpressionUUID->"3c65e49f-d612-4584-93dc-6d477cbbfee7"]
}, Open  ]],
Cell[38026, 1010, 919, 28, 177, "Input",ExpressionUUID->"b5674cc2-c5d6-4559-87ec-60494c500bcd"],
Cell[CellGroupData[{
Cell[38970, 1042, 205, 3, 54, "Input",ExpressionUUID->"d2f45801-4ec6-4d4e-9f67-e1cc77fec02c"],
Cell[39178, 1047, 332, 4, 43, "Output",ExpressionUUID->"f7c400cf-6fe4-4eac-92b3-a1fb8daead80"]
}, Open  ]],
Cell[39525, 1054, 618, 17, 106, "Input",ExpressionUUID->"75a11155-8ad8-4b25-8554-27cf94ac3f16"],
Cell[CellGroupData[{
Cell[40168, 1075, 181, 2, 37, "Input",ExpressionUUID->"b546d746-4d70-4b9c-97a2-351c4d726869"],
Cell[40352, 1079, 1760, 51, 64, "Output",ExpressionUUID->"9bb36ceb-e179-44b2-8211-b3266f1a66eb"]
}, Open  ]],
Cell[42127, 1133, 296, 7, 64, "Input",ExpressionUUID->"e765db66-9a52-4371-93a3-4782314455cf"],
Cell[CellGroupData[{
Cell[42448, 1144, 180, 2, 37, "Input",ExpressionUUID->"f2d152b6-435b-4f88-9177-5d08d145a1bf"],
Cell[42631, 1148, 786, 14, 42, "Output",ExpressionUUID->"1c6fc263-6340-4ca9-8c02-ccb38f88b625"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43454, 1167, 176, 2, 37, "Input",ExpressionUUID->"2b03c685-f1a5-449c-9bd2-a73ff00b3cad"],
Cell[43633, 1171, 989, 19, 69, "Output",ExpressionUUID->"2beb45de-bb53-4793-8508-e1aa344b551a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44659, 1195, 178, 2, 37, "Input",ExpressionUUID->"9e19bfbb-0de1-45b3-817c-5e70df43ea9f"],
Cell[44840, 1199, 318, 4, 42, "Output",ExpressionUUID->"75b390fa-d06d-4950-bcde-9d03d13dcff0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45195, 1208, 181, 2, 37, "Input",ExpressionUUID->"46dcf40b-1be2-479a-b1ba-efb723d56581"],
Cell[45379, 1212, 873, 17, 42, "Output",ExpressionUUID->"4d89c88a-b589-4c50-9278-d3bec4c515cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46289, 1234, 176, 2, 37, "Input",ExpressionUUID->"65aa33da-2823-4336-9a66-1a409bcd7b23"],
Cell[46468, 1238, 370, 6, 62, "Output",ExpressionUUID->"1664eda1-39bd-4dce-89e3-73429fc7301d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46875, 1249, 178, 2, 37, "Input",ExpressionUUID->"06494098-573c-4930-b353-9a9738e3bbc8"],
Cell[47056, 1253, 368, 6, 43, "Output",ExpressionUUID->"58362764-b582-41b3-9b01-5f0bf1a707cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47461, 1264, 181, 2, 37, "Input",ExpressionUUID->"2a86efd4-20cc-4176-ad16-e629237fb3a2"],
Cell[47645, 1268, 389, 7, 43, "Output",ExpressionUUID->"19836262-c557-4ebb-9eba-aef55eabbc58"]
}, Open  ]],
Cell[48049, 1278, 1102, 31, 106, "Input",ExpressionUUID->"6c1c84eb-ed11-4a6b-a86d-23cfa052cef4"],
Cell[CellGroupData[{
Cell[49176, 1313, 911, 22, 54, "Input",ExpressionUUID->"890ccb33-d9f6-4731-93a8-76ea56282984"],
Cell[50090, 1337, 345, 5, 42, "Output",ExpressionUUID->"cf359e82-a689-483a-ada9-a06d3a4f53e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50472, 1347, 396, 7, 37, "Input",ExpressionUUID->"b7122395-6f52-4b21-ae50-ccf1421cd5fd"],
Cell[50871, 1356, 313, 4, 42, "Output",ExpressionUUID->"2edc3397-0fed-4622-b722-464c41413799"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51221, 1365, 299, 7, 64, "Input",ExpressionUUID->"b1cf6700-78fb-4723-8a87-082a38fbabaa"],
Cell[51523, 1374, 13503, 291, 667, "Output",ExpressionUUID->"02d93b82-4cb4-441f-b4d8-01360947753c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65063, 1670, 1076, 28, 109, "Input",ExpressionUUID->"78b7ff48-707d-4e5f-9291-d41310ac4829"],
Cell[66142, 1700, 13387, 291, 615, "Output",ExpressionUUID->"e011c20f-061b-4af6-b07b-196cfffeb65e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79566, 1996, 1163, 28, 99, "Input",ExpressionUUID->"5b37f45a-a7b6-4a0a-b38c-ebbf8d0d3187"],
Cell[80732, 2026, 358, 6, 42, "Output",ExpressionUUID->"c6ea21a8-8d3d-4be3-937b-f0f72ffda0a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81127, 2037, 532, 12, 83, "Input",ExpressionUUID->"57598909-66ee-4154-b8f2-7d5ea87aa6fd"],
Cell[81662, 2051, 16684, 257, 1239, "Output",ExpressionUUID->"7afde7e8-fbfe-47c1-972e-e0271934221d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98383, 2313, 515, 12, 90, "Input",ExpressionUUID->"22cfb828-205d-455d-87ac-a775986fb551"],
Cell[98901, 2327, 3370, 61, 306, "Output",ExpressionUUID->"84ae7008-966f-4478-822a-cda21bec8862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102308, 2393, 394, 9, 83, "Input",ExpressionUUID->"49e372d7-620c-44de-933d-2a66352aa436"],
Cell[102705, 2404, 834, 14, 69, "Output",ExpressionUUID->"9a8a8b6f-f35c-4a19-9ba0-00d814a12c1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103576, 2423, 405, 10, 83, "Input",ExpressionUUID->"1eea5d9e-9114-4f02-a0c2-9d06b4546245"],
Cell[103984, 2435, 8738, 168, 589, "Output",ExpressionUUID->"34521ae5-1518-45f9-8e95-62d8bc0a54b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112759, 2608, 452, 13, 83, "Input",ExpressionUUID->"af69cad4-5ef7-4e0f-849c-6809911557ff"],
Cell[113214, 2623, 8809, 171, 589, "Output",ExpressionUUID->"b8cc8970-4992-421c-9545-39dde6e4b0ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122060, 2799, 2583, 70, 225, "Input",ExpressionUUID->"0d4035c7-489a-45d4-9e95-a71752ea0ec4"],
Cell[124646, 2871, 365, 6, 42, "Output",ExpressionUUID->"f2a0642d-5d28-4c21-828b-6fd2cf02b3a0"],
Cell[125014, 2879, 525, 10, 42, "Output",ExpressionUUID->"b48d6baa-380e-4071-be06-305ea17c3962"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125576, 2894, 205, 3, 54, "Input",ExpressionUUID->"3b0e15f2-e9f4-47a5-9d4a-847d61d671a0"],
Cell[125784, 2899, 346, 5, 42, "Output",ExpressionUUID->"549d9c78-a51c-43e3-bc0c-98e391bc3f01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126167, 2909, 195, 2, 84, "Section",ExpressionUUID->"603ae7f5-bf5d-4f91-b4ce-280217df55fe"],
Cell[CellGroupData[{
Cell[126387, 2915, 16371, 431, 2115, "Input",ExpressionUUID->"0ed218cc-2cd1-42fd-91f3-0070ee920777"],
Cell[CellGroupData[{
Cell[142783, 3350, 754, 15, 29, "Print",ExpressionUUID->"2d129c3e-09a6-4894-92e9-06672a303805"],
Cell[143540, 3367, 757, 15, 29, "Print",ExpressionUUID->"2b20223d-297b-497b-9c8d-de631a89209a"],
Cell[144300, 3384, 757, 15, 29, "Print",ExpressionUUID->"193fc47f-1757-48db-9ab9-d6c1e9d78dba"],
Cell[145060, 3401, 753, 15, 29, "Print",ExpressionUUID->"9d3ff43e-3943-419c-941a-cc38fed0710c"],
Cell[145816, 3418, 754, 15, 29, "Print",ExpressionUUID->"09c6fb6f-6ebe-4b6e-84a1-edadb1a61491"],
Cell[146573, 3435, 757, 15, 29, "Print",ExpressionUUID->"139df383-0e61-4bae-9379-6f963767f6c8"],
Cell[147333, 3452, 759, 15, 29, "Print",ExpressionUUID->"ba7e25b1-e132-4972-b047-bbc4bf5d91ab"],
Cell[148095, 3469, 759, 15, 29, "Print",ExpressionUUID->"bab8d998-c877-4304-a43f-1517bda3bdbd"],
Cell[148857, 3486, 759, 15, 29, "Print",ExpressionUUID->"58976e58-4e0b-4eac-9428-738ff68d65ab"],
Cell[149619, 3503, 762, 16, 29, "Print",ExpressionUUID->"37fed0db-7119-4c0e-933a-27bfb130bff0"],
Cell[150384, 3521, 762, 16, 29, "Print",ExpressionUUID->"30461198-e21e-41aa-a17d-aa0e98a3fd15"],
Cell[151149, 3539, 756, 15, 29, "Print",ExpressionUUID->"3c662e58-71ca-49a2-88dd-d51415d898c5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151954, 3560, 233, 4, 37, "Input",ExpressionUUID->"f0e05437-0916-4d19-a1a0-574ed854e4bd"],
Cell[152190, 3566, 433, 8, 42, "Output",ExpressionUUID->"831a49ce-5e75-455b-a0aa-0cc3157b94cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152660, 3579, 183, 3, 37, "Input",ExpressionUUID->"eb9fc8e7-f10a-4188-b7a6-6994cb8cd474"],
Cell[152846, 3584, 2776, 69, 121, "Output",ExpressionUUID->"fa6c8f80-c660-4357-bdae-76f883f5f99b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155659, 3658, 7183, 204, 769, "Input",ExpressionUUID->"d5b27c9e-a65f-4caa-8d4f-e763878c9f73"],
Cell[162845, 3864, 3755, 66, 327, "Print",ExpressionUUID->"67669572-44b4-40df-bce5-93047ab120ca"]
}, Open  ]],
Cell[166615, 3933, 647, 18, 80, "Input",ExpressionUUID->"56d73c03-19c2-4449-b12b-521b350a1079"],
Cell[CellGroupData[{
Cell[167287, 3955, 183, 3, 37, "Input",ExpressionUUID->"55f4c727-2dff-4e1c-85ad-617e0f801b69"],
Cell[167473, 3960, 19193, 334, 1031, "Output",ExpressionUUID->"ddbb610a-f98c-4bcc-8541-03ee558d9ca8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186703, 4299, 178, 3, 37, "Input",ExpressionUUID->"80bc0118-4953-4d96-82e0-d667db71d476"],
Cell[186884, 4304, 15511, 257, 1005, "Output",ExpressionUUID->"188b869d-9341-4947-9023-7e0259d7dbf7"]
}, Open  ]],
Cell[202410, 4564, 387, 9, 54, "Input",ExpressionUUID->"7b03ba11-ec7d-47c6-8218-4cb4eacefb31"],
Cell[CellGroupData[{
Cell[202822, 4577, 400, 10, 83, "Input",ExpressionUUID->"346dfb6a-75e2-44d5-9993-0b7fa8dd60b0"],
Cell[203225, 4589, 413, 9, 42, "Output",ExpressionUUID->"da976f82-ff0c-45e7-a53d-7860448af93c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203675, 4603, 1449, 43, 173, "Input",ExpressionUUID->"15a4004c-b71f-4729-94e6-1209c00778dd"],
Cell[205127, 4648, 900, 20, 69, "Output",ExpressionUUID->"283577b6-72eb-42e0-9a81-386b62918d85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206064, 4673, 242, 4, 37, "Input",ExpressionUUID->"309fb9a7-5210-4a05-a57b-80bc41d273c4"],
Cell[206309, 4679, 930, 21, 69, "Output",ExpressionUUID->"d3c4d2d3-62d0-43e4-b41d-86bd26b184e6"]
}, Open  ]],
Cell[207254, 4703, 288, 8, 37, "Input",ExpressionUUID->"2da80d42-f5cd-4758-b101-2600984c0a10"],
Cell[CellGroupData[{
Cell[207567, 4715, 187, 3, 37, "Input",ExpressionUUID->"cd1aabd5-a762-4975-b900-b64b1899a641"],
Cell[207757, 4720, 1956, 48, 121, "Output",ExpressionUUID->"71ea0efb-bcec-48c0-9aa7-6904f5b35e5e"]
}, Open  ]],
Cell[209728, 4771, 634, 18, 180, "Input",ExpressionUUID->"20f181d3-9e9f-4d24-a329-2a49f3988ab6"],
Cell[CellGroupData[{
Cell[210387, 4793, 278, 5, 37, "Input",ExpressionUUID->"e8addacc-76ff-4bcc-8db8-535cb8c5d86f"],
Cell[210668, 4800, 310, 6, 62, "Output",ExpressionUUID->"dd675670-8310-42cb-b069-16c8921481d8"]
}, Open  ]],
Cell[210993, 4809, 770, 24, 189, "Input",ExpressionUUID->"2ea9f409-e2cd-48b1-8136-fa059004b768"],
Cell[CellGroupData[{
Cell[211788, 4837, 332, 5, 37, "Input",ExpressionUUID->"0f413d56-ae10-46b3-b2bc-f1da299a448e"],
Cell[212123, 4844, 465, 10, 42, "Output",ExpressionUUID->"8b14bdc9-9f71-4628-af14-f7a58e40d1bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212625, 4859, 1592, 48, 218, "Input",ExpressionUUID->"3828b0a1-0c21-4d05-91a6-6fd90e2a4a9e"],
Cell[214220, 4909, 3662, 76, 251, "Output",ExpressionUUID->"bb823c65-23ea-4282-bf1a-53dfa665b96d"]
}, Open  ]],
Cell[217897, 4988, 258, 6, 37, "Input",ExpressionUUID->"3ee27bfd-5ed4-41d0-9d79-c81af9eb3843"],
Cell[CellGroupData[{
Cell[218180, 4998, 622, 16, 83, "Input",ExpressionUUID->"4ff3a9b3-a332-4188-85b0-d1d44c7f7b46"],
Cell[218805, 5016, 898, 20, 69, "Output",ExpressionUUID->"b0e1da02-bf70-4a05-a63a-b7d55ef32bc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219740, 5041, 190, 3, 37, "Input",ExpressionUUID->"ea8a872e-e625-4342-afc4-54cf1e5ba5f4"],
Cell[219933, 5046, 877, 20, 69, "Output",ExpressionUUID->"01096f64-d412-437b-8532-e9d879fff515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220847, 5071, 573, 15, 83, "Input",ExpressionUUID->"7da8a83f-f02c-4065-9d98-a387a5c7f954"],
Cell[221423, 5088, 873, 20, 114, "Output",ExpressionUUID->"09b93589-dd6f-4ec0-8a11-ebcf2aee07ef"]
}, Open  ]],
Cell[222311, 5111, 154, 3, 37, "Input",ExpressionUUID->"16b66cfd-0f75-4d9e-a3b6-cc0440c15596"]
}, Open  ]]
}
]
*)

